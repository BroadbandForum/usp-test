<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <meta name="description" content="USP – The User Services Platform: Conformance Test Plan for USP Agents" />
  <title>BBF – USP – The User Services Platform</title>
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    div.columns{display: flex; gap: min(4vw, 1.5em);}
    div.column{flex: auto; overflow-x: auto;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    ul.task-list li input[type="checkbox"] {
      width: 0.8em;
      margin: 0 0.8em 0.2em -1.6em;
      vertical-align: middle;
    }
    .display.math{display: block; text-align: center; margin: 0.5rem auto;}
  </style>
  <link rel="stylesheet" href="bbf.css" />
  <link rel="stylesheet" href="extra.css" />
  <link rel="stylesheet" href="toc.css" />
  <link rel="stylesheet" href="release.css" />
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
  <![endif]-->
</head>
<body>
<div class="main-content">
<header id="title-block-header">
<h1 class="title">USP – The User Services Platform</h1>
<p class="subtitle">Issue: 1 Amendment 2 <span
class="release"></span></p>
<p class="date">Issue Date: November 2022</p>
</header>
<nav id="TOC" role="doc-toc">
<ul>
<li><a href="#sec:executive-summary"
id="toc-sec:executive-summary">Executive Summary <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:purpose" id="toc-sec:purpose">Purpose <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:scope" id="toc-sec:scope">Scope <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:test-setup" id="toc-sec:test-setup">Test Setup <img
src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:test-equipment" id="toc-sec:test-equipment">Test
Equipment <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:test-setup-and-execution"
id="toc-sec:test-setup-and-execution">Test Setup and Execution <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:universal-test-metrics"
id="toc-sec:universal-test-metrics">Universal Test Metrics <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:notes-about-test-case-descriptions"
id="toc-sec:notes-about-test-case-descriptions">Notes about test case
descriptions <img src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:messages-and-path-names"
id="toc-sec:messages-and-path-names">1 Messages and Path Names <img
src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a
href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-succeed"
id="toc-sec:add-message-with-allow-partial-false-single-object-required-parameters-succeed">1.1
Add message with allow partial false, single object, required parameters
succeed <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:add-message-with-allow-partial-true-single-object-required-parameters-succeed"
id="toc-sec:add-message-with-allow-partial-true-single-object-required-parameters-succeed">1.2
Add message with allow partial true, single object, required parameters
succeed <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-fail"
id="toc-sec:add-message-with-allow-partial-false-single-object-required-parameters-fail">1.3
Add message with allow partial false, single object, required parameters
fail <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:add-message-with-allow-partial-false-single-invalid-object"
id="toc-sec:add-message-with-allow-partial-false-single-invalid-object">1.4
Add message with allow partial false, single invalid object <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:add-message-with-allow-partial-false-multiple-objects"
id="toc-sec:add-message-with-allow-partial-false-multiple-objects">1.5
Add message with allow partial false, multiple objects <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:add-message-with-allow-partial-false-multiple-objects-with-an-invalid-object"
id="toc-sec:add-message-with-allow-partial-false-multiple-objects-with-an-invalid-object">1.6
Add message with allow partial false, multiple objects with an invalid
object <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:add-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object"
id="toc-sec:add-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.7
Add message with allow partial false, multiple objects, required
parameters fail in single object <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:add-message-with-allow-partial-true-required-parameters-fail-invalid-type-single-object"
id="toc-sec:add-message-with-allow-partial-true-required-parameters-fail-invalid-type-single-object">1.8
Add message with allow partial true, required parameters fail, invalid
type, single object <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:add-message-with-allow-partial-true-required-parameters-fail-multiple-objects"
id="toc-sec:add-message-with-allow-partial-true-required-parameters-fail-multiple-objects">1.9
Add message with allow partial true, required parameters fail, multiple
objects <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:add-message-with-unique-key-addressing-in-path"
id="toc-sec:add-message-with-unique-key-addressing-in-path">1.10 Add
message with unique key addressing in path <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-allow-partial-false-required-parameters-pass"
id="toc-sec:set-message-with-allow-partial-false-required-parameters-pass">1.11
Set message with allow partial false, required parameters pass <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-allow-partial-true-required-parameters-pass"
id="toc-sec:set-message-with-allow-partial-true-required-parameters-pass">1.12
Set message with allow partial true, required parameters pass <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:set-message-with-allow-partial-false-multiple-objects"
id="toc-sec:set-message-with-allow-partial-false-multiple-objects">1.13
Set message with allow partial false, multiple objects <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-allow-partial-false-required-parameters-fail"
id="toc-sec:set-message-with-allow-partial-false-required-parameters-fail">1.14
Set message with allow partial false, required parameters fail <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object"
id="toc-sec:set-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.15
Set message with allow partial false, multiple objects, required
parameters fail in single object <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-allow-partial-true-required-parameter-fails-multiple-objects"
id="toc-sec:set-message-with-allow-partial-true-required-parameter-fails-multiple-objects">1.16
Set message with allow partial true, required parameter fails, multiple
objects <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-allow-partial-true-non-required-parameter-fails-multiple-parameters"
id="toc-sec:set-message-with-allow-partial-true-non-required-parameter-fails-multiple-parameters">1.17
Set message with allow partial true, non-required parameter fails,
multiple parameters <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:set-message-with-unique-key-addressing-in-path"
id="toc-sec:set-message-with-unique-key-addressing-in-path">1.18 Set
message with unique key addressing in path <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-pass"
id="toc-sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-pass">1.19
Set message with wildcard search path, allow partial false, required
parameters pass <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-fail"
id="toc-sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-fail">1.20
Set message with wildcard search path, allow partial false, required
parameters fail <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:set-message-with-wildcard-search-path-allow-partial-true-required-parameters-fail"
id="toc-sec:set-message-with-wildcard-search-path-allow-partial-true-required-parameters-fail">1.21
Set message with wildcard search path, allow partial true, required
parameters fail <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:set-message-with-search-expression-search-path"
id="toc-sec:set-message-with-search-expression-search-path">1.22 Set
message with search expression search path <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:set-message-with-path-that-matches-no-objects"
id="toc-sec:set-message-with-path-that-matches-no-objects">1.23 Set
message with path that matches no objects <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-false-valid-object-instance"
id="toc-sec:delete-message-with-allow-partial-false-valid-object-instance">1.24
Delete message with allow partial false, valid object instance <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-false-object-instance-doesnt-exist"
id="toc-sec:delete-message-with-allow-partial-false-object-instance-doesnt-exist">1.25
Delete message with allow partial false, object instance doesn’t exist
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-false-invalid-object"
id="toc-sec:delete-message-with-allow-partial-false-invalid-object">1.26
Delete message with allow partial false, invalid object <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-false-multiple-objects"
id="toc-sec:delete-message-with-allow-partial-false-multiple-objects">1.27
Delete message with allow partial false, multiple objects <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-false-multiple-objects-invalid-object"
id="toc-sec:delete-message-with-allow-partial-false-multiple-objects-invalid-object">1.28
Delete message with allow partial false, multiple objects, invalid
object <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-true-object-instance-doesnt-exist"
id="toc-sec:delete-message-with-allow-partial-true-object-instance-doesnt-exist">1.29
Delete message with allow partial true, object instance doesn’t exist
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:delete-message-with-allow-partial-true-invalid-object"
id="toc-sec:delete-message-with-allow-partial-true-invalid-object">1.30
Delete message with allow partial true, invalid object <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-true-multiple-objects-invalid-object"
id="toc-sec:delete-message-with-allow-partial-true-multiple-objects-invalid-object">1.31
Delete message with allow partial true, multiple objects, invalid object
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-allow-partial-true-multiple-objects-object-doesnt-exist"
id="toc-sec:delete-message-with-allow-partial-true-multiple-objects-object-doesnt-exist">1.32
Delete message with allow partial true, multiple objects, object doesn’t
exist <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:delete-message-with-unique-key-addressing"
id="toc-sec:delete-message-with-unique-key-addressing">1.33 Delete
message with unique key addressing <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-wildcard-search-path-valid-objects"
id="toc-sec:delete-message-with-wildcard-search-path-valid-objects">1.34
Delete message with wildcard search path, valid objects <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:delete-message-with-search-expression-search-path"
id="toc-sec:delete-message-with-search-expression-search-path">1.35
Delete message with search expression search path <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-with-full-parameter-path"
id="toc-sec:get-message-with-full-parameter-path">1.36 Get message with
full parameter path <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-with-multiple-full-parameter-paths-same-object"
id="toc-sec:get-message-with-multiple-full-parameter-paths-same-object">1.37
Get message with multiple full parameter paths, same object <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-with-multiple-full-parameter-paths-different-objects"
id="toc-sec:get-message-with-multiple-full-parameter-paths-different-objects">1.38
Get message with multiple full parameter paths, different objects <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-with-object-path"
id="toc-sec:get-message-with-object-path">1.39 Get message with object
path <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-with-object-instance-path"
id="toc-sec:get-message-with-object-instance-path">1.40 Get message with
object instance path <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-with-invalid-parameter"
id="toc-sec:get-message-with-invalid-parameter">1.41 Get message with
invalid parameter <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-with-invalid-parameter-and-valid-parameter"
id="toc-sec:get-message-with-invalid-parameter-and-valid-parameter">1.42
Get message with invalid parameter and valid parameter <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-using-unique-key-addressing"
id="toc-sec:get-message-using-unique-key-addressing">1.43 Get message
using unique key addressing <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-using-wildcard-search-path-on-full-parameter"
id="toc-sec:get-message-using-wildcard-search-path-on-full-parameter">1.44
Get message using wildcard search path on full parameter <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-using-wildcard-search-path-on-object-path"
id="toc-sec:get-message-using-wildcard-search-path-on-object-path">1.45
Get message using wildcard search path on object path <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-using-search-expression-search-path-equivalence"
id="toc-sec:get-message-using-search-expression-search-path-equivalence">1.46
Get message using search expression search path (equivalence) <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-using-search-expression-search-path-non-equivalence"
id="toc-sec:get-message-using-search-expression-search-path-non-equivalence">1.47
Get message using search expression search path (non-equivalence) <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-using-search-expression-search-path-exclusive-greater-comparison"
id="toc-sec:get-message-using-search-expression-search-path-exclusive-greater-comparison">1.48
Get message using search expression search path (exclusive greater
comparison) <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-using-search-expression-search-path-exclusive-lesser-comparison"
id="toc-sec:get-message-using-search-expression-search-path-exclusive-lesser-comparison">1.49
Get message using search expression search path (exclusive lesser
comparison) <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-using-search-expression-search-path-inclusive-greater-comparison"
id="toc-sec:get-message-using-search-expression-search-path-inclusive-greater-comparison">1.50
Get message using search expression search path (inclusive greater
comparison) <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-using-search-expression-search-path-inclusive-lesser-comparison"
id="toc-sec:get-message-using-search-expression-search-path-inclusive-lesser-comparison">1.51
Get message using search expression search path (inclusive lesser
comparison) <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:notify---subscription-creation-using-value-change"
id="toc-sec:notify---subscription-creation-using-value-change">1.52
Notify - Subscription creation using Value Change <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:notify---subscription-deletion-using-value-change"
id="toc-sec:notify---subscription-deletion-using-value-change">1.53
Notify - Subscription Deletion Using Value Change <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:notification-retry-using-value-change"
id="toc-sec:notification-retry-using-value-change">1.54 Notification
Retry using Value Change <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:subscription-expiration-using-value-change"
id="toc-sec:subscription-expiration-using-value-change">1.55
Subscription Expiration using Value Change <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:notification-retry-expiration-using-value-change"
id="toc-sec:notification-retry-expiration-using-value-change">1.56
Notification Retry Expiration using Value Change <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:objectcreation-notification"
id="toc-sec:objectcreation-notification">1.57 ObjectCreation
Notification <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:objectdeletion-notification"
id="toc-sec:objectdeletion-notification">1.58 ObjectDeletion
Notification <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:event-notification-using-periodic"
id="toc-sec:event-notification-using-periodic">1.59 Event Notification
using Periodic! <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:onboardrequest-notification"
id="toc-sec:onboardrequest-notification">1.60 OnBoardRequest
Notification <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:operate-message-using-reboot-with-send_resp-true"
id="toc-sec:operate-message-using-reboot-with-send_resp-true">1.61
Operate message using Reboot() with send_resp true <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:operate-message-using-reboot-with-send_resp-false"
id="toc-sec:operate-message-using-reboot-with-send_resp-false">1.62
Operate message using Reboot() with send_resp false <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:operate-message-using-input-arguments-deprecated-by-1.79"
id="toc-sec:operate-message-using-input-arguments-deprecated-by-1.79">1.63
Operate message using input arguments (DEPRECATED by 1.79) <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:asynchronous-operation-with-send_resp-true"
id="toc-sec:asynchronous-operation-with-send_resp-true">1.64
Asynchronous operation with send_resp true <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:asynchronous-operation-with-send_resp-false"
id="toc-sec:asynchronous-operation-with-send_resp-false">1.65
Asynchronous operation with send_resp false <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:getinstances-using-a-single-object-first_level_only-true"
id="toc-sec:getinstances-using-a-single-object-first_level_only-true">1.66
GetInstances using a single object, first_level_only true <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:getinstances-using-a-single-object-first_level_only-false"
id="toc-sec:getinstances-using-a-single-object-first_level_only-false">1.67
GetInstances using a single object, first_level_only false <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:getinstances-with-multiple-objects"
id="toc-sec:getinstances-with-multiple-objects">1.68 GetInstances with
multiple objects <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:deleted" id="toc-sec:deleted"><em>1.69 DELETED</em>
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:getinstances-with-wildcard-search-path"
id="toc-sec:getinstances-with-wildcard-search-path">1.70 GetInstances
with wildcard search path <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:getinstances-with-search-expression-search-path"
id="toc-sec:getinstances-with-search-expression-search-path">1.71
GetInstances with search expression search path <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:getsupporteddm-using-a-single-object-first_level_only-false-all-options"
id="toc-sec:getsupporteddm-using-a-single-object-first_level_only-false-all-options">1.72
GetSupportedDM using a single object, first_level_only false, all
options <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-all-options"
id="toc-sec:getsupporteddm-using-a-single-object-first_level_only-true-all-options">1.73
GetSupportedDM using a single object, first_level_only true, all options
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-no-options"
id="toc-sec:getsupporteddm-using-a-single-object-first_level_only-true-no-options">1.74
GetSupportedDM using a single object, first_level_only true, no options
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:getsupporteddm-using-multiple-objects-first_level_only-true-all-options"
id="toc-sec:getsupporteddm-using-multiple-objects-first_level_only-true-all-options">1.75
GetSupportedDM using multiple objects, first_level_only true, all
options <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:getsupporteddm-on-root-object-all-options"
id="toc-sec:getsupporteddm-on-root-object-all-options">1.76
GetSupportedDM on root object, all options <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:getsupporteddm-on-unsupported-object"
id="toc-sec:getsupporteddm-on-unsupported-object">1.77 GetSupportedDM on
unsupported object <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:removal-of-subscriptions-that-have-no-associated-controller"
id="toc-sec:removal-of-subscriptions-that-have-no-associated-controller">1.78
Removal of subscriptions that have no associated controller <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:operate-message-using-input-arguments"
id="toc-sec:operate-message-using-input-arguments">1.79 Operate message
using input arguments <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:getsupportedprotocol"
id="toc-sec:getsupportedprotocol">1.80 GetSupportedProtocol <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:automatic-unique-key-generation"
id="toc-sec:automatic-unique-key-generation">1.81 Automatic unique key
generation <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-with-unmatched-search-expression"
id="toc-sec:get-message-with-unmatched-search-expression">1.82 Get
message with unmatched search expression <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:getinstances-message-with-unmatched-search-expression"
id="toc-sec:getinstances-message-with-unmatched-search-expression">1.83
GetInstances message with unmatched search expression <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:notification---subscription-using-search-paths"
id="toc-sec:notification---subscription-using-search-paths">1.84
Notification - Subscription using search paths <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:for-future-work-get-message-with-unresolved-instances---addressing-by-instance-number"
id="toc-sec:for-future-work-get-message-with-unresolved-instances---addressing-by-instance-number">1.85
(For future work) Get message with unresolved instances - addressing by
instance number <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-with-unresolved-instances---using-a-search-path"
id="toc-sec:get-message-with-unresolved-instances---using-a-search-path">1.86
Get message with unresolved instances - using a search path <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:get-message-with-unresolved-instances---using-an-object-path"
id="toc-sec:get-message-with-unresolved-instances---using-an-object-path">1.87
Get message with unresolved instances - using an object path <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:add-message-fails-when-unique-key-is-invalid"
id="toc-sec:add-message-fails-when-unique-key-is-invalid">1.88 Add
message fails when unique key is invalid <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:get-message-using-max_depth"
id="toc-sec:get-message-using-max_depth">1.89 Get message using
max_depth <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:delete-message-with-search-expression-that-matches-no-objects"
id="toc-sec:delete-message-with-search-expression-that-matches-no-objects">1.90
Delete message with search expression that matches no objects <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:unknown-arguments-in-an-operate-message"
id="toc-sec:unknown-arguments-in-an-operate-message">1.91 Unknown
arguments in an Operate message <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:agent-uses-default-values-for-operate-arguments"
id="toc-sec:agent-uses-default-values-for-operate-arguments">1.92 Agent
uses default values for Operate arguments <img src="permalink.png"
style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:authentication-and-access-control-test-cases"
id="toc-sec:authentication-and-access-control-test-cases">2
Authentication and Access Control Test Cases <img src="permalink.png"
style="width:0.8em" /></a>
<ul>
<li><a
href="#sec:agent-does-not-accept-messages-from-its-own-endpoint-id"
id="toc-sec:agent-does-not-accept-messages-from-its-own-endpoint-id">2.1
Agent does not accept messages from its own Endpoint ID <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:agent-rejects-messages-that-do-not-contain-its-to_id-in-the-usp-record"
id="toc-sec:agent-rejects-messages-that-do-not-contain-its-to_id-in-the-usp-record">2.2
Agent rejects messages that do not contain its to_id in the USP Record
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:agent-does-not-process-messages-without-s-certificate-information---deprecated"
id="toc-sec:agent-does-not-process-messages-without-s-certificate-information---deprecated">2.3
Agent does not process messages without ’s certificate information -
DEPRECATED <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:agent-rejects-messages-from-endpoint-ids-that-are-not-in-subjectaltname---deprecated"
id="toc-sec:agent-rejects-messages-from-endpoint-ids-that-are-not-in-subjectaltname---deprecated">2.4
Agent rejects messages from Endpoint IDs that are not in subjectAltName
- DEPRECATED <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:agent-use-of-self-signed-certificates---deprecated"
id="toc-sec:agent-use-of-self-signed-certificates---deprecated">2.5
Agent use of self-signed certificates - DEPRECATED <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:connecting-without-absolute-time"
id="toc-sec:connecting-without-absolute-time">2.6 Connecting without
absolute time <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:agent-ignores-unsigned-or-invalid-record-signatures"
id="toc-sec:agent-ignores-unsigned-or-invalid-record-signatures">2.7
Agent ignores unsigned or invalid Record signatures <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:agent-ignores-invalid-tls-certificate"
id="toc-sec:agent-ignores-invalid-tls-certificate">2.8 Agent ignores
invalid TLS certificate <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-the-untrusted-role"
id="toc-sec:use-of-the-untrusted-role">2.9 Use of the Untrusted role
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:adding-a-role" id="toc-sec:adding-a-role">2.10 Adding
a Role <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---object-creation-allowed"
id="toc-sec:permissions---object-creation-allowed">2.11 Permissions -
Object Creation Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---object-creation-not-allowed"
id="toc-sec:permissions---object-creation-not-allowed">2.12 Permissions
- Object Creation Not Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---object-deletion-allowed"
id="toc-sec:permissions---object-deletion-allowed">2.13 Permissions -
Object Deletion Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---object-deletion-not-allowed"
id="toc-sec:permissions---object-deletion-not-allowed">2.14 Permissions
- Object Deletion Not Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---parameter-update-allowed"
id="toc-sec:permissions---parameter-update-allowed">2.15 Permissions -
Parameter Update Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---parameter-update-not-allowed"
id="toc-sec:permissions---parameter-update-not-allowed">2.16 Permissions
- Parameter Update Not Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---operation-allowed"
id="toc-sec:permissions---operation-allowed">2.17 Permissions -
Operation Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---operation-not-allowed"
id="toc-sec:permissions---operation-not-allowed">2.18 Permissions -
Operation Not Allowed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:permissions---value-change-notification-allowed-on-parameter"
id="toc-sec:permissions---value-change-notification-allowed-on-parameter">2.19
Permissions - Value Change Notification Allowed on Parameter <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:permissions---value-change-notification-not-allowed-on-parameter"
id="toc-sec:permissions---value-change-notification-not-allowed-on-parameter">2.20
Permissions - Value Change Notification Not Allowed on Parameter <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:permissions---overlapping-permissions"
id="toc-sec:permissions---overlapping-permissions">2.21 Permissions -
Overlapping Permissions <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:using-get-when-no-read-permissions-are-available-on-some-parameters"
id="toc-sec:using-get-when-no-read-permissions-are-available-on-some-parameters">2.22
Using Get when no read permissions are available on some parameters <img
src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:usp-record-test-cases"
id="toc-sec:usp-record-test-cases">3 USP Record Test Cases <img
src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:bad-request-outside-a-session-context"
id="toc-sec:bad-request-outside-a-session-context">3.1 Bad request
outside a session context <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:agent-verifies-non-payload-field-integrity"
id="toc-sec:agent-verifies-non-payload-field-integrity">3.2 Agent
Verifies Non-Payload Field Integrity <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:agent-rejects-invalid-signature-starting-a-session-context"
id="toc-sec:agent-rejects-invalid-signature-starting-a-session-context">3.3
Agent rejects invalid signature starting a session context <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:using-tls-for-usp-record-integrity"
id="toc-sec:using-tls-for-usp-record-integrity">3.4 Using TLS for USP
Record Integrity <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:failure-to-establish-tls"
id="toc-sec:failure-to-establish-tls">3.5 Failure to Establish TLS <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:agent-does-not-accept-tls-renegotiation-for-e2e-message-exchange"
id="toc-sec:agent-does-not-accept-tls-renegotiation-for-e2e-message-exchange">3.6
Agent does not accept TLS renegotiation for E2E message exchange <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-x.509-certificates"
id="toc-sec:use-of-x.509-certificates">3.7 Use of X.509 Certificates
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:establishing-a-session-context"
id="toc-sec:establishing-a-session-context">3.8 Establishing a Session
Context <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:receipt-of-a-record-out-of-a-session-context"
id="toc-sec:receipt-of-a-record-out-of-a-session-context">3.9 Receipt of
a Record out of a Session Context <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:session-context-expiration"
id="toc-sec:session-context-expiration">3.10 Session Context Expiration
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-sequence-id-and-expected-id"
id="toc-sec:use-of-sequence-id-and-expected-id">3.11 Use of Sequence ID
and Expected ID <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:preservation-of-usp-records"
id="toc-sec:preservation-of-usp-records">3.12 Preservation of USP
Records <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:agent-rejects-records-with-different-payload-security-than-the-established-context"
id="toc-sec:agent-rejects-records-with-different-payload-security-than-the-established-context">3.13
Agent Rejects Records with Different Payload Security than the
Established Context <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-retransmit_id"
id="toc-sec:use-of-retransmit_id">3.14 Use of retransmit_id <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:handling-duplicate-records"
id="toc-sec:handling-duplicate-records">3.15 Handling Duplicate Records
<img src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:general-mtp-test-cases"
id="toc-sec:general-mtp-test-cases">4 General MTP Test Cases <img
src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:use-of-x.509-certificates-at-the-mtp-layer"
id="toc-sec:use-of-x.509-certificates-at-the-mtp-layer">4.1 Use of X.509
certificates at the MTP layer <img src="permalink.png"
style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:coap-test-cases-deprecated"
id="toc-sec:coap-test-cases-deprecated">5 CoAP Test Cases (DEPRECATED)
<img src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:mapping-a-usp-record-to-a-coap-message-deprecated"
id="toc-sec:mapping-a-usp-record-to-a-coap-message-deprecated">5.1
Mapping a USP Record to a CoAP message (DEPRECATED) <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:usp-records-that-exceed-coap-message-size-deprecated"
id="toc-sec:usp-records-that-exceed-coap-message-size-deprecated">5.2
USP Records that exceed CoAP message size (DEPRECATED) <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:successful-coap-exchange-deprecated"
id="toc-sec:successful-coap-exchange-deprecated">5.3 Successful CoAP
exchange (DEPRECATED) <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:failed-coap-exchange---timeout-deprecated"
id="toc-sec:failed-coap-exchange---timeout-deprecated">5.4 Failed CoAP
exchange - timeout (DEPRECATED) <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:failed-coap-exchange---invalid-method-deprecated"
id="toc-sec:failed-coap-exchange---invalid-method-deprecated">5.5 Failed
CoAP Exchange - Invalid Method (DEPRECATED) <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:failed-coap-exchange---invalid-content-format-deprecated"
id="toc-sec:failed-coap-exchange---invalid-content-format-deprecated">5.6
Failed CoAP Exchange - Invalid Content-Format (DEPRECATED) <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:failed-coap-exchange---invalid-usp-record-deprecated"
id="toc-sec:failed-coap-exchange---invalid-usp-record-deprecated">5.7
Failed CoAP Exchange - Invalid USP Record (DEPRECATED) <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-dtls-deprecated"
id="toc-sec:use-of-dtls-deprecated">5.8 Use of DTLS (DEPRECATED) <img
src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:stomp-test-cases" id="toc-sec:stomp-test-cases">6
STOMP Test Cases <img src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:support-of-required-profiles"
id="toc-sec:support-of-required-profiles">6.1 Support of Required
Profiles <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:stomp-session-establishment"
id="toc-sec:stomp-session-establishment">6.2 STOMP session establishment
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:stomp-connection-retry"
id="toc-sec:stomp-connection-retry">6.3 STOMP Connection Retry <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:successful-usp-message-over-stomp-with-required-headers"
id="toc-sec:successful-usp-message-over-stomp-with-required-headers">6.4
Successful USP message over STOMP with required headers <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:stomp-destination---provided-in-subscribe-dest"
id="toc-sec:stomp-destination---provided-in-subscribe-dest">6.5 STOMP
destination - provided in subscribe-dest <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:stomp-destination---configured-in-usp-data-model"
id="toc-sec:stomp-destination---configured-in-usp-data-model">6.6 STOMP
destination - configured in USP data model <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:stomp-destination---terminates-unconfigured-session"
id="toc-sec:stomp-destination---terminates-unconfigured-session">6.7
STOMP Destination - terminates unconfigured session <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-stomp-heartbeat-mechanism"
id="toc-sec:use-of-stomp-heartbeat-mechanism">6.8 Use of STOMP heartbeat
mechanism <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:error-handling---unprocessed-record"
id="toc-sec:error-handling---unprocessed-record">6.9 Error Handling -
Unprocessed Record <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:agents-stomp-destination-is-changed"
id="toc-sec:agents-stomp-destination-is-changed">6.10 Agent’s STOMP
destination is changed <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:stomp---use-of-tls"
id="toc-sec:stomp---use-of-tls">6.11 STOMP - Use of TLS <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:stomp---use-of-connect-record"
id="toc-sec:stomp---use-of-connect-record">6.12 STOMP - Use of Connect
Record <img src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:websocket-test-cases"
id="toc-sec:websocket-test-cases">7 WebSocket Test Cases <img
src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:session-establishment"
id="toc-sec:session-establishment">7.1 Session Establishment <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-only-one-session"
id="toc-sec:use-of-only-one-session">7.2 Use of only one session <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:agent-session-acceptance-from-controller"
id="toc-sec:agent-session-acceptance-from-controller">7.3 Agent session
acceptance from Controller <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:closing-a-websocket-connection"
id="toc-sec:closing-a-websocket-connection">7.4 Closing a WebSocket
Connection <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:rejection-of-session-establishment"
id="toc-sec:rejection-of-session-establishment">7.5 Rejection of Session
Establishment <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:error-handling---unprocessed-records"
id="toc-sec:error-handling---unprocessed-records">7.6 Error Handling -
Unprocessed Records <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-ping-and-pong-frames"
id="toc-sec:use-of-ping-and-pong-frames">7.7 Use of Ping and Pong frames
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:websocket-session-retry"
id="toc-sec:websocket-session-retry">7.8 WebSocket Session Retry <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-tls" id="toc-sec:use-of-tls">7.9 Use of TLS
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:websocket---use-of-connect-record"
id="toc-sec:websocket---use-of-connect-record">7.10 WebSocket - Use of
Connect Record <img src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:discovery-test-cases"
id="toc-sec:discovery-test-cases">8 Discovery Test Cases <img
src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:dhcp-discovery---agent-request-requirements"
id="toc-sec:dhcp-discovery---agent-request-requirements">8.1 DHCP
Discovery - Agent Request Requirements <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:dhcp-discovery---agent-handling-of-received-options"
id="toc-sec:dhcp-discovery---agent-handling-of-received-options">8.2
DHCP Discovery - Agent handling of received options <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:dhcp-discovery---fqdn-leads-to-dns-query"
id="toc-sec:dhcp-discovery---fqdn-leads-to-dns-query">8.3 DHCP Discovery
- FQDN Leads to DNS Query <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:mdns" id="toc-sec:mdns">8.4 mDNS <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mdns-and-message-transfer-protocols"
id="toc-sec:mdns-and-message-transfer-protocols">8.5 mDNS and Message
Transfer Protocols <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:dns---dns-record-requirements"
id="toc-sec:dns---dns-record-requirements">8.6 DNS - DNS Record
Requirements <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mdns-request-response"
id="toc-sec:mdns-request-response">8.7 mDNS request response <img
src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:functionality-test-cases"
id="toc-sec:functionality-test-cases">9 Functionality Test Cases <img
src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:use-of-the-timer-event-deprecated-by-9.11"
id="toc-sec:use-of-the-timer-event-deprecated-by-9.11">9.1 Use of the
Timer! Event (DEPRECATED by 9.11) <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-device.localagent.addcertificate"
id="toc-sec:use-of-device.localagent.addcertificate">9.2 Use of
Device.LocalAgent.AddCertificate() <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:upgraded-the-agents-firmware---autoactivate-enabled"
id="toc-sec:upgraded-the-agents-firmware---autoactivate-enabled">9.3
Upgraded the Agent’s Firmware - Autoactivate enabled <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:upgrading-the-agents-firmware---using-timewindow-immediate"
id="toc-sec:upgrading-the-agents-firmware---using-timewindow-immediate">9.4
Upgrading the Agent’s Firmware - Using TimeWindow, Immediate <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:upgrading-the-agents-firmware---using-timewindow-anytime"
id="toc-sec:upgrading-the-agents-firmware---using-timewindow-anytime">9.5
Upgrading the Agent’s Firmware - Using TimeWindow, AnyTime <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:upgrading-the-agents-firmware---validated-firmware"
id="toc-sec:upgrading-the-agents-firmware---validated-firmware">9.6
Upgrading the Agent’s Firmware - Validated Firmware <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:upgrading-the-agents-firmware---download-to-active-bank"
id="toc-sec:upgrading-the-agents-firmware---download-to-active-bank">9.7
Upgrading the Agent’s Firmware - Download to Active Bank <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:upgrading-the-agents-firmware---cancelling-a-request-using-the-cancel-command"
id="toc-sec:upgrading-the-agents-firmware---cancelling-a-request-using-the-cancel-command">9.8
Upgrading the Agent’s Firmware - Cancelling a request using the Cancel()
command <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:adding-a-new-controller---onboardrequest"
id="toc-sec:adding-a-new-controller---onboardrequest">9.9 Adding a New
Controller - OnBoardRequest <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-the-boot-event-and-bootparameters"
id="toc-sec:use-of-the-boot-event-and-bootparameters">9.10 Use of the
Boot! event and BootParameters <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-of-the-timer-event"
id="toc-sec:use-of-the-timer-event">9.11 Use of the Timer! Event <img
src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:bulk-data-collection-test-cases"
id="toc-sec:bulk-data-collection-test-cases">10 Bulk Data Collection
Test Cases <img src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:use-bulkdata-collection-using-http-and-json"
id="toc-sec:use-bulkdata-collection-using-http-and-json">10.1 Use
BulkData collection using HTTP and JSON <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-using-https-and-json"
id="toc-sec:use-bulkdata-collection-using-https-and-json">10.2 Use
BulkData collection using HTTPS and JSON <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-using-http-and-csv"
id="toc-sec:use-bulkdata-collection-using-http-and-csv">10.3 Use
BulkData collection using HTTP and CSV <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-using-https-and-csv"
id="toc-sec:use-bulkdata-collection-using-https-and-csv">10.4 Use
BulkData collection using HTTPS and CSV <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:use-bulkdata-collection-using-http-with-uri-parameters"
id="toc-sec:use-bulkdata-collection-using-http-with-uri-parameters">10.5
Use BulkData collection using HTTP with URI Parameters <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a
href="#sec:use-bulkdata-collection-using-https-with-uri-parameters"
id="toc-sec:use-bulkdata-collection-using-https-with-uri-parameters">10.6
Use BulkData collection using HTTPS with URI Parameters <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:bulkdata-collection-retry-mechanism-over-http"
id="toc-sec:bulkdata-collection-retry-mechanism-over-http">10.7 BulkData
collection retry mechanism over HTTP <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a
href="#sec:use-bulkdata-collection-using-http-with-wildcard-parameter"
id="toc-sec:use-bulkdata-collection-using-http-with-wildcard-parameter">10.8
Use BulkData collection using HTTP with wildcard parameter <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-using-http-with-object-path"
id="toc-sec:use-bulkdata-collection-using-http-with-object-path">10.9
Use BulkData collection using HTTP with Object Path <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-push-event"
id="toc-sec:use-bulkdata-collection-push-event">10.10 Use BulkData
collection Push event <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-push-event-with-wildcard-path"
id="toc-sec:use-bulkdata-collection-push-event-with-wildcard-path">10.11
Use BulkData collection Push event with Wildcard path <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-push-event-with-object-path"
id="toc-sec:use-bulkdata-collection-push-event-with-object-path">10.12
Use BulkData collection Push event with Object path <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:use-bulkdata-collection-over-mqtt"
id="toc-sec:use-bulkdata-collection-over-mqtt">10.13 Use BulkData
collection over MQTT <img src="permalink.png"
style="width:0.8em" /></a></li>
</ul></li>
<li><a href="#sec:mqtt-test-cases" id="toc-sec:mqtt-test-cases">11 MQTT
Test Cases <img src="permalink.png" style="width:0.8em" /></a>
<ul>
<li><a href="#sec:support-of-required-mqtt-profiles"
id="toc-sec:support-of-required-mqtt-profiles">11.1 Support of Required
MQTT Profiles <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-session-establishment-using-a-connect-packet"
id="toc-sec:mqtt-session-establishment-using-a-connect-packet">11.2 MQTT
session establishment using a CONNECT packet <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-use-of-tls" id="toc-sec:mqtt-use-of-tls">11.3
MQTT Use of TLS <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-5.0-clientid" id="toc-sec:mqtt-5.0-clientid">11.4
MQTT 5.0 ClientID <img src="permalink.png"
style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-clientid-persistence"
id="toc-sec:mqtt-clientid-persistence">11.5 MQTT ClientID Persistence
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-message-retry"
id="toc-sec:mqtt-message-retry">11.6 MQTT Message Retry <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-keep-alive" id="toc-sec:mqtt-keep-alive">11.7
MQTT Keep Alive <img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-subscribe-packet"
id="toc-sec:mqtt-subscribe-packet">11.8 MQTT SUBSCRIBE Packet <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-new-subscription"
id="toc-sec:mqtt-new-subscription">11.9 MQTT New Subscription <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-no-topic-in-connack"
id="toc-sec:mqtt-no-topic-in-connack">11.10 MQTT No Topic in CONNACK
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-failure-to-subscribe"
id="toc-sec:mqtt-failure-to-subscribe">11.11 MQTT Failure to Subscribe
<img src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-publish-packet"
id="toc-sec:mqtt-publish-packet">11.12 MQTT PUBLISH Packet <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-qos" id="toc-sec:mqtt-qos">11.13 MQTT QoS <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-reply-to-topic"
id="toc-sec:mqtt-reply-to-topic">11.14 MQTT Reply to Topic <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-5.0-content-type"
id="toc-sec:mqtt-5.0-content-type">11.15 MQTT 5.0 Content Type <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt-connection-retry"
id="toc-sec:mqtt-connection-retry">11.16 MQTT Connection Retry <img
src="permalink.png" style="width:0.8em" /></a></li>
<li><a href="#sec:mqtt---use-of-connect-record"
id="toc-sec:mqtt---use-of-connect-record">11.17 MQTT - Use of Connect
Record <img src="permalink.png" style="width:0.8em" /></a></li>
</ul></li>
</ul>
</nav>
<h3 class="unnumbered unlisted" id="list-of-figures">List of Figures <a
href="#list-of-figures" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><a href="#fig:basic-test-setup">Basic Test Setup</a></li>
</ol>
<h3 class="unnumbered unlisted" id="list-of-tables">List of Tables <a
href="#list-of-tables" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
</ol>
<h3 class="unnumbered unlisted new-page" id="sec:notice">Notice <a
href="#sec:notice" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>The Broadband Forum is a non-profit corporation organized to create
guidelines for broadband network system development and deployment. This
Test Plan is owned and copyrighted by the Broadband Forum, and portions
of this Test Plan may be owned and/or copyrighted by Broadband Forum
members.</p>
<h3 class="unnumbered unlisted"
id="sec:intellectual-property">Intellectual Property <a
href="#sec:intellectual-property" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Recipients of this document are requested to submit, with their
comments, notification of any relevant patent claims or other
intellectual property rights of which they may be aware that might be
infringed by any implementation of this Test Plan, and to provide
supporting documentation.</p>
<h3 class="unnumbered unlisted" id="sec:terms-of-use">Terms of Use <a
href="#sec:terms-of-use" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Recipients of this document may use it (a) for internal review and
study purposes, (b) to provide to the Broadband Forum the comments and
notification requested in the preceding paragraph, and (c) if the
Recipient is a Broadband Forum member, to implement the Test Plan in a
product or service made commercially available. Any other use of this
Test Plan is expressly prohibited without the prior written consent of
the Broadband Forum.</p>
<p>THIS TEST PLAN IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND
IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT AND ANY IMPLIED
WARRANTIES ARE EXPRESSLY DISCLAIMED. ANY USE OF THIS TEST PLAN SHALL BE
MADE ENTIRELY AT THE USER’S OR IMPLEMENTER’S OWN RISK, AND NEITHER THE
FORUM, NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY
WHATSOEVER TO ANY USER, IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF
ANY NATURE WHATSOEVER, DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF
THIS TEST PLAN, INCLUDING BUT NOT LIMITED TO, ANY CONSEQUENTIAL,
SPECIAL, PUNITIVE, INCIDENTAL AND INDIRECT DAMAGES.</p>
<p>All copies of this Test Plan (or any portion hereof) must include the
notices, legends and other provisions set forth on this page.</p>
<div class="note">
<p>© 2022, The Broadband Forum. All rights reserved. This Broadband
Forum document (TP-469) specifies the Test Plan on which is based the
&lt;BBF.NNN&gt; Certification Program for &lt;type of product&gt;
products. Through an open selection process, the Broadband Forum entered
into an agreement with one or more independent Test Agencies to offer
commercial testing services against this Test Plan and to confirm
results to the Broadband Forum in connection with the Forum’s delivery
of &lt;BBF.NNN&gt; Certification. Offering Certification testing
services against this Test Plan is reserved to the Test Agencies duly
authorized by the Broadband Forum. Broadband Forum members can
independently test against TP-469, but may only produce limited reports
which only detail where a given product has failed a test case.</p>
<p>NOTE: The right to display a Broadband Forum Certification Logo may
only be granted by the Broadband Forum, and that right is available only
to Broadband Forum members that have successfully passed certification
testing by a duly authorized Test Agency. Further details on the
Broadband Forum Certification Programs can be found at <a
href="http://www.broadband-forum.org">http://www.broadband-forum.org</a>.</p>
</div>
<h3 class="unnumbered unlisted new-page" id="sec:issue-history">Issue
History <a href="#sec:issue-history" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<table>
<colgroup>
<col style="width: 18%" />
<col style="width: 82%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Issue Number</th>
<th style="text-align: left;">Changes</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;"><a
href="https://www.broadband-forum.org/download/TP-469.pdf">Release
1.0</a></td>
<td style="text-align: left;"><ul>
<li>First release of this test plan, containing test cases for basic
compliance with TR-369/USP</li>
</ul></td>
</tr>
<tr class="even even">
<td style="text-align: left;">Release 1.0.1</td>
<td style="text-align: left;"><ul>
<li>Deprecated test 7.3</li>
<li>Added flag to the features list to indicate which features are
“not-in-force” and not yet available for certification</li>
<li>Various procedure and metric fixes</li>
</ul></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;"><a
href="https://www.broadband-forum.org/download/TP-469_Corrigendum-2.pdf">Release
1.0.2</a></td>
<td style="text-align: left;"><ul>
<li>Both mandatory and conditional mandatory tests can use alternate
objects or parameters if available</li>
<li>Updated features and requirements</li>
<li>Altered test setup of 1.50 to include three objects</li>
<li>Fixed metrics of 1.25 to use new DeleteResp logic</li>
<li>Fixed tests 1.16 and 1.21 to use the correct error codes</li>
<li>Fixed test 1.20 to only check for at least one error</li>
<li>Fixed test 4.1 to include “OnBoardRequest()” as a conditional
requirement</li>
<li>Fixed test 1.32 to use new DeleteResp logic</li>
<li>Fixed tests 1.73, 1.74, 1.75 to use new GetSupportedDM
first_level_only logic</li>
<li>Fixed error code metric of test 1.8</li>
</ul></td>
</tr>
<tr class="even even">
<td style="text-align: left;">Release 1.0.3</td>
<td style="text-align: left;"><ul>
<li>The metrics of test 1.9 now do not imply order</li>
<li>Test 1.22 metric now requires “at least one” element rather than a
“single” element</li>
<li>Renamed test 1.23</li>
<li>Fixed the metric of test 1.38 to include the instance identifier of
the path</li>
<li>Reworded the purpose of test 1.41</li>
<li>Clarified the test setup of tests 1.66 and 1.67</li>
<li>Fixed a typo in test 6.1 metrics (ServerRetryInitialMultiplier to
ServerRetryIntervalMultiplier)</li>
<li>Fixes other typographical errors</li>
</ul></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;"><a
href="https://www.broadband-forum.org/download/TP-469_Amendment-1.pdf">Release
1.1</a></td>
<td style="text-align: left;"><ul>
<li>Adds test 1.78 Removal of subscriptions that have no associated
controller</li>
<li>Adds test 1.80 GetSupportedProtocol</li>
<li>Adds language reinforcing required tests based on supported
features</li>
<li>Adds test case 1.81 to test automatic unique key generation by the
Agent</li>
<li>Adds negative test metrics to several Set and Delete tests to
validate that operations did not occur upon error (1.7, 1.8, 1.14, 1.15,
1.20, 1.24, 1.27, 1.28, 1.31, 1.32, 1.33, 1.34, 1.35)</li>
<li>Adds section 10 for bulk data collection tests</li>
<li>Adds tests 1.82 and 1.83 to validate Get and GetInstances using
expressions that match zero objects</li>
<li>Adds test 1.84 to exercise the use of search paths in
Subscriptions</li>
<li>Defines deprecation for tests</li>
<li>Deprecates test 1.63 in favor of test 1.79</li>
<li>Deprecates test 9.1 in favor of test 9.11</li>
<li>Deprecates tests 2.3, 2.4, and 2.5</li>
<li>Completely deletes test 1.69</li>
<li>Updates functionality tag on test 1.71 to “supports at least one
multi-instance object”</li>
<li>Clarifies the definition of an empty oper_success element in test
1.32</li>
<li>Rewrites test 2.20 to accomplish its original intent</li>
<li>Changes test 3.6 to check that an Agent does not accept TLS
renegotiation</li>
<li>Changes test 2.15 and 2.16 to use “Enable” rather than “Alias” as a
test parameter</li>
<li>Simplifies test 4.1</li>
<li>Various typographical fixes, some in test procedure path names</li>
<li>Normalizes all protobuf examples in test procedures</li>
<li>Fixes test 2.20 to use the correct permissions</li>
<li>Fixes test 1.47 to use the correct operator</li>
<li>Eases the requirements of test 9.7 for implementation
flexibility</li>
<li>Removes the concept of “not-in-force” test cases and features</li>
<li>Updates tests 1.59, 1.84 to use allow_partial false”</li>
<li>Allows tests 1.3, 1.7, 1.8, 1.21 to use only an invalid parameter
value (not an invalid parameter) and accept 7012 as an acceptable error
code</li>
</ul></td>
</tr>
<tr class="even even">
<td style="text-align: left;"><a
href="https://www.broadband-forum.org/download/TP-469_Amendment-2.pdf">Release
1.2</a></td>
<td style="text-align: left;"><ul>
<li>Deprecates COAP tests</li>
<li>Adds MQTT test cases</li>
<li>Adds tests 1.86, 1.87 to test Get with unmatched search path</li>
<li>Adds new Connect Record test cases to STOMP and WebSocket
sections</li>
<li>Adds MQTT bulk data collection test cases</li>
<li>Adds test 1.88 to check that unique keys are always treated as
required</li>
<li>Adds test 1.89 to exercise max_depth feature in Get</li>
<li>Adds test 1.90 to check Delete with unmatched search path</li>
<li>Adds test 1.91 to very an Agent ignores unknown arguments in a
command</li>
<li>Adds test 1.92 to test that operate uses default values when
absent</li>
<li>Updates test 1.23 metrics to require the return of an empty
oper_success</li>
<li>Updates GetSupportedDM test cases to check for new USP 1.2
fields</li>
<li>Updates tests 1.3, 1.4, 1.6, 1.21 to include additional test
metrics</li>
<li>Updates tests 1.64 and 1.65 to check for correct command_key
value</li>
<li>Updates tests to account for requirement R-MTP.5 in USP 1.2</li>
<li>Fixes metric in test 1.20 and 1.21 to allow for single failure</li>
<li>Fixes test setup in 9.4, 9.5, 9.6</li>
<li>Fixes test 8.5 to remove MTP specific language and require mDNS
info</li>
<li>Reverts metric in test 6.7</li>
<li>Fixes test 1.47 test metrics for correct equivalence</li>
<li>Set send_resp to true for several Operate tests where needed</li>
<li>Various typographical fixes</li>
</ul></td>
</tr>
</tbody>
</table>
<h3 class="unnumbered unlisted"
id="sec:bbfworkarea-work-area-directors">Work Area Directors <a
href="#sec:bbfworkarea-work-area-directors" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<table>
<colgroup>
<col style="width: 21%" />
<col style="width: 17%" />
<col style="width: 26%" />
<col style="width: 36%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Name</th>
<th style="text-align: left;">Company</th>
<th style="text-align: left;">Email</th>
<th style="text-align: left;">Role</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;">Jason Walls</td>
<td style="text-align: left;">QA Cafe, LLC</td>
<td style="text-align: left;">jason@qacafe.com</td>
<td style="text-align: left;">Broadband User Services Work Area
Director</td>
</tr>
<tr class="even even">
<td style="text-align: left;">John Blackford</td>
<td style="text-align: left;">CommScope</td>
<td style="text-align: left;">john.blackford@commscope.com</td>
<td style="text-align: left;">Broadband User Services Work Area
Director</td>
</tr>
</tbody>
</table>
<h3 class="unnumbered unlisted" id="sec:editors">Editors <a
href="#sec:editors" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<table>
<colgroup>
<col style="width: 21%" />
<col style="width: 17%" />
<col style="width: 26%" />
<col style="width: 36%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Name</th>
<th style="text-align: left;">Company</th>
<th style="text-align: left;">Email</th>
<th style="text-align: left;">Role</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;">Jason Walls</td>
<td style="text-align: left;">QA Cafe, LLC</td>
<td style="text-align: left;">jason@qacafe.com</td>
<td style="text-align: left;">Editor</td>
</tr>
</tbody>
</table>
<h2 id="sec:executive-summary">Executive Summary <a
href="#sec:executive-summary" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<p>Testing is crucial to promoting the interoperability and adoption of
standards. To meet this, the Broadband Forum regularly produces test
suites that validate the conformance of implementations of their
standards. This specification defines the test setup, test procedures,
and test metrics to validate Agent and implementations of the <a
href="https://usp.technology">User Services Platform (USP)</a>,
published as BBF TR-369.</p>
<p>This test plan is used to validate USP Agent implementations for the
<a
href="https://www.broadband-forum.org/testing-and-certification-programs/bbf-369-usp-certification">BBF.369
USP Agent Certification Program</a>. Companies looking to certify their
products, or to acquire certified products, can find full details on the
program, approved test tools and labs, and the list of certified
products <a
href="https://www.broadband-forum.org/testing-and-certification-programs/bbf-369-usp-certification">here</a>.</p>
<h2 id="sec:purpose">Purpose <a href="#sec:purpose" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<p>This purpose of this document is to provide a definitive guide for
validating the compliance of USP Agents in accordance with the
specification.</p>
<h2 id="sec:scope">Scope <a href="#sec:scope" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<p>The tests defined below are intended to validate the specific
requirements outlined in the USP specification, as well as those
requirements defined in the Device:2 Data Model for USP Agents for
objects, parameters, commands, and events necessary for the operation of
USP.</p>
<h1 id="sec:test-setup">Test Setup <a href="#sec:test-setup"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:test-equipment">Test Equipment <a href="#sec:test-equipment"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<p>There are a number of components necessary to the implementation of
this test suite.</p>
<p><strong>Traffic Generator</strong> - One or more traffic generators
are necessary in order to transmit the required traffic to execute the
test procedures. Traffic generation can be done with script-able, real
implementations of DHCP servers, mDNS endpoints, and USP endpoints (for
example), or can be simulated through other means. For tests that
exercise the presence of multiple Controllers or agents, the traffic
generators can each represent a single endpoint, or multiple endpoints,
depending on its capabilities, as long as the traffic can be
differentiated by the Endpoint Under Test.</p>
<p><strong>Analyzer</strong> - One or more traffic analyzers are
necessary to confirm the receipt of messages and evaluate the test
metrics outlined in the tests below. This analyzer may exist at the
traffic generator source, in-line, or accessed through a replicated
interface that will push traffic to the analyzer.</p>
<p><strong>Test Network</strong> - The tests below require IP layer
connectivity between the Traffic Generator and the Endpoint Under Test
(EUT). Steps SHOULD be taken to unsure that the underlying network does
not interfere with the test procedures or test metrics.</p>
<h2 id="sec:test-setup-and-execution">Test Setup and Execution <a
href="#sec:test-setup-and-execution" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:basic-test-setup">Basic Test Setup <a
href="#sec:basic-test-setup" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<figure>
<img src="././figure-1.png" id="fig:basic-test-setup"
alt="Figure 1: Basic Test Setup " />
<figcaption aria-hidden="true">Figure 1: Basic Test Setup <a
href="#fig:basic-test-setup" class="headerlink"
title="Permalink to this figure"><img src="permalink.png"
style="width:0.8em" /></a></figcaption>
</figure>
<h3 id="sec:functionality-tags">Functionality Tags <a
href="#sec:functionality-tags" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>USP contains both required and optional functionality. To ensure that
all different classes of device can exercise this test suite, tests are
marked as “Mandatory”, “Conditional Mandatory”, or “Deprecated”. This is
indicated in each individual test case under the “Functionality
Tag”.</p>
<p>Tests that are “Deprecated” represent tests that were removed or
replaced with newer tests.</p>
<h4
id="sec:alternate-parameters-objects-commands-and-events-in-test-procedures">Alternate
parameters, objects, commands, and events in test procedures <a
href="#sec:alternate-parameters-objects-commands-and-events-in-test-procedures"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h4>
<p>For tests that make use of particular parameter, object, command,
event to validate the test metrics, a different subject can be
substituted that meets the needs of the test. For example, if an EUT
does not support the Reboot:1 profile, another synchronous operation can
be substituted for tests 1.61 and 1.62.</p>
<h3 id="sec:endpoint-requirements-and-metadata-collection">Endpoint
Requirements and Metadata Collection <a
href="#sec:endpoint-requirements-and-metadata-collection"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<h4 id="sec:required-profiles">Required Profiles <a
href="#sec:required-profiles" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h4>
<p>The Device:2 Data Model for USP Agents outlines several profiles that
contain data model objects, parameters, commands, and events necessary
to the operation of USP. In order to be able to perform the tests below,
a USP Agent MUST implement, at minimum, the following profiles:</p>
<ul>
<li><p>LocalAgent:1</p></li>
<li><p>Subscriptions:1</p></li>
</ul>
<p>Conditional mandatory tests may require the implementation of
additional profiles.</p>
<h4 id="sec:test-cases-required-by-profile-and-option-support">Test
Cases Required by Profile and Option Support <a
href="#sec:test-cases-required-by-profile-and-option-support"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h4>
<p>Those seeking to utilize this test plan can use the following feature
IDs to specify their support for conditional mandatory test cases. Since
the types of endpoints under test may vary widely in use cases and
complexity, this list is meant to act as a guide to ensure that many
kinds of products can achieve compliance. However, when determining
which tests must be passed to achieve compliance, testers must know
that:</p>
<p><strong>An Endpoint Under Test (EUT) MUST complete all Mandatory test
cases, and MUST complete all Conditional Mandatory test cases for ALL
features supported by the EUT (see table below).</strong></p>
<table>
<colgroup>
<col style="width: 23%" />
<col style="width: 38%" />
<col style="width: 26%" />
<col style="width: 13%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Feature ID</th>
<th style="text-align: left;">Feature name</th>
<th style="text-align: left;">Test Cases</th>
<th style="text-align: left;">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;">1</td>
<td style="text-align: left;">At least one command</td>
<td style="text-align: left;">1.61, 1.62</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">2</td>
<td style="text-align: left;">At least one command with input
arguments</td>
<td style="text-align: left;">1.63</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">3</td>
<td style="text-align: left;">At least one asynchronous command</td>
<td style="text-align: left;">1.64, 1.65</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">4</td>
<td style="text-align: left;">Subscription.{i}.NotifExpiration
parameter</td>
<td style="text-align: left;">1.56</td>
<td style="text-align: left;">An extension to the Subscription:1
profile</td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">5</td>
<td style="text-align: left;">Controller:1 profile</td>
<td style="text-align: left;">1.59</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">6</td>
<td
style="text-align: left;">Device.LocalAgent.Subscription.{i}.TimeToLive</td>
<td style="text-align: left;">1.55</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">7</td>
<td style="text-align: left;">Controller:1 profile (writeable)</td>
<td style="text-align: left;">1.78, 9.9</td>
<td style="text-align: left;">EUT allows the creation of
Device.LocalAgent.Controller.{i}. objects</td>
</tr>
<tr class="even even">
<td style="text-align: left;">8</td>
<td
style="text-align: left;">Device.LocalAgent.Controller.{i}.SendOnBoardRequest()</td>
<td style="text-align: left;">1.60, 4.1, 9.9</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">9</td>
<td style="text-align: left;">Device.ScheduleTimer()</td>
<td style="text-align: left;">1.63, 1.79, 9.1</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">10</td>
<td style="text-align: left;">Reboot:1 profile</td>
<td style="text-align: left;">1.61, 1.62, 9.10</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">11</td>
<td style="text-align: left;">TraceRoute:1 profile</td>
<td style="text-align: left;">1.64, 1.65</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">12</td>
<td style="text-align: left;">ControllerTrust:1 profile</td>
<td style="text-align: left;">2.9, 2.10</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">13</td>
<td style="text-align: left;">ControllerTrust:1 profile (writeable)</td>
<td style="text-align: left;">2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17,
2.18, 2.19, 2.20, 2.21, 2.22</td>
<td style="text-align: left;">Additionally supports at least one role
that allows object creation, or supports writable parameters in
Device.LocalAgent.ControllerTrust.{i}.Role.{i}.</td>
</tr>
<tr class="even even">
<td style="text-align: left;">14</td>
<td style="text-align: left;">Self-signed controller certificates</td>
<td style="text-align: left;">TBD</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">15</td>
<td style="text-align: left;">TLS at the MTP Layer</td>
<td style="text-align: left;">4.1</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">16</td>
<td style="text-align: left;">CoAP MTP (DEPRECATED)</td>
<td style="text-align: left;">5.*</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">17</td>
<td style="text-align: left;">STOMP MTP</td>
<td style="text-align: left;">6.*</td>
<td style="text-align: left;">Excludes 6.8 unless option 18 is
supported</td>
</tr>
<tr class="even even">
<td style="text-align: left;">18</td>
<td style="text-align: left;">STOMPHeartbeat:1 profile</td>
<td style="text-align: left;">6.8</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">19</td>
<td style="text-align: left;">WebSocket MTP</td>
<td style="text-align: left;">7.*</td>
<td style="text-align: left;">Excludes 7.3 unless option 20 is
supported</td>
</tr>
<tr class="even even">
<td style="text-align: left;">20</td>
<td style="text-align: left;">TR-369 requirement R-WS.6</td>
<td style="text-align: left;">7.3</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">21</td>
<td style="text-align: left;">Discovery via DHCP Options</td>
<td style="text-align: left;">8.1, 8.2, 8.3</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">22</td>
<td style="text-align: left;">Discovery via mDNS</td>
<td style="text-align: left;">8.4, 8.5, 8.6, 8.7</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">23</td>
<td style="text-align: left;">Secure Message Exchange (TLS for USP
Record Integrity)</td>
<td style="text-align: left;">3.2, 3.3, 3.4, 3.5, 3.6, 3.7, 3.13</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">24</td>
<td style="text-align: left;">USP session context</td>
<td style="text-align: left;">2.6, 2.7, 2.8, 3.8, 3.9, 3.10, 3.11, 3.12,
3.13, 3.14, 3.15</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">25</td>
<td style="text-align: left;">Device.LocalAgent.AddCertificate()</td>
<td style="text-align: left;">9.2</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">26</td>
<td style="text-align: left;">Firmware:1 profile</td>
<td style="text-align: left;">9.3, 9.5, 9.6, 9.7</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">27</td>
<td style="text-align: left;">Firmware:1 profile (Activate)</td>
<td style="text-align: left;">9.4, 9.5</td>
<td style="text-align: left;">Supports Firmware:1 profile and
additionally supports the Activate() operation</td>
</tr>
<tr class="even even">
<td style="text-align: left;">28</td>
<td
style="text-align: left;">Device.LocalAgent.Request.{i}.Cancel()</td>
<td style="text-align: left;">9.8</td>
<td style="text-align: left;">Applies only if option 26 is
supported</td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">29</td>
<td style="text-align: left;">UntrustedRole disabled</td>
<td style="text-align: left;">TBD</td>
<td style="text-align: left;">The use of UntrustedRole must be either
unsupported, or capable of being disabled, to run this test</td>
</tr>
<tr class="even even">
<td style="text-align: left;">30</td>
<td style="text-align: left;">Device.DeviceInfo.BootFirmwareImage</td>
<td style="text-align: left;">9.10</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">31</td>
<td style="text-align: left;">The product supports at least one nested
multi-instance object</td>
<td style="text-align: left;">1.10, 1.71, 1.83</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">32</td>
<td style="text-align: left;">HTTP bulk data collection with JSON
encoding</td>
<td style="text-align: left;">10.1, 10.2, 10.5, 10.6, 10.7, 10.8,
10.9</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">33</td>
<td style="text-align: left;">HTTP bulk data collection with CSV
encoding</td>
<td style="text-align: left;">10.3, 10.4, 10.5, 10.6, 10.7, 10.8,
10.9</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">34</td>
<td style="text-align: left;">Bulk data collection via the Push!
Event</td>
<td style="text-align: left;">10.10, 10.11, 10.12</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">35</td>
<td style="text-align: left;">MQTT MTP, version 3.1.1</td>
<td style="text-align: left;">11.*</td>
<td style="text-align: left;">Excludes 11.4, 11.7, 11.8, 11.10, &amp;
11.15, MQTT 5.0 only tests</td>
</tr>
<tr class="even even">
<td style="text-align: left;">36</td>
<td style="text-align: left;">MQTT MTP, version 5.0</td>
<td style="text-align: left;">11.*</td>
<td style="text-align: left;"></td>
</tr>
</tbody>
</table>
<h4 id="sec:elements-specified-in-the-test-procedure">Elements Specified
in the Test Procedure <a
href="#sec:elements-specified-in-the-test-procedure" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h4>
<p>Many of the mandatory and conditional mandatory tests specify the
objects, parameters, or operations to be used for the test. If the
specific elements are not supported by the EUT, other elements that will
satisfy the test criteria MAY be used instead. If so, the test report
MUST include the alternate elements used.</p>
<h4 id="sec:required-eut-information-and-resources">Required EUT
Information and Resources <a
href="#sec:required-eut-information-and-resources" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h4>
<p>In order to be able to perform the tests and create a report of the
results, the following must be provided concerning the Endpoint Under
Test:</p>
<ol>
<li>The software and/or firmware version of the EUT.</li>
<li>The number of firmware banks available if the Firmware:1 profile is
supported.</li>
<li>A list of the feature IDs supported.</li>
<li>If the service elements specified in the tests are not supported,
provide a list of alternate elements used in the testing.</li>
</ol>
<h3 id="sec:clean-up-procedures">Clean-Up Procedures <a
href="#sec:clean-up-procedures" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>A number of tests that make changes to the EUT have procedures that
are not part of the validation portion of the test case. These
procedures are intended to “clean up” any changes that were made during
the test to ensure that the EUT is in a relatively known state from one
test case to the next. The most obvious example is using the Delete
message to remove any objects that were added as part of the procedure,
but the clean-up procedure may include any number of steps.</p>
<h2 id="sec:universal-test-metrics">Universal Test Metrics <a
href="#sec:universal-test-metrics" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<p>Due to the nature of performative testing of protocol messages,
certain requirements in the specification are effectively tested every
time. Writing additional test cases for these metrics is unnecessary,
but the requirements must still be met by endpoint implementations.</p>
<ol>
<li><p>The Endpoint ID of the Endpoint Under Test is valid (ARC.3,
ARC.4, ARC.5, and the requirements outlined in the <a
href="http://usp.technology/specification/architecture/#endpoint_identifier">authority-scheme
table</a>).</p></li>
<li><p>The USP records and USP messages of the Endpoint Under Test are
valid according to the usp-record.proto and usp-msg.proto schemas
(ENC.0, ENC.1).</p></li>
<li><p>The Path Names and Search Paths used in messages sent by the
Endpoint Under Test are valid according to <a
href="http://usp.technology/specification/architecture/#data_model_path_grammar">Data
Model Path Grammar</a> and TR-106 (ARC.7).</p></li>
<li><p>Path Names in messages originating from the EUT use instance
number addressing (R-MSG.3).</p></li>
</ol>
<h2 id="sec:notes-about-test-case-descriptions">Notes about test case
descriptions <a href="#sec:notes-about-test-case-descriptions"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<p>Each of the test cases below have the following sections:</p>
<p><strong>Purpose</strong> - The purpose describes the reasoning for
the test case, based on the normative requirements defined in USP.</p>
<p><strong>Functionality Tag</strong> - The functionality tag indicates
whether the test is mandatory or conditional mandatory. If it is the
latter, this section will list any additional Device:2 profiles
necessary to the performance of the test case.</p>
<p><strong>Test Setup</strong> - The test setup section indicates any
special prior conditions that must be configured before performing the
test.</p>
<p><strong>Test Procedure</strong> - The procedure indicates the steps,
in order, taken to perform the test.</p>
<p><strong>Test Metrics</strong> - The metrics indicate the required
behavior that must be observed to consider the test passed.</p>
<h3 id="sec:use-of-examples">Use of examples <a
href="#sec:use-of-examples" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>The test setup, procedure, and metrics in each test case may contain
examples of the data to be sent to or received from the EUT. In these
examples, elements that are to be filled with a known value dependent on
the protocol’s behavior are indicated with greater-than/less-than
brackets (&lt;for example&gt;), to indicate a variable. These examples
should not be taken literally.</p>
<h1 id="sec:messages-and-path-names">1 Messages and Path Names <a
href="#sec:messages-and-path-names" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2
id="sec:add-message-with-allow-partial-false-single-object-required-parameters-succeed">1.1
Add message with allow partial false, single object, required parameters
succeed <a
href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-succeed"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-1">Purpose <a href="#sec:purpose-1"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
false, and all required parameters to be set upon Object Creation
succeed.</p>
<h3 id="sec:functionality-tag">Functionality Tag <a
href="#sec:functionality-tag" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-1">Test Setup <a href="#sec:test-setup-1"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure">Test Procedure <a href="#sec:test-procedure"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add1&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
       }
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported
by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics">Test Metrics <a href="#sec:test-metrics"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains no parameter errors and 3 elements in the
unique key map: Alias, Recipient, and ID. Alternatively, the
OperationSuccess contains 2 elements in the unique key map if the Alias
parameter is not supported: Recipient, and ID.</p></li>
<li><p>The EUT creates the Subscription object.</p></li>
<li><p>The Subscription object’s values match the values set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2
id="sec:add-message-with-allow-partial-true-single-object-required-parameters-succeed">1.2
Add message with allow partial true, single object, required parameters
succeed <a
href="#sec:add-message-with-allow-partial-true-single-object-required-parameters-succeed"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-2">Purpose <a href="#sec:purpose-2"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
true, and all required parameters to be set upon Object Creation
succeed.</p>
<h3 id="sec:functionality-tag-1">Functionality Tag <a
href="#sec:functionality-tag-1" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-2">Test Setup <a href="#sec:test-setup-2"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-1">Test Procedure <a
href="#sec:test-procedure-1" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: true
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add2&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported
by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-1">Test Metrics <a href="#sec:test-metrics-1"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT AddResp is valid.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an
OperationStatus of OperationSuccess. The OperationSuccess contains no
parameter errors and 3 elements in the unique key map: Alias, Recipient,
and ID. Alternatively, the OperationSuccess contains 2 elements in the
unique key map if the Alias parameter is not supported: Recipient, and
ID.</p></li>
<li><p>The EUT creates the Subscription object.</p></li>
<li><p>The Subscription object’s values match the values set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2
id="sec:add-message-with-allow-partial-false-single-object-required-parameters-fail">1.3
Add message with allow partial false, single object, required parameters
fail <a
href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-fail"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-3">Purpose <a href="#sec:purpose-3"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
false, and at least one required parameter fails, and only a single
object is set.</p>
<h3 id="sec:functionality-tag-2">Functionality Tag <a
href="#sec:functionality-tag-2" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-3">Test Setup <a href="#sec:test-setup-3"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-2">Test Procedure <a
href="#sec:test-procedure-2" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;InvalidValue&#39;
           required: true
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add3&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-2">Test Metrics <a href="#sec:test-metrics-2"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an <code>err_code</code> of 7004,
‘Invalid Arguments’, with the <code>param_errs</code> element containing
a single error with a <code>param_path</code> that indicates the Enable
parameter, and an <code>err_code</code> of ‘7011’ (Invalid Type) or
‘7012’ (Invalid Value).</p></li>
<li><p>The EUT did not create a new Subscription object.</p></li>
</ol>
<h2
id="sec:add-message-with-allow-partial-false-single-invalid-object">1.4
Add message with allow partial false, single invalid object <a
href="#sec:add-message-with-allow-partial-false-single-invalid-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-4">Purpose <a href="#sec:purpose-4"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
false, and a single invalid object is set.</p>
<h3 id="sec:functionality-tag-3">Functionality Tag <a
href="#sec:functionality-tag-3" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-4">Test Setup <a href="#sec:test-setup-4"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-3">Test Procedure <a
href="#sec:test-procedure-3" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.InvalidObject.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add4&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-3">Test Metrics <a href="#sec:test-metrics-3"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an <code>err_code</code> of 7004,
‘Invalid Arguments’, with the <code>param_errs</code> element containing
a single error with a <code>param_path</code> of
‘Device.LocalAgent.InvalidObject.’, and an <code>err_code</code> of
7026, ‘Invalid Path’.</p></li>
<li><p>The EUT did not create a new Subscription object.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-false-multiple-objects">1.5
Add message with allow partial false, multiple objects <a
href="#sec:add-message-with-allow-partial-false-multiple-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-5">Purpose <a href="#sec:purpose-5"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
false, multiple objects are attempted, and all required parameters to be
set upon Object Creation succeed.</p>
<h3 id="sec:functionality-tag-4">Functionality Tag <a
href="#sec:functionality-tag-4" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-5">Test Setup <a href="#sec:test-setup-5"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-4">Test Procedure <a
href="#sec:test-procedure-4" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add51&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add52&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.EndpointID&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 1&gt;.&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 2&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
msg_id: &#39;&lt;msg_id&gt;&#39;
msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 1&gt;.&#39;
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 2&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-4">Test Metrics <a href="#sec:test-metrics-4"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT AddResp is valid.</p></li>
<li><p>The AddResp contains two CreatedObjectResults that each have an
OperationStatus of OperationSuccess. The OperationSuccess elements
contains no parameter errors and 3 elements in the unique key map:
Alias, Recipient, and ID. Alternatively, the OperationSuccess contains 2
elements in the unique key map if the Alias parameter is not supported:
Recipient, and ID.</p></li>
<li><p>The EUT creates the Subscription objects.</p></li>
<li><p>The first Subscription object’s values match the values set in
the <code>param_settings</code> element.</p></li>
<li><p>The second Subscription object’s values match the values set in
the <code>param_settings</code> element.</p></li>
</ol>
<h2
id="sec:add-message-with-allow-partial-false-multiple-objects-with-an-invalid-object">1.6
Add message with allow partial false, multiple objects with an invalid
object <a
href="#sec:add-message-with-allow-partial-false-multiple-objects-with-an-invalid-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-6">Purpose <a href="#sec:purpose-6"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
false, multiple objects are attempted, and one of the objects is
invalid.</p>
<h3 id="sec:functionality-tag-5">Functionality Tag <a
href="#sec:functionality-tag-5" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-6">Test Setup <a href="#sec:test-setup-6"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-5">Test Procedure <a
href="#sec:test-procedure-5" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add61&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.InvalidObject.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add62&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.EndpointID&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-5">Test Metrics <a href="#sec:test-metrics-5"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an <code>err_code</code> of 7004,
‘Invalid Arguments’, with the <code>param_errs</code> element containing
a single error with a <code>param_path</code> of
‘Device.LocalAgent.InvalidObject.’, and an <code>err_code</code> of
7026, ‘Invalid Path’.</p></li>
<li><p>The EUT did not create a new Subscription object.</p></li>
</ol>
<h2
id="sec:add-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.7
Add message with allow partial false, multiple objects, required
parameters fail in single object <a
href="#sec:add-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-7">Purpose <a href="#sec:purpose-7"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
false, and at least one required parameter fails in one of multiple
objects.</p>
<h3 id="sec:functionality-tag-6">Functionality Tag <a
href="#sec:functionality-tag-6" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-7">Test Setup <a href="#sec:test-setup-7"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-6">Test Procedure <a
href="#sec:test-procedure-6" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;InvalidValue&#39;
           required: true
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add71&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add72&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with the request path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-6">Test Metrics <a href="#sec:test-metrics-6"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an <code>err_code</code> of 7004,
‘Invalid arguments’, with the <code>param_errs</code> element containing
a single error with a <code>param_path</code> that indicates the Enable
parameter, and an <code>err_code</code> of ‘7011’ (Invalid Type) or
‘7012’ (Invalid Value).</p></li>
<li><p>The GetResp from the EUT does not contain a Subscription instance
with ID ‘add71’ or ‘add72’.</p></li>
</ol>
<h2
id="sec:add-message-with-allow-partial-true-required-parameters-fail-invalid-type-single-object">1.8
Add message with allow partial true, required parameters fail, invalid
type, single object <a
href="#sec:add-message-with-allow-partial-true-required-parameters-fail-invalid-type-single-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-8">Purpose <a href="#sec:purpose-8"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
true, and at least one required parameter fails (with an invalid value)
in a single object.</p>
<h3 id="sec:functionality-tag-7">Functionality Tag <a
href="#sec:functionality-tag-7" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-8">Test Setup <a href="#sec:test-setup-8"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-7">Test Procedure <a
href="#sec:test-procedure-7" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: true
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;InvalidValue&#39;
           required: true
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add8&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Send a Get message to the EUT with the request path of
‘Device.LocalAgent.Subscription.’.</p></li>
</ol>
<h3 id="sec:test-metrics-7">Test Metrics <a href="#sec:test-metrics-7"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp message.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an
OperationStatus that is an element of type OperationFailure. The
OperationFailure element contains an <code>err_code</code> of ‘7011’
(Invalid Type) or ‘7012’ (Invalid Value).</p></li>
<li><p>The GetResp from the EUT does not contain a Subscription instance
with ID ‘add8’.</p></li>
</ol>
<h2
id="sec:add-message-with-allow-partial-true-required-parameters-fail-multiple-objects">1.9
Add message with allow partial true, required parameters fail, multiple
objects <a
href="#sec:add-message-with-allow-partial-true-required-parameters-fail-multiple-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-9">Purpose <a href="#sec:purpose-9"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the <code>allow_partial</code> element is set to
true, and at least one required parameter fails in one of multiple
objects.</p>
<h3 id="sec:functionality-tag-8">Functionality Tag <a
href="#sec:functionality-tag-8" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-9">Test Setup <a href="#sec:test-setup-9"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-8">Test Procedure <a
href="#sec:test-procedure-8" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: true
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;add91&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.SoftwareVersion&#39;
          }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;add91&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.SoftwareVersion&#39;
          }
        param_settings {
            param: &#39;InvalidParameter&#39;
            value: &#39;IrrelevantValue&#39;
            required: true
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported
by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-8">Test Metrics <a href="#sec:test-metrics-8"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp message.</p></li>
<li><p>The AddResp contains two CreatedObjectResults.</p>
<ol>
<li><p>One CreateObjectResult is an element of type OperationSuccess.
The OperationSuccess element contains no parameter errors and 3 elements
in the unique key map: Alias, Recipient, and ID. Alternatively, the
OperationSuccess contains 2 elements in the unique key map if the Alias
parameter is not supported: Recipient, and ID.</p></li>
<li><p>The other CreateObjectResult is an element of type
OperationFailure. The OperationFailure element contains an
<code>err_code</code> of ‘7010’ (‘Unsupported Parameter’), ‘7017’
(‘Object could not be created’), or ‘7026’ (‘Invalid Path’).</p></li>
</ol></li>
<li><p>The EUT creates the first Subscription object, and does not
create the second Subscription object.</p></li>
<li><p>The Subscription object’s values match the values set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2 id="sec:add-message-with-unique-key-addressing-in-path">1.10 Add
message with unique key addressing in path <a
href="#sec:add-message-with-unique-key-addressing-in-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-10">Purpose <a href="#sec:purpose-10"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
an Add message when the Controller uses unique key addressing.</p>
<h3 id="sec:functionality-tag-9">Functionality Tag <a
href="#sec:functionality-tag-9" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Product supports at least one nested
multi-instance object)</p>
<h3 id="sec:test-setup-10">Test Setup <a href="#sec:test-setup-10"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-9">Test Procedure <a
href="#sec:test-procedure-9" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Controller.[EndpointID==&quot;&lt; EndpointID&gt;&quot;&amp;&amp;Alias==&quot;&lt;Alias if supported&gt;&quot;].BootParameter.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ParameterName&#39;
            value: &#39;Device.LocalAgent.SoftwareVersion&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported
by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-9">Test Metrics <a href="#sec:test-metrics-9"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains no parameter errors and 2 elements in the
unique key map: Alias and ParameterName. Alternatively, the
OperationSuccess contains one element in the unique key map if the Alias
parameter is not supported: ParameterName.</p></li>
<li><p>The EUT creates the BootParameter object.</p></li>
<li><p>The BootParameter object’s values match the values set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2
id="sec:set-message-with-allow-partial-false-required-parameters-pass">1.11
Set message with allow partial false, required parameters pass <a
href="#sec:set-message-with-allow-partial-false-required-parameters-pass"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-11">Purpose <a href="#sec:purpose-11"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the <code>allow_partial</code> element is set to
false, and all required parameters to be updated succeed.</p>
<h3 id="sec:functionality-tag-10">Functionality Tag <a
href="#sec:functionality-tag-10" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-11">Test Setup <a href="#sec:test-setup-11"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-10">Test Procedure <a
href="#sec:test-procedure-10" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-10">Test Metrics <a href="#sec:test-metrics-10"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult that has an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains a single UpdateInstanceResult, with the
<code>affected_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single
entry in the <code>updated_params</code> map containing ‘NotifRetry’ as
the key.</p></li>
<li><p>The retrieved value matches the value set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2
id="sec:set-message-with-allow-partial-true-required-parameters-pass">1.12
Set message with allow partial true, required parameters pass <a
href="#sec:set-message-with-allow-partial-true-required-parameters-pass"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-12">Purpose <a href="#sec:purpose-12"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the <code>allow_partial</code> element is set to
true, and all required parameters to be updated succeed.</p>
<h3 id="sec:functionality-tag-11">Functionality Tag <a
href="#sec:functionality-tag-11" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-12">Test Setup <a href="#sec:test-setup-12"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-11">Test Procedure <a
href="#sec:test-procedure-11" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
  body {
    request {
      get {
        param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
      }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-11">Test Metrics <a href="#sec:test-metrics-11"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult that has an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains a single UpdateInstanceResult, with the
<code>affected_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single
entry in the <code>updated_params</code> map containing ‘NotifRetry’ as
the key.</p></li>
<li><p>The retrieved value matches the value set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-false-multiple-objects">1.13
Set message with allow partial false, multiple objects <a
href="#sec:set-message-with-allow-partial-false-multiple-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-13">Purpose <a href="#sec:purpose-13"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the <code>allow_partial</code> element is set to
false, and all required parameters to be updated succeed.</p>
<h3 id="sec:functionality-tag-12">Functionality Tag <a
href="#sec:functionality-tag-12" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-13">Test Setup <a href="#sec:test-setup-13"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT,
and the instance identifiers are known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-12">Test Procedure <a
href="#sec:test-procedure-12" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-12">Test Metrics <a href="#sec:test-metrics-12"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains two UpdatedObjectResults that each have an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains a single UpdateInstanceResult, with the
affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance
number&gt;.’, and a single entry in the <code>updated_params</code> map
containing ‘NotifRetry’ as the key.</p></li>
<li><p>The retrieved value matches the value set in the
<code>param_settings</code> element for each object.</p></li>
</ol>
<h2
id="sec:set-message-with-allow-partial-false-required-parameters-fail">1.14
Set message with allow partial false, required parameters fail <a
href="#sec:set-message-with-allow-partial-false-required-parameters-fail"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-14">Purpose <a href="#sec:purpose-14"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the <code>allow_partial</code> element is set to
false, and a required parameter fails.</p>
<h3 id="sec:functionality-tag-13">Functionality Tag <a
href="#sec:functionality-tag-13" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-14">Test Setup <a href="#sec:test-setup-14"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-13">Test Procedure <a
href="#sec:test-procedure-13" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with a request path of
‘Device.LocalAgent.Subscription.&lt;instance identifier from test
setup&gt;.’.</p></li>
</ol>
<h3 id="sec:test-metrics-13">Test Metrics <a href="#sec:test-metrics-13"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error.</p></li>
<li><p>The Error contains <code>err_code</code> ‘7004’, ‘Invalid
Arguments’, and a single ParamError element. The ParamError element
contains a <code>param_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance
identifier&gt;.InvalidParameter’ and an <code>err_code</code> of ‘7010’,
‘Unsupported Parameter’.</p></li>
<li><p>The GetResp contains a single Subscription instance that does not
include a ‘InvalidParameter’ parameter.</p></li>
</ol>
<h2
id="sec:set-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.15
Set message with allow partial false, multiple objects, required
parameters fail in single object <a
href="#sec:set-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-15">Purpose <a href="#sec:purpose-15"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the <code>allow_partial</code> element is set to
false, and required parameters in one of multiple objects fail.</p>
<h3 id="sec:functionality-tag-14">Functionality Tag <a
href="#sec:functionality-tag-14" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-15">Test Setup <a href="#sec:test-setup-15"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT,
and the instance identifiers are known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-14">Test Procedure <a
href="#sec:test-procedure-14" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
         }
      }
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-14">Test Metrics <a href="#sec:test-metrics-14"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error.</p></li>
<li><p>The Error contains <code>err_code</code> ‘7004’, ‘Invalid
Arguments’, and a single ParamError element. The ParamError element
contains a <code>param_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance
identifier&gt;.InvalidParameter’ and an <code>err_code</code> of ‘7010’,
‘Unsupported Parameter’.</p></li>
<li><p>The GetResp contains at least two Subscription instances, neither
of which contain a <code>InvalidParameter</code> parameter and the first
instance from the test setup does not have an updated
<code>NotifRetry</code> value.</p></li>
</ol>
<h2
id="sec:set-message-with-allow-partial-true-required-parameter-fails-multiple-objects">1.16
Set message with allow partial true, required parameter fails, multiple
objects <a
href="#sec:set-message-with-allow-partial-true-required-parameter-fails-multiple-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-16">Purpose <a href="#sec:purpose-16"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the <code>allow_partial</code> element is set to
true, and a required parameter on one of multiple objects fails.</p>
<h3 id="sec:functionality-tag-15">Functionality Tag <a
href="#sec:functionality-tag-15" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-16">Test Setup <a href="#sec:test-setup-16"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT,
and the instance identifiers are known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-15">Test Procedure <a
href="#sec:test-procedure-15" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-15">Test Metrics <a href="#sec:test-metrics-15"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains two UpdatedObjectResults.</p>
<ol>
<li><p>The first UpdatedObjectResult has an OperationStatus that is an
element of type OperationSuccess. The OperationSuccess contains a single
UpdatedInstanceResult, with the <code>affected_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single
entry in the <code>updated_params</code> map containing ‘NotifRetry’ as
the key.</p></li>
<li><p>The second UpdatedObjectResult has an OperationStatus that is an
element of type OperationFailure. The OperationFailure contains an
<code>err_code</code> of ‘7021’, ‘Required parameter failed’, and a
single UpdatedInstanceFailure element. The UpdatedInstanceFailure has an
<code>affected_path</code> with a value of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
single ParameterError element.</p></li>
<li><p>The ParameterError has a <code>param</code> element with a value
of ‘InvalidParameter’ and an <code>err_code</code> of ‘7010’,
‘Unsupported Parameter’.</p></li>
</ol></li>
<li><p>The retrieved value matches the value set in the
<code>param_settings</code> element for the first object.</p></li>
</ol>
<h2
id="sec:set-message-with-allow-partial-true-non-required-parameter-fails-multiple-parameters">1.17
Set message with allow partial true, non-required parameter fails,
multiple parameters <a
href="#sec:set-message-with-allow-partial-true-non-required-parameter-fails-multiple-parameters"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-17">Purpose <a href="#sec:purpose-17"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the <code>allow_partial</code> element is set to
true, and one of multiple non-required parameters fail.</p>
<h3 id="sec:functionality-tag-16">Functionality Tag <a
href="#sec:functionality-tag-16" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-17">Test Setup <a href="#sec:test-setup-17"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-16">Test Procedure <a
href="#sec:test-procedure-16" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
       }
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
       }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-16">Test Metrics <a href="#sec:test-metrics-16"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult with an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains a single UpdatedInstanceResult element.</p>
<ol>
<li><p>The UpdatedInstanceResult <code>affected_path</code> is equal to
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’.</p></li>
<li><p>The UpdatedInstanceResult has a single entry in the
<code>updated_params</code> map containing ‘NotifRetry’ as the
key.</p></li>
<li><p>The UpdatedInstanceResult has a single ParameterError element,
with the ‘param’ field set to ‘InvalidParameter’, and an
<code>err_code</code> of ‘7010’, ‘Unsupported Parameter’.</p></li>
</ol></li>
<li><p>The retrieved value of NotifRetry matches the value set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2 id="sec:set-message-with-unique-key-addressing-in-path">1.18 Set
message with unique key addressing in path <a
href="#sec:set-message-with-unique-key-addressing-in-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-18">Purpose <a href="#sec:purpose-18"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the Controller uses unique key addressing.</p>
<h3 id="sec:functionality-tag-17">Functionality Tag <a
href="#sec:functionality-tag-17" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-18">Test Setup <a href="#sec:test-setup-18"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the unique keys and their values are known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-17">Test Procedure <a
href="#sec:test-procedure-17" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {

    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;unique key instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-17">Test Metrics <a href="#sec:test-metrics-17"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult that has an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains a single UpdateInstanceResult, with the
<code>affected_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single
entry in the <code>updated_params</code> map containing ‘NotifRetry’ as
the key.</p></li>
<li><p>The retrieved value matches the value set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2
id="sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-pass">1.19
Set message with wildcard search path, allow partial false, required
parameters pass <a
href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-pass"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-19">Purpose <a href="#sec:purpose-19"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the Controller uses a wildcard search path and the
requested updates succeed.</p>
<h3 id="sec:functionality-tag-18">Functionality Tag <a
href="#sec:functionality-tag-18" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-19">Test Setup <a href="#sec:test-setup-19"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the
EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-18">Test Procedure <a
href="#sec:test-procedure-18" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.*.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-18">Test Metrics <a href="#sec:test-metrics-18"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains an UpdatedObjectResults element that has an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains at least two UpdateInstanceResults, each with
the <code>affected_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’ of the
respective instance, and a single entry in the
<code>updated_params</code> map containing ‘NotifRetry’ as the
key.</p></li>
<li><p>The retrieved value matches the value set in the
<code>param_settings</code> element for each object.</p></li>
</ol>
<h2
id="sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-fail">1.20
Set message with wildcard search path, allow partial false, required
parameters fail <a
href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-fail"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-20">Purpose <a href="#sec:purpose-20"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the Controller uses a wildcard search path,
<code>allow_partial</code> element is set to false, and required
parameters in multiple objects fail.</p>
<h3 id="sec:functionality-tag-19">Functionality Tag <a
href="#sec:functionality-tag-19" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-20">Test Setup <a href="#sec:test-setup-20"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the
EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-19">Test Procedure <a
href="#sec:test-procedure-19" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {

    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.*.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-19">Test Metrics <a href="#sec:test-metrics-19"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error.</p></li>
<li><p>The Error contains an appropriate error code and at least one
ParamError element. The ParamError element contains a
<code>param_path</code> of ‘Device.LocalAgent.Subscription.&lt;instance
identifier of relevant object&gt;.InvalidParameter’ and an appropriate
error code.</p></li>
<li><p>In the GetResp there are no Subscription instances with an
‘InvalidParameter’ parameter.</p></li>
</ol>
<h2
id="sec:set-message-with-wildcard-search-path-allow-partial-true-required-parameters-fail">1.21
Set message with wildcard search path, allow partial true, required
parameters fail <a
href="#sec:set-message-with-wildcard-search-path-allow-partial-true-required-parameters-fail"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-21">Purpose <a href="#sec:purpose-21"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the Controller uses a wildcard search path, the
<code>allow_partial</code> element is set to true, and a required
parameter on multiple objects fails.</p>
<h3 id="sec:functionality-tag-20">Functionality Tag <a
href="#sec:functionality-tag-20" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-21">Test Setup <a href="#sec:test-setup-21"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the
EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-20">Test Procedure <a
href="#sec:test-procedure-20" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.*.&#39;
        param_settings {
         param: &#39;Enable&#39;
         value: &#39;InvalidValue&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-20">Test Metrics <a href="#sec:test-metrics-20"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains an UpdatedObjectResults element.</p></li>
<li><p>The UpdatedObjectResults has an OperationStatus that is an
element of type OperationFailure. The OperationFailure contains an
<code>err_code</code> of ‘7021’, ‘Required Parameter Failed’, and at
least one UpdatedInstanceFailure elements. The UpdatedInstanceFailure
has an <code>affected_path</code> with a value of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’ for the
respective failed instance, and a single ParameterError element. The
ParameterError has a <code>param</code> element that indicates the
Enable parameter, and an <code>err_code</code> of ‘7011’ (Invalid Type),
or ‘7012’ (Invalid Value).</p></li>
<li><p>The EUT has no Subscription objects that have an Enable parameter
set to ‘InvalidValue’.</p></li>
</ol>
<h2 id="sec:set-message-with-search-expression-search-path">1.22 Set
message with search expression search path <a
href="#sec:set-message-with-search-expression-search-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-22">Purpose <a href="#sec:purpose-22"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the Controller uses a search path.</p>
<h3 id="sec:functionality-tag-21">Functionality Tag <a
href="#sec:functionality-tag-21" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-22">Test Setup <a href="#sec:test-setup-22"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT
with a value for the NotifExpiration that is greater than 0.</p></li>
</ol>
<h3 id="sec:test-procedure-21">Test Procedure <a
href="#sec:test-procedure-21" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.[NotifExpiration&gt;0].&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-21">Test Metrics <a href="#sec:test-metrics-21"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains at least one UpdatedObjectResult that has an
OperationStatus that is an element of type OperationSuccess. The
OperationSuccess contains a single UpdateInstanceResult, with the
<code>affected_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single
entry in the <code>updated_params</code> map containing ‘NotifRetry’ as
the key.</p></li>
<li><p>The retrieved value matches the value set in the
<code>param_settings</code> element.</p></li>
</ol>
<h2 id="sec:set-message-with-path-that-matches-no-objects">1.23 Set
message with path that matches no objects <a
href="#sec:set-message-with-path-that-matches-no-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-23">Purpose <a href="#sec:purpose-23"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Set message when the requested path is a search path that does not
match any objects, returning an empty <code>oper_success</code>
element.</p>
<h3 id="sec:functionality-tag-22">Functionality Tag <a
href="#sec:functionality-tag-22" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-23">Test Setup <a href="#sec:test-setup-23"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-22">Test Procedure <a
href="#sec:test-procedure-22" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.[Recipient==&quot;InvalidValue&quot;].&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-22">Test Metrics <a href="#sec:test-metrics-22"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a SetResp.</p></li>
<li><p>The SetResp contains one UpdatedObjectResult with an empty
<code>oper_success</code> element
(i.e. <code>oper_success {}</code>).</p></li>
</ol>
<h2
id="sec:delete-message-with-allow-partial-false-valid-object-instance">1.24
Delete message with allow partial false, valid object instance <a
href="#sec:delete-message-with-allow-partial-false-valid-object-instance"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-24">Purpose <a href="#sec:purpose-24"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
false, and the object to be deleted is valid.</p>
<h3 id="sec:functionality-tag-23">Functionality Tag <a
href="#sec:functionality-tag-23" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-24">Test Setup <a href="#sec:test-setup-24"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that a Subscription object exists on the EUT, and the
instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-23">Test Procedure <a
href="#sec:test-procedure-23" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-23">Test Metrics <a href="#sec:test-metrics-23"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single
<code>deleted_obj_response</code> with a <code>requested_path</code>
equal to ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’
and an <code>oper_success</code> element, with one
<code>affected_path</code> element equal to the path name of the Deleted
object.</p></li>
<li><p>The GetResp does not contain the Subscription instance that was
deleted.</p></li>
</ol>
<h2
id="sec:delete-message-with-allow-partial-false-object-instance-doesnt-exist">1.25
Delete message with allow partial false, object instance doesn’t exist
<a
href="#sec:delete-message-with-allow-partial-false-object-instance-doesnt-exist"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-25">Purpose <a href="#sec:purpose-25"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
false, and the object instance to be deleted does not exist.</p>
<h3 id="sec:functionality-tag-24">Functionality Tag <a
href="#sec:functionality-tag-24" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-25">Test Setup <a href="#sec:test-setup-25"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned any existing
Subscription objects and their instance identifiers.</p></li>
</ol>
<h3 id="sec:test-procedure-24">Test Procedure <a
href="#sec:test-procedure-24" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;non-existent instance identifier&gt;.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-24">Test Metrics <a href="#sec:test-metrics-24"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a DeleteResp containing an empty
<code>oper_success</code> element.</li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-false-invalid-object">1.26
Delete message with allow partial false, invalid object <a
href="#sec:delete-message-with-allow-partial-false-invalid-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-26">Purpose <a href="#sec:purpose-26"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
false, and the object to be deleted is invalid.</p>
<h3 id="sec:functionality-tag-25">Functionality Tag <a
href="#sec:functionality-tag-25" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-26">Test Setup <a href="#sec:test-setup-26"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-25">Test Procedure <a
href="#sec:test-procedure-25" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
 }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
</ol>
<h3 id="sec:test-metrics-25">Test Metrics <a href="#sec:test-metrics-25"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error contains an <code>err_code</code> of 7004, ‘Invalid
arguments’, with the <code>param_errs</code> element containing a single
error with a <code>param_path</code> of
‘Device.LocalAgent.InvalidObject.’, and an <code>err_code</code> of
7026, ‘InvalidPath’.</p></li>
</ol>
<h2
id="sec:delete-message-with-allow-partial-false-multiple-objects">1.27
Delete message with allow partial false, multiple objects <a
href="#sec:delete-message-with-allow-partial-false-multiple-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-27">Purpose <a href="#sec:purpose-27"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
false, with multiple valid objects.</p>
<h3 id="sec:functionality-tag-26">Functionality Tag <a
href="#sec:functionality-tag-26" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-27">Test Setup <a href="#sec:test-setup-27"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT,
and the instance identifiers are known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-26">Test Procedure <a
href="#sec:test-procedure-26" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier&gt;.&#39;
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier&gt;.&#39;
     }
   }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-26">Test Metrics <a href="#sec:test-metrics-26"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains two <code>deleted_obj_results</code>,
each with a <code>requested_path</code> equal to the
<code>obj_paths</code> of the Delete message, and an
<code>oper_success</code> element containing an
<code>affected_path</code> element equal to the path name of the deleted
object.</p></li>
<li><p>The GetResp does not contain the deleted Subscription
objects.</p></li>
</ol>
<h2
id="sec:delete-message-with-allow-partial-false-multiple-objects-invalid-object">1.28
Delete message with allow partial false, multiple objects, invalid
object <a
href="#sec:delete-message-with-allow-partial-false-multiple-objects-invalid-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-28">Purpose <a href="#sec:purpose-28"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
false, and one of the objects to be deleted is invalid.</p>
<h3 id="sec:functionality-tag-27">Functionality Tag <a
href="#sec:functionality-tag-27" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-28">Test Setup <a href="#sec:test-setup-28"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-27">Test Procedure <a
href="#sec:test-procedure-27" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier.&gt;&#39;
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
<li><p>Send a Get message to the EUT with a request path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-27">Test Metrics <a href="#sec:test-metrics-27"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error contains an <code>err_code</code> of 7004, ‘Invalid
arguments’, with the <code>param_errs</code> element containing a single
error with a <code>param_path</code> of
‘Device.LocalAgent.InvalidObject.’, and an <code>err_code</code> of
7026, ‘InvalidPath’.</p></li>
<li><p>The GetResp contains the Subscription that was not deleted by
step 1.</p></li>
</ol>
<h2
id="sec:delete-message-with-allow-partial-true-object-instance-doesnt-exist">1.29
Delete message with allow partial true, object instance doesn’t exist <a
href="#sec:delete-message-with-allow-partial-true-object-instance-doesnt-exist"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-29">Purpose <a href="#sec:purpose-29"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
true, and the object instance to be deleted does not exist.</p>
<h3 id="sec:functionality-tag-28">Functionality Tag <a
href="#sec:functionality-tag-28" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-29">Test Setup <a href="#sec:test-setup-29"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-28">Test Procedure <a
href="#sec:test-procedure-28" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: true
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;invalid instance identifier&gt;.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-28">Test Metrics <a href="#sec:test-metrics-28"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a DeleteResp containing an empty
<code>oper_success</code> element (i.e.,
<code>oper_success{}</code>).</li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-true-invalid-object">1.30
Delete message with allow partial true, invalid object <a
href="#sec:delete-message-with-allow-partial-true-invalid-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-30">Purpose <a href="#sec:purpose-30"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
true, and the object is not valid in the Agent’s supported data
model.</p>
<h3 id="sec:functionality-tag-29">Functionality Tag <a
href="#sec:functionality-tag-29" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-30">Test Setup <a href="#sec:test-setup-30"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-29">Test Procedure <a
href="#sec:test-procedure-29" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
 }
 body {
   request {
     delete {
       allow_partial: true
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-29">Test Metrics <a href="#sec:test-metrics-29"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single <code>deleted_obj_result</code>
message with a <code>requested_path</code> of
‘Device.LocalAgent.InvalidObject.’ and an <code>oper_failure</code>
element, with <code>err_code</code> ‘7026’, ‘Invalid Path’.</p></li>
</ol>
<h2
id="sec:delete-message-with-allow-partial-true-multiple-objects-invalid-object">1.31
Delete message with allow partial true, multiple objects, invalid object
<a
href="#sec:delete-message-with-allow-partial-true-multiple-objects-invalid-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-31">Purpose <a href="#sec:purpose-31"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
true, and one of multiple objects is invalid.</p>
<h3 id="sec:functionality-tag-30">Functionality Tag <a
href="#sec:functionality-tag-30" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-31">Test Setup <a href="#sec:test-setup-31"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-30">Test Procedure <a
href="#sec:test-procedure-30" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: true
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-30">Test Metrics <a href="#sec:test-metrics-30"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains two <code>deleted_obj_results</code>
elements, one with an <code>oper_success</code> element, containing an
<code>affected_path</code> element with the value
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and the
other with an <code>oper_failure</code> element containing an
<code>err_code</code> of ‘7026’, ‘InvalidPath’.</p></li>
<li><p>The GetResp does not contain the Subscription instance deleted in
step 1.</p></li>
</ol>
<h2
id="sec:delete-message-with-allow-partial-true-multiple-objects-object-doesnt-exist">1.32
Delete message with allow partial true, multiple objects, object doesn’t
exist <a
href="#sec:delete-message-with-allow-partial-true-multiple-objects-object-doesnt-exist"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-32">Purpose <a href="#sec:purpose-32"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the <code>allow_partial</code> element is set to
true, and one of multiple objects does not exist in the Agent’s
instantiated data model.</p>
<h3 id="sec:functionality-tag-31">Functionality Tag <a
href="#sec:functionality-tag-31" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-32">Test Setup <a href="#sec:test-setup-32"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-31">Test Procedure <a
href="#sec:test-procedure-31" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
body {
  request {
    delete {
      allow_partial: true
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;invalid instance identifier&gt;.&#39;
      }
     }
    }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Subscription.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-31">Test Metrics <a href="#sec:test-metrics-31"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains two deleted_obj_results elements. One
contains an <code>oper_success</code> element with an
<code>affected_path</code> element listing
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’. The
second contains an empty <code>oper_success</code> element (i.e.,
<code>oper_success{}</code>).</p></li>
<li><p>The GetResp does not contain the Subscription instance deleted in
step 1.</p></li>
</ol>
<h2 id="sec:delete-message-with-unique-key-addressing">1.33 Delete
message with unique key addressing <a
href="#sec:delete-message-with-unique-key-addressing" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-33">Purpose <a href="#sec:purpose-33"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the Controller uses unique key addressing.</p>
<h3 id="sec:functionality-tag-32">Functionality Tag <a
href="#sec:functionality-tag-32" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-33">Test Setup <a href="#sec:test-setup-33"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Obtain the unique key values of the Device.LocalAgent. object
that correlates with the source of the test USP messages.</p></li>
<li><p>Ensure that at least one
Device.LocalAgent.Controller.{i}.BootParameter. object exists on the
EUT, and the instance identifier of the object is known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-32">Test Procedure <a
href="#sec:test-procedure-32" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.[EndpointID==&quot;&lt; EndpointID&gt;&quot;&amp;&amp;Alias==&quot;&lt;Alias if supported&gt;&quot;].BootParameter.&lt;instance identifier&gt;.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Controller.&lt;instance ID&gt;.BootParameter.</code></p></li>
</ol>
<h3 id="sec:test-metrics-32">Test Metrics <a href="#sec:test-metrics-32"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single <code>deleted_obj_result</code>
with a requested path equal to the path specified in the
<code>obj_path</code> of the Delete message, containing an
<code>oper_success</code> element, with one <code>affected_path</code>
element equal to the path name of the Deleted object.</p></li>
<li><p>The <code>affected_path</code> element uses instance number
addressing.</p></li>
<li><p>The GetResp does not contain the BootParameter deleted in step
1.</p></li>
</ol>
<h2 id="sec:delete-message-with-wildcard-search-path-valid-objects">1.34
Delete message with wildcard search path, valid objects <a
href="#sec:delete-message-with-wildcard-search-path-valid-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-34">Purpose <a href="#sec:purpose-34"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the Controller uses a wildcard search to delete
multiple valid objects.</p>
<h3 id="sec:functionality-tag-33">Functionality Tag <a
href="#sec:functionality-tag-33" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-34">Test Setup <a href="#sec:test-setup-34"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the
EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-33">Test Procedure <a
href="#sec:test-procedure-33" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.*.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Subscription.</code></p></li>
</ol>
<h3 id="sec:test-metrics-33">Test Metrics <a href="#sec:test-metrics-33"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single <code>deleted_obj_result</code>
with a requested path equal to ’Device.LocalAgent.Subscription.*.’ and
an <code>oper_success</code> element with one or more
<code>affected_path</code> elements equal to the path names of the
Deleted objects.</p></li>
<li><p>The GetResp does not contain any of the Subscription instances
deleted in step 1.</p></li>
</ol>
<h2 id="sec:delete-message-with-search-expression-search-path">1.35
Delete message with search expression search path <a
href="#sec:delete-message-with-search-expression-search-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-35">Purpose <a href="#sec:purpose-35"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message when the Controller uses a search expression to delete
one or more valid objects.</p>
<h3 id="sec:functionality-tag-34">Functionality Tag <a
href="#sec:functionality-tag-34" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-35">Test Setup <a href="#sec:test-setup-35"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the instance identifier of the Controller object that
represents the traffic generator is known by the traffic
generator.</p></li>
<li><p>Ensure that at least two
Device.LocalAgent.Controller.&lt;instance identifier&gt;.BootParameter.
objects exist on the EUT. At least one of these BootParameter objects
has a value of ‘false’ for its ‘Enable’ parameter, and at least one of
these BootParameter objects has a value of ‘true’ for its ‘Enable’
parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-34">Test Procedure <a
href="#sec:test-procedure-34" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.BootParameter.[Enable==true].&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of
<code>Device.LocalAgent.Controller.&lt;instance ID&gt;.BootParameter.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-34">Test Metrics <a href="#sec:test-metrics-34"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single <code>deleted_obj_results</code>
element, with a <code>requested_path</code> equal to
‘Device.LocalAgent.Controller.&lt;instance
identifier&gt;.BootParameter.[Enable==true]’ and an
<code>oper_success</code> element with the <code>affected_path</code>
elements equal to the path names of the successfully Deleted
objects.</p></li>
<li><p>The BootParameter whose Enable parameter was equal to ‘false’ was
not deleted.</p></li>
<li><p>The GetResp does not contain any BootParameter instances where
<code>Enable==true</code>.</p></li>
</ol>
<h2 id="sec:get-message-with-full-parameter-path">1.36 Get message with
full parameter path <a href="#sec:get-message-with-full-parameter-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-36">Purpose <a href="#sec:purpose-36"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when a
single full parameter path is specified.</p>
<h3 id="sec:functionality-tag-35">Functionality Tag <a
href="#sec:functionality-tag-35" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-36">Test Setup <a href="#sec:test-setup-36"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-35">Test Procedure <a
href="#sec:test-procedure-35" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.EndpointID&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-35">Test Metrics <a href="#sec:test-metrics-35"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>req_path_results</code> has no errors, a
<code>requested_path</code> equal to ‘Device.LocalAgent.EndpointID’, and
contains a single <code>resolved_path_results</code> element. The
<code>resolved_path_results</code> element contains a
<code>resolved_path</code> equal to ‘Device.LocalAgent.’ and a single
<code>result_params</code> element with a key of ‘EndpointID’ and a
value equal to the EUT’s EndpointID.</p></li>
</ol>
<h2
id="sec:get-message-with-multiple-full-parameter-paths-same-object">1.37
Get message with multiple full parameter paths, same object <a
href="#sec:get-message-with-multiple-full-parameter-paths-same-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-37">Purpose <a href="#sec:purpose-37"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when
multiple full parameter paths are specified within the same object.</p>
<h3 id="sec:functionality-tag-36">Functionality Tag <a
href="#sec:functionality-tag-36" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-37">Test Setup <a href="#sec:test-setup-37"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-36">Test Procedure <a
href="#sec:test-procedure-36" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.EndpointID&#39;
      param_paths: &#39;Device.LocalAgent.SoftwareVersion&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-36">Test Metrics <a href="#sec:test-metrics-36"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains two <code>req_path_results</code> elements.
The <code>requested_path_results</code> have no errors. Each contains a
single <code>resolved_path_results</code> element. One
<code>resolved_path_result</code> element contains a
<code>requested_path</code> equal to ‘Device.LocalAgent.EndpointID’, a
single <code>resolved_path</code> equal to ‘Device.LocalAgent.’, and a
single <code>result_params</code> element with a key of ‘EndpointID’ and
a value equal to the EUT EndpointID. The other
<code>resolved_path_result</code> element contains a
<code>requested_path</code> equal to
‘Device.LocalAgent.SoftwareVersion’, a single <code>resolved_path</code>
equal to ‘Device.LocalAgent.’, and a single <code>result_params</code>
element with a key of ‘SoftwareVersion’ with a valid value.</p></li>
</ol>
<h2
id="sec:get-message-with-multiple-full-parameter-paths-different-objects">1.38
Get message with multiple full parameter paths, different objects <a
href="#sec:get-message-with-multiple-full-parameter-paths-different-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-38">Purpose <a href="#sec:purpose-38"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when
multiple full parameter paths are specified within multiple objects.</p>
<h3 id="sec:functionality-tag-37">Functionality Tag <a
href="#sec:functionality-tag-37" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-38">Test Setup <a href="#sec:test-setup-38"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and its instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-37">Test Procedure <a
href="#sec:test-procedure-37" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.EndpointID&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.Enable&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-37">Test Metrics <a href="#sec:test-metrics-37"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains two <code>req_path_results</code> elements.
The <code>requested_path_results</code> have no errors. Each contains a
single <code>resolved_path_results</code> element. One
<code>resolved_path_result</code> element contains a
<code>requested_path</code> equal to ‘Device.LocalAgent.EndpointID’, a
single <code>resolved_path</code> equal to ‘Device.LocalAgent.’, and a
single <code>result_params</code> element with a key of ‘EndpointID’ and
a value equal to the EUT EndpointID. The other
<code>resolved_path_result</code> element contains a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.Enable’, a
single <code>resolved_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
single <code>result_params</code> element with a key of ‘Enable’ with a
valid value.</p></li>
</ol>
<h2 id="sec:get-message-with-object-path">1.39 Get message with object
path <a href="#sec:get-message-with-object-path" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-39">Purpose <a href="#sec:purpose-39"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when an
object path is specified.</p>
<h3 id="sec:functionality-tag-38">Functionality Tag <a
href="#sec:functionality-tag-38" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-39">Test Setup <a href="#sec:test-setup-39"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-38">Test Procedure <a
href="#sec:test-procedure-38" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-38">Test Metrics <a href="#sec:test-metrics-38"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to ‘Device.LocalAgent.’, and a set of
<code>resolved_path_results</code> elements. One contains a
<code>resolved_path</code> of ‘Device.LocalAgent.’, and a number of
<code>result_params</code> elements contain keys and values of the
parameters of ‘Device.LocalAgent.’. Additional
<code>resolved_path_results</code> exist for each of the sub-objects of
Device.LocalAgent., with <code>result_params</code> containing the keys
and values of each sub-object’s parameters.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
</ol>
<h2 id="sec:get-message-with-object-instance-path">1.40 Get message with
object instance path <a
href="#sec:get-message-with-object-instance-path" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-40">Purpose <a href="#sec:purpose-40"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when a path
to an object instance is specified.</p>
<h3 id="sec:functionality-tag-39">Functionality Tag <a
href="#sec:functionality-tag-39" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-40">Test Setup <a href="#sec:test-setup-40"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and its instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-39">Test Procedure <a
href="#sec:test-procedure-39" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-39">Test Metrics <a href="#sec:test-metrics-39"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
single <code>resolved_path_results</code> element, with a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
series of <code>result_params</code> elements containing the keys and
values of the parameters of the instance.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
</ol>
<h2 id="sec:get-message-with-invalid-parameter">1.41 Get message with
invalid parameter <a href="#sec:get-message-with-invalid-parameter"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-41">Purpose <a href="#sec:purpose-41"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Agent can properly handle a
Get message when a single invalid parameter is requested.</p>
<h3 id="sec:functionality-tag-40">Functionality Tag <a
href="#sec:functionality-tag-40" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-41">Test Setup <a href="#sec:test-setup-41"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-40">Test Procedure <a
href="#sec:test-procedure-40" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.InvalidParameter&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-40">Test Metrics <a href="#sec:test-metrics-40"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has a
<code>requested_path</code> equal to
‘Device.LocalAgent.InvalidParameter’, and an <code>err_code</code> of
‘7026’, ‘Invalid Path’.</p></li>
</ol>
<h2 id="sec:get-message-with-invalid-parameter-and-valid-parameter">1.42
Get message with invalid parameter and valid parameter <a
href="#sec:get-message-with-invalid-parameter-and-valid-parameter"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-42">Purpose <a href="#sec:purpose-42"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when both a
valid and invalid parameter are requested.</p>
<h3 id="sec:functionality-tag-41">Functionality Tag <a
href="#sec:functionality-tag-41" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-42">Test Setup <a href="#sec:test-setup-42"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-41">Test Procedure <a
href="#sec:test-procedure-41" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
       param_paths: &#39;Device.LocalAgent.EndpointID&#39;
       param_paths: &#39;Device.LocalAgent.InvalidParameter&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-41">Test Metrics <a href="#sec:test-metrics-41"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains two <code>req_path_results</code> elements.
One <code>requested_path_results</code> has no errors, and contains a
single <code>resolved_path_results</code> element. The
<code>resolved_path_results</code> element contains a
<code>requested_path</code> equal to ‘Device.LocalAgent.EndpointID’, a
single <code>resolved_path</code>equal to ‘Device.LocalAgent.’, and a
single <code>result_params</code> element with a key of ‘EndpointID’ and
a value equal to the EUT EndpointID. The other
<code>requested_path_results</code> has a <code>requested_path</code>
equal to ‘Device.LocalAgent.InvalidParameter’, and an
<code>err_code</code> of ‘7026’, ‘Invalid Path’.</p></li>
</ol>
<h2 id="sec:get-message-using-unique-key-addressing">1.43 Get message
using unique key addressing <a
href="#sec:get-message-using-unique-key-addressing" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-43">Purpose <a href="#sec:purpose-43"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses unique key addressing.</p>
<h3 id="sec:functionality-tag-42">Functionality Tag <a
href="#sec:functionality-tag-42" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-43">Test Setup <a href="#sec:test-setup-43"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the unique keys and their values are known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-42">Test Procedure <a
href="#sec:test-procedure-42" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;unique key identifier&gt;.Enable&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-42">Test Metrics <a href="#sec:test-metrics-42"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.&lt;unique key identifier&gt;.Enable’,
and a single <code>resolved_path_results</code> element, with a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
result_params element containing a key of ‘Enable’ and a valid
value.</p></li>
</ol>
<h2
id="sec:get-message-using-wildcard-search-path-on-full-parameter">1.44
Get message using wildcard search path on full parameter <a
href="#sec:get-message-using-wildcard-search-path-on-full-parameter"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-44">Purpose <a href="#sec:purpose-44"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a wildcard to retrieve a single parameter from
multiple objects.</p>
<h3 id="sec:functionality-tag-43">Functionality Tag <a
href="#sec:functionality-tag-43" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-44">Test Setup <a href="#sec:test-setup-44"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the
EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-43">Test Procedure <a
href="#sec:test-procedure-43" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.*.Enable&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-43">Test Metrics <a href="#sec:test-metrics-43"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
’Device.LocalAgent.Subscription.*.Enable’, and at least two
<code>resolved_path_results</code> elements, each with a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
<code>result_params</code> element containing a key of ‘Enable’ and a
valid value.</p></li>
</ol>
<h2 id="sec:get-message-using-wildcard-search-path-on-object-path">1.45
Get message using wildcard search path on object path <a
href="#sec:get-message-using-wildcard-search-path-on-object-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-45">Purpose <a href="#sec:purpose-45"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a wildcard to retrieve all parameters from multiple
object instances.</p>
<h3 id="sec:functionality-tag-44">Functionality Tag <a
href="#sec:functionality-tag-44" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-45">Test Setup <a href="#sec:test-setup-45"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the
EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-44">Test Procedure <a
href="#sec:test-procedure-44" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.*.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-44">Test Metrics <a href="#sec:test-metrics-44"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
’Device.LocalAgent.Subscription.*.’, and a set of
<code>resolved_path_results</code> elements. Each contains a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
number of <code>result_params</code> elements containing keys and values
of the parameters of each Subscription object.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
</ol>
<h2
id="sec:get-message-using-search-expression-search-path-equivalence">1.46
Get message using search expression search path (equivalence) <a
href="#sec:get-message-using-search-expression-search-path-equivalence"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-46">Purpose <a href="#sec:purpose-46"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a search path to retrieve objects that that
parameters that match a particular value.</p>
<h3 id="sec:functionality-tag-45">Functionality Tag <a
href="#sec:functionality-tag-45" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-46">Test Setup <a href="#sec:test-setup-46"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.
At least one of these Subscription objects should have a value of ‘true’
for its Enable parameter, and at least one should have a value of
‘false’ for its Enable parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-45">Test Procedure <a
href="#sec:test-procedure-45" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[Enable==true].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-45">Test Metrics <a href="#sec:test-metrics-45"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.[Enable==true].’, and a set of
<code>resolved_path_results</code> elements. Each contains a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
number of <code>result_params</code> elements containing keys and values
of the parameters of each Subscription object where the Enable parameter
is ‘true’.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects
whose Enable parameter is ‘false’.</p></li>
</ol>
<h2
id="sec:get-message-using-search-expression-search-path-non-equivalence">1.47
Get message using search expression search path (non-equivalence) <a
href="#sec:get-message-using-search-expression-search-path-non-equivalence"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-47">Purpose <a href="#sec:purpose-47"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a search path that does not match a particular
value.</p>
<h3 id="sec:functionality-tag-46">Functionality Tag <a
href="#sec:functionality-tag-46" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-47">Test Setup <a href="#sec:test-setup-47"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.
At least one of these Subscription objects should have a value of ‘true’
for its Enable parameter, and at least one should have a value of
‘false’ for its Enable parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-46">Test Procedure <a
href="#sec:test-procedure-46" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[Enable!=true].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-46">Test Metrics <a href="#sec:test-metrics-46"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.[Enable!=true].’, and a set of
<code>resolved_path_results</code> elements. Each contains a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
number of <code>result_params</code> elements containing keys and values
of the parameters of each subscription object where the Enable parameter
is ‘false’.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects
whose Enable parameter is ‘true’.</p></li>
</ol>
<h2
id="sec:get-message-using-search-expression-search-path-exclusive-greater-comparison">1.48
Get message using search expression search path (exclusive greater
comparison) <a
href="#sec:get-message-using-search-expression-search-path-exclusive-greater-comparison"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-48">Purpose <a href="#sec:purpose-48"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a search path to retrieve objects that that
parameters that are greater than a particular value.</p>
<h3 id="sec:functionality-tag-47">Functionality Tag <a
href="#sec:functionality-tag-47" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-48">Test Setup <a href="#sec:test-setup-48"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.
At least one of these Subscription objects should have a value of ‘10’
for its NotifExpiration parameter, and at least one with a value of ‘20’
for its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-47">Test Procedure <a
href="#sec:test-procedure-47" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&gt;10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-47">Test Metrics <a href="#sec:test-metrics-47"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.[NotifExpiration&gt;10].’, and a set of
<code>resolved_path_results</code> elements. Each contains a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
number of <code>result_params</code> elements containing keys and values
of the parameters of each Subscription object where the NotifExpiration
parameter is greater than 10.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects
whose NotifExpiration parameter is equal to or less than 10.</p></li>
</ol>
<h2
id="sec:get-message-using-search-expression-search-path-exclusive-lesser-comparison">1.49
Get message using search expression search path (exclusive lesser
comparison) <a
href="#sec:get-message-using-search-expression-search-path-exclusive-lesser-comparison"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-49">Purpose <a href="#sec:purpose-49"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a search path to retrieve objects that that
parameters that are less than a particular value.</p>
<h3 id="sec:functionality-tag-48">Functionality Tag <a
href="#sec:functionality-tag-48" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-49">Test Setup <a href="#sec:test-setup-49"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.
At least one of these Subscription objects should have a value of ‘10’
for its NotifExpiration parameter, and at least one with a value of ‘5’
for its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-48">Test Procedure <a
href="#sec:test-procedure-48" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&lt;10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-48">Test Metrics <a href="#sec:test-metrics-48"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.[NotifExpiration&lt;10].’, and a set of
<code>resolved_path_results</code> elements. Each contains a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
number of <code>result_params</code> elements contain keys and values of
the parameters of each Subscription object where the NotifExpiration
parameter is less than 10.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects
whose NotifExpiration parameter is equal to or greater than 10.</p></li>
</ol>
<h2
id="sec:get-message-using-search-expression-search-path-inclusive-greater-comparison">1.50
Get message using search expression search path (inclusive greater
comparison) <a
href="#sec:get-message-using-search-expression-search-path-inclusive-greater-comparison"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-50">Purpose <a href="#sec:purpose-50"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a search path to retrieve objects that that
parameters that are greater than or equal to a particular value.</p>
<h3 id="sec:functionality-tag-49">Functionality Tag <a
href="#sec:functionality-tag-49" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-50">Test Setup <a href="#sec:test-setup-50"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least three Subscription objects exist on the EUT.
At least one of these Subscription objects should have a value of ‘10’
for its NotifExpiration parameter, at least one with a value of ‘20’ for
its NotifExpiration parameter, and at least one with a value of ‘5’ for
its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-49">Test Procedure <a
href="#sec:test-procedure-49" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&gt;=10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-49">Test Metrics <a href="#sec:test-metrics-49"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.[NotifExpiration&gt;=10].’, and a set of
<code>resolved_path_results</code> elements. Each contains a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
number of <code>result_params</code> elements containing keys and values
of the parameters of each Subscription object where the NotifExpiration
parameter is greater than or equal to 10.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects
whose NotifExpiration parameter is less than 10.</p></li>
</ol>
<h2
id="sec:get-message-using-search-expression-search-path-inclusive-lesser-comparison">1.51
Get message using search expression search path (inclusive lesser
comparison) <a
href="#sec:get-message-using-search-expression-search-path-inclusive-lesser-comparison"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-51">Purpose <a href="#sec:purpose-51"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model when the
requested path uses a search path to retrieve objects that that
parameters that are less than or equal to a particular value.</p>
<h3 id="sec:functionality-tag-50">Functionality Tag <a
href="#sec:functionality-tag-50" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-51">Test Setup <a href="#sec:test-setup-51"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least three Subscription objects exist on the EUT.
At least one of these Subscription objects should have a value of ‘10’
for its NotifExpiration parameter, at least one with a value of ‘20’ for
its NotifExpiration parameter, and at least one with a value of ‘5’ for
its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-50">Test Procedure <a
href="#sec:test-procedure-50" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&lt;=10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-50">Test Metrics <a href="#sec:test-metrics-50"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.[NotifExpiration&lt;=10].’, and a set of
<code>resolved_path_results</code> elements. Each contains a
<code>resolved_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a
number of <code>result_params</code> elements containing keys and values
of the parameters of each Subscription object where the NotifExpiration
parameter is less than or equal to 10.</p></li>
<li><p>The keys of all <code>result_params</code> elements are relative
paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects
whose NotifExpiration parameter is greater than 10.</p></li>
</ol>
<h2 id="sec:notify---subscription-creation-using-value-change">1.52
Notify - Subscription creation using Value Change <a
href="#sec:notify---subscription-creation-using-value-change"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-52">Purpose <a href="#sec:purpose-52"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will create
Subscriptions requested by the Controller, and notifies the Controller
when the conditions of the subscription are triggered. This test uses
the ValueChange event to exercise these functions, validating the
behavior of ValueChange in the process.</p>
<h3 id="sec:functionality-tag-51">Functionality Tag <a
href="#sec:functionality-tag-51" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-52">Test Setup <a href="#sec:test-setup-52"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance
identifier of the Device.LocalAgent.Controller. object that represents
the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance
identifier&gt;.ProvisioningCode to an arbitrary value that is not
‘TestValue52’.</p></li>
</ol>
<h3 id="sec:test-procedure-51">Test Procedure <a
href="#sec:test-procedure-51" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify52&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue52&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-51">Test Metrics <a href="#sec:test-metrics-51"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful AddResp.</p></li>
<li><p>The EUT sends a Notify message with a
<code>subscription_id</code> field equal to ‘Notify52’, and an event
element of <code>value_change</code> with a <code>param_path</code> of
‘Device.LocalAgent.Controller.&lt;instance
identifier&gt;.ProvisioningCode’ and a <code>param_value</code> of
‘TestValue52’.</p></li>
</ol>
<h2 id="sec:notify---subscription-deletion-using-value-change">1.53
Notify - Subscription Deletion Using Value Change <a
href="#sec:notify---subscription-deletion-using-value-change"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-53">Purpose <a href="#sec:purpose-53"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will remove and
terminate a Subscription when the Controller uses the Delete
message.</p>
<h3 id="sec:functionality-tag-52">Functionality Tag <a
href="#sec:functionality-tag-52" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-53">Test Setup <a href="#sec:test-setup-53"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance
identifier of the Device.LocalAgent.Controller. object that represents
the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance
identifier&gt;.ProvisioningCode to an arbitrary value that is not
‘TestValue53’.</p></li>
</ol>
<h3 id="sec:test-procedure-52">Test Procedure <a
href="#sec:test-procedure-52" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify53&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp, and store the instance
identifier of the Subscription object.</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue53&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
<li><p>Send a Delete message with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Repeat step 3, changing the value of ProvisioningCode to
‘notify53-2’.</p></li>
<li><p>Wait 20 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-52">Test Metrics <a href="#sec:test-metrics-52"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful DeleteResp.</p></li>
<li><p>The EUT does not send a Notify message based on the activity in
the ProvisioningCode parameter.</p></li>
</ol>
<h2 id="sec:notification-retry-using-value-change">1.54 Notification
Retry using Value Change <a
href="#sec:notification-retry-using-value-change" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-54">Purpose <a href="#sec:purpose-54"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will attempt to
resend Notify messages when the NotifRetry parameter in a Subscription
object is set to true and the Controller does not send a NotifyResp.</p>
<h3 id="sec:functionality-tag-53">Functionality Tag <a
href="#sec:functionality-tag-53" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-54">Test Setup <a href="#sec:test-setup-54"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance
identifier of the Device.LocalAgent.Controller. object that represents
the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance
identifier&gt;.ProvisioningCode to an arbitrary value that is not
‘TestValue54’.</p></li>
<li><p>Ensure that the Device.LocalAgent.Controller.&lt;instance
identifier&gt;.USPNotifRetryMinimumWaitInterval is set to its default
value (5).</p></li>
</ol>
<h3 id="sec:test-procedure-53">Test Procedure <a
href="#sec:test-procedure-53" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify54&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue54&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 10 seconds to allow the EUT to send a Notify
message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 20 seconds to allow the EUT to send a Notify
message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-53">Test Metrics <a href="#sec:test-metrics-53"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT retries the Notify message.</p></li>
<li><p>The first retry occurs within 5-10 seconds. The second retry
occurs within 10-20 seconds.</p></li>
</ol>
<h2 id="sec:subscription-expiration-using-value-change">1.55
Subscription Expiration using Value Change <a
href="#sec:subscription-expiration-using-value-change"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-55">Purpose <a href="#sec:purpose-55"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent removes a
Subscription from the Subscription table after its TimeToLive has
expired.</p>
<h3 id="sec:functionality-tag-54">Functionality Tag <a
href="#sec:functionality-tag-54" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditionally Mandatory (Supports TimeToLive in
Device.LocalAgent.Subscription.)</p>
<h3 id="sec:test-setup-55">Test Setup <a href="#sec:test-setup-55"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance
identifier of the Device.LocalAgent.Controller. object that represents
the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance
identifier&gt;.ProvisioningCode to an arbitrary value that is not
‘TestValue55’.</p></li>
</ol>
<h3 id="sec:test-procedure-54">Test Procedure <a
href="#sec:test-procedure-54" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify55&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;TimeToLive&#39;
            value: &#39;20&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue55&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
<li><p>Wait 20 seconds.</p></li>
<li><p>Send a GetInstances message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
      msg_id: &#39;&lt;msg_id&gt;&#39;
      msg_type: GET_INSTANCES
    }
body {
      request {
        get_instances {
          obj_paths: &#39;Device.LocalAgent.Subscription.&#39;
        }
      }
    }</code></pre></li>
<li><p>Allow the EUT to send a GetInstancesResponse.</p></li>
<li><p>Repeat step 3 with a value of ‘TestValue55-2’.</p></li>
<li><p>Wait 10 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-54">Test Metrics <a href="#sec:test-metrics-54"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a Notify message after step 3.</p></li>
<li><p>The GetInstancesResponse does not list the instance of the
Subscription object created in step 1.</p></li>
<li><p>The EUT does not send a Notify message after step 9.</p></li>
</ol>
<h2 id="sec:notification-retry-expiration-using-value-change">1.56
Notification Retry Expiration using Value Change <a
href="#sec:notification-retry-expiration-using-value-change"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-56">Purpose <a href="#sec:purpose-56"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will cease
attempts to retry Notify messages after an amount of time specified in
value of the NotifExpiration parameter in the Subscription object has
passed.</p>
<h3 id="sec:functionality-tag-55">Functionality Tag <a
href="#sec:functionality-tag-55" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Subscription.{i}.NotifExpiration
parameter).</p>
<h3 id="sec:test-setup-56">Test Setup <a href="#sec:test-setup-56"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance
identifier of the Device.LocalAgent.Controller. object that represents
the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance
identifier&gt;.ProvisioningCode to an arbitrary value that is not
‘TestValue56’.</p></li>
<li><p>Ensure that the Device.LocalAgent.Controller.&lt;instance
identifier&gt;.USPNotifRetryMinimumWaitInterval is set to its default
value (5).</p></li>
</ol>
<h3 id="sec:test-procedure-55">Test Procedure <a
href="#sec:test-procedure-55" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify56&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;NotifExpiration&#39;
            value: &#39;20&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue56&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 10 seconds to allow the EUT to send a Notify
message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 20 seconds to allow the EUT to send a Notify
message.</p></li>
<li><p>Do not send a Notify Response to the EUT.</p></li>
<li><p>Wait 30 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-55">Test Metrics <a href="#sec:test-metrics-55"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT retries the Notify message within 20 seconds.</p></li>
<li><p>The EUT does not retry the Notify message after 20
seconds.</p></li>
</ol>
<h2 id="sec:objectcreation-notification">1.57 ObjectCreation
Notification <a href="#sec:objectcreation-notification"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-57">Purpose <a href="#sec:purpose-57"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a
Notify message to the Controller when the Controller is Subscribed to
the ObjectCreation event.</p>
<h3 id="sec:functionality-tag-56">Functionality Tag <a
href="#sec:functionality-tag-56" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-57">Test Setup <a href="#sec:test-setup-57"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-56">Test Procedure <a
href="#sec:test-procedure-56" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify57&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ObjectCreation&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Subscription.&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify57-2&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-56">Test Metrics <a href="#sec:test-metrics-56"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful AddResp.</p></li>
<li><p>The EUT sends a Notify message with a
<code>subscription_id</code> field equal to ‘Notify57’, and an event
element of <code>obj_creation</code> with a <code>obj_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’ and a map
element of <code>unique_keys</code> with values of ‘ID, ’Notify57-2’ and
‘Recipient, Device.LocalAgent.Controller.&lt;instance
identifier&gt;.’.</p></li>
</ol>
<h2 id="sec:objectdeletion-notification">1.58 ObjectDeletion
Notification <a href="#sec:objectdeletion-notification"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-58">Purpose <a href="#sec:purpose-58"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a
Notify message to the Controller when the Controller is Subscribed to
the ObjectDeletion event.</p>
<h3 id="sec:functionality-tag-57">Functionality Tag <a
href="#sec:functionality-tag-57" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-58">Test Setup <a href="#sec:test-setup-58"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT,
and the unique keys and their values are known by the traffic
generator.</p></li>
</ol>
<h3 id="sec:test-procedure-57">Test Procedure <a
href="#sec:test-procedure-57" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify58&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ObjectDeletion&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Subscription.&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup 2&gt;.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp</p></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-57">Test Metrics <a href="#sec:test-metrics-57"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful AddResp.</p></li>
<li><p>The EUT sends a Notify message with a
<code>subscription_id</code> field equal to ‘Notify58’, and an event
element of <code>obj_deletion</code> with a <code>obj_path</code> of
‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’</p></li>
</ol>
<h2 id="sec:event-notification-using-periodic">1.59 Event Notification
using Periodic! <a href="#sec:event-notification-using-periodic"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-59">Purpose <a href="#sec:purpose-59"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a
Notify message to the Controller when the Controller is Subscribed to an
Event notification that correlates with an event defined in its
supported data model.</p>
<h3 id="sec:functionality-tag-58">Functionality Tag <a
href="#sec:functionality-tag-58" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Controller:1 profile and
Device.LocalAgent.Controller.{i}.PeriodicNotifTime parameter)</p>
<h3 id="sec:test-setup-59">Test Setup <a href="#sec:test-setup-59"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-58">Test Procedure <a
href="#sec:test-procedure-58" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
          allow_partial: false
            update_objs {
                obj_path: &#39;Device.LocalAgent.Controller.&lt;Controller ID&gt;.&#39;
                param_settings {
                    param: &#39;PeriodicNotifInterval&#39;
                    value: &#39;60&#39;
                }
                param_settings {
                    param: &#39;PeriodicNotifTime&#39;
                    value: &#39;2019-01-01T00:00:00Z&#39;
                }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
          allow_partial: false
          create_objs {
              obj_path: &#39;Device.LocalAgent.Subscription.&#39;
              param_settings {
                      param: &#39;Enable&#39;
                      value: &#39;true&#39;
                  }
              param_settings {
                      param: &#39;ID&#39;
                      value: &#39;sub-103&#39;
                  }
              param_settings {
                      param: &#39;NotifType&#39;
                      value: &#39;Event&#39;
                  }
              param_settings {
                      param: &#39;ReferenceList&#39;
                      value: &#39;Device.LocalAgent.Periodic!&#39;
                  }
              }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notification from the EUT.</p></li>
<li><p>Wait for a Notification from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-58">Test Metrics <a href="#sec:test-metrics-58"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a SetResponse with an <code>oper_success</code> after
step 1.</li>
<li>The EUT sends an AddResponse with an <code>oper_success</code> after
step 2.</li>
<li>The EUT sends a Notification with an Periodic! event element.</li>
<li>A second Periodic event is sent by the EUT 60 (+/- 4) seconds after
the first.</li>
</ol>
<h2 id="sec:onboardrequest-notification">1.60 OnBoardRequest
Notification <a href="#sec:onboardrequest-notification"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-60">Purpose <a href="#sec:purpose-60"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a
Notify message to the Controller when the Controller initiates a
SendOnBoardRequest() operation.</p>
<h3 id="sec:functionality-tag-59">Functionality Tag <a
href="#sec:functionality-tag-59" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports
Device.LocalAgent.Controller.{i}.SendOnBoardRequest() command)</p>
<h3 id="sec:test-setup-60">Test Setup <a href="#sec:test-setup-60"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-59">Test Procedure <a
href="#sec:test-procedure-59" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
    operate {
      command: &#39;Device.LocalAgent.Controller.&lt;instance identifier of traffic generator&gt;.SendOnBoardRequest()&#39;
      command_key: &#39;test60&#39;
      send_resp: false
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-59">Test Metrics <a href="#sec:test-metrics-59"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message with (at minimum) a
<code>subscription_id</code> field set to an empty string, and an event
element of <code>on_board_req</code> with appropriate values for the
<code>oui</code>, <code>product_class</code>,
<code>serial_number</code>, and
<code>agent_supported_protocol_versions</code> fields.</li>
</ol>
<h2 id="sec:operate-message-using-reboot-with-send_resp-true">1.61
Operate message using Reboot() with send_resp true <a
href="#sec:operate-message-using-reboot-with-send_resp-true"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-61">Purpose <a href="#sec:purpose-61"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process an Operate message using the Reboot() operation as a trigger
when <code>send_resp</code> is true.</p>
<h3 id="sec:functionality-tag-60">Functionality Tag <a
href="#sec:functionality-tag-60" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Reboot:1 or any other command)</p>
<h3 id="sec:test-setup-61">Test Setup <a href="#sec:test-setup-61"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-60">Test Procedure <a
href="#sec:test-procedure-60" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send an Operate message to the EUT with the following
structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
    operate {
      command: &#39;Device.Reboot()&#39;
      command_key: &#39;test61&#39;
      send_resp: true
    }
  }
}</code></pre>
<ol>
<li><p>Allow the EUT to send an OperateResp</p></li>
<li><p>Allow the EUT to reboot.</p></li>
</ol>
<h3 id="sec:test-metrics-60">Test Metrics <a href="#sec:test-metrics-60"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an OperateResp message with a single
<code>operation_results</code> element containing an
<code>executed_command</code> of ‘Device.Reboot()’ and a
<code>req_output_args</code> element containing an empty
<code>output_args</code> element.</p></li>
<li><p>The EUT reboots and resumes connectivity with the test
system.</p></li>
</ol>
<h2 id="sec:operate-message-using-reboot-with-send_resp-false">1.62
Operate message using Reboot() with send_resp false <a
href="#sec:operate-message-using-reboot-with-send_resp-false"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-62">Purpose <a href="#sec:purpose-62"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process an Operate message using the Reboot() operation as a trigger
when <code>send_resp</code> is false.</p>
<h3 id="sec:functionality-tag-61">Functionality Tag <a
href="#sec:functionality-tag-61" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Reboot:1 or any other command)</p>
<h3 id="sec:test-setup-62">Test Setup <a href="#sec:test-setup-62"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-61">Test Procedure <a
href="#sec:test-procedure-61" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
    operate {
      command: &#39;Device.Reboot()&#39;
      command_key: &#39;test62&#39;
      send_resp: false
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to reboot.</p></li>
</ol>
<h3 id="sec:test-metrics-61">Test Metrics <a href="#sec:test-metrics-61"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT reboots and resumes connectivity with the test system.</li>
</ol>
<h2
id="sec:operate-message-using-input-arguments-deprecated-by-1.79">1.63
Operate message using input arguments (DEPRECATED by 1.79) <a
href="#sec:operate-message-using-input-arguments-deprecated-by-1.79"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<p>The purpose of this test is to ensure that the Agent will correctly
process an Operate message with input arguments.</p>
<p><em>Note: as of TP-469 Amendment 1, this test has been deprecated to
sync with the deprecation of
Device.LocalAgent.Controller.{i}.ScheduleTimer() in Device:2.14. The
command was replaced with Device.ScheduleTimer() and is covered by test
1.79</em></p>
<h3 id="sec:functionality-tag-62">Functionality Tag <a
href="#sec:functionality-tag-62" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports
Device.LocalAgent.Controller.{i}.ScheduleTimer() command or at least one
operation that contains input arguments)</p>
<h3 id="sec:test-setup-63">Test Setup <a href="#sec:test-setup-63"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT, subscribed to
the Timer! event.</li>
</ol>
<h3 id="sec:test-procedure-62">Test Procedure <a
href="#sec:test-procedure-62" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Controller.&lt;Controller instance&gt;.ScheduleTimer()&#39;
            command_key: &#39;test63&#39;
            send_resp: true
            input_args {
                key: &#39;DelaySeconds&#39;
                value: &#39;30&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a Timer! event.</p></li>
</ol>
<h3 id="sec:test-metrics-62">Test Metrics <a href="#sec:test-metrics-62"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResp message with a single
<code>operation_results</code> element containing an executed_command of
‘Device.LocalAgent.Controller.&lt;Controller
instance&gt;.ScheduleTimer()’ and a <code>req_output_args</code> element
containing an empty <code>output_args</code> element.</li>
<li>The EUT sends a Notify message containing a Event message with
<code>obj_path</code> of ‘Device.LocalAgent.Controller.&lt;Controller
instance&gt;.ScheduleTimer()’.</li>
</ol>
<h2 id="sec:asynchronous-operation-with-send_resp-true">1.64
Asynchronous operation with send_resp true <a
href="#sec:asynchronous-operation-with-send_resp-true"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-63">Purpose <a href="#sec:purpose-63"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process an Operate message where the operation is asynchronous and
<code>send_resp</code> is set to true.</p>
<h3 id="sec:functionality-tag-63">Functionality Tag <a
href="#sec:functionality-tag-63" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the TraceRoute:1 profile or at least
one other asynchronous operation)</p>
<h3 id="sec:test-setup-64">Test Setup <a href="#sec:test-setup-64"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT that is
subscribed to the OperationComplete notification for TraceRoute().</li>
</ol>
<h3 id="sec:test-procedure-63">Test Procedure <a
href="#sec:test-procedure-63" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.IP.Diagnostics.TraceRoute()&#39;
            command_key: &#39;test64&#39;
            send_resp: true
            input_args {
               key: &#39;Host&#39;
               value: &#39;&lt;remote host IP&gt;&#39;
            }
            input_args {
               key: &#39;ProtocolVersion&#39;
               value: &#39;Any&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send an OperateResp message with an
<code>executed_command</code> which matches the command sent in the
Operate message.</p></li>
<li><p>Allow the EUT to send a Notify message with an inner
OperationComplete message with a <code>obj_path</code> element matching
the command sent in the Operate Message.</p></li>
</ol>
<h3 id="sec:test-metrics-63">Test Metrics <a href="#sec:test-metrics-63"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResp message with a single
<code>operation_results</code> element containing an
<code>executed_command</code> of ‘Device.IP.Diagnostics.TraceRoute()’
and a <code>req_obj_path</code> field containing a path name to the
Request object created by the EUT.</li>
<li>The EUT sends a Notify message with an <code>obj_path</code> of
‘Device.IP.Diagnostics.’, a <code>command_name</code> of ‘TraceRoute()’,
and a <code>command_key</code> of ‘test64’.</li>
</ol>
<h2 id="sec:asynchronous-operation-with-send_resp-false">1.65
Asynchronous operation with send_resp false <a
href="#sec:asynchronous-operation-with-send_resp-false"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-64">Purpose <a href="#sec:purpose-64"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process an Operate message where the operation is asynchronous and
<code>send_resp</code> is set to false.</p>
<h3 id="sec:functionality-tag-64">Functionality Tag <a
href="#sec:functionality-tag-64" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the TraceRoute:1 profile or at least
one other asynchronous operation)</p>
<h3 id="sec:test-setup-65">Test Setup <a href="#sec:test-setup-65"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT that is
subscribed to the OperationComplete notification for TraceRoute().</li>
</ol>
<h3 id="sec:test-procedure-64">Test Procedure <a
href="#sec:test-procedure-64" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.IP.Diagnostics.TraceRoute()&#39;
            command_key: &#39;test65&#39;
            send_resp: false
            input_args {
                key: &#39;Host&#39;
                value: &#39;&lt;remote host IP&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message containing an
OperationComplete message with an <code>obj_path</code> and
<code>command_name</code> matching the command sent in the Operate
Request.</p></li>
</ol>
<h3 id="sec:test-metrics-64">Test Metrics <a href="#sec:test-metrics-64"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not send an OperateResp message.</li>
<li>The EUT sends a Notify message containing an OperationComplete
message with an <code>obj_path</code> of ‘Device.IP.Diagnostics.’, a
<code>command_name</code> of ‘TraceRoute()’, and a
<code>command_key</code> of ‘test65’.</li>
</ol>
<h2
id="sec:getinstances-using-a-single-object-first_level_only-true">1.66
GetInstances using a single object, first_level_only true <a
href="#sec:getinstances-using-a-single-object-first_level_only-true"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-65">Purpose <a href="#sec:purpose-65"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetInstances message on a single object when first_level_only
is true.</p>
<h3 id="sec:functionality-tag-65">Functionality Tag <a
href="#sec:functionality-tag-65" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-66">Test Setup <a href="#sec:test-setup-66"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that the Agent has at least one entry in the
Device.LocalAgent.Controller.{i}. table and supports at least one
multi-instance sub-object (e.g., .MTP.{i}., etc.)</li>
</ol>
<h3 id="sec:test-procedure-65">Test Procedure <a
href="#sec:test-procedure-65" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetInstances message to the EUT with the following
structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            first_level_only: true
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-65">Test Metrics <a href="#sec:test-metrics-65"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with one
<code>req_path_results</code> elements containing a
<code>requested_path</code> of ‘Device.LocalAgent.Controller.’ and at
least one <code>cur_insts</code> element.</li>
<li>All <code>instantiated_obj_path</code> elements in the
GetInstancesResp only contain ‘Device.LocalAgent.Controller.’
instances.</li>
</ol>
<h2
id="sec:getinstances-using-a-single-object-first_level_only-false">1.67
GetInstances using a single object, first_level_only false <a
href="#sec:getinstances-using-a-single-object-first_level_only-false"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-66">Purpose <a href="#sec:purpose-66"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetInstances message on a single object when
<code>first_level_only</code> is false.</p>
<h3 id="sec:functionality-tag-66">Functionality Tag <a
href="#sec:functionality-tag-66" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-67">Test Setup <a href="#sec:test-setup-67"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that the Agent has at least one entry in the
Device.LocalAgent.Controller.{i}. table and supports at least one
multi-instance sub-object (e.g., .MTP.{i}., etc.)</li>
</ol>
<h3 id="sec:test-procedure-66">Test Procedure <a
href="#sec:test-procedure-66" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetInstances message to the EUT with the following
structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            first_level_only: false
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-66">Test Metrics <a href="#sec:test-metrics-66"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with one
<code>req_path_results</code> elements containing a
<code>requested_path</code> of ‘Device.LocalAgent.Controller.’, and
lists all instances of the Controller object, plus any instances of all
sub-objects.</li>
</ol>
<h2 id="sec:getinstances-with-multiple-objects">1.68 GetInstances with
multiple objects <a href="#sec:getinstances-with-multiple-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-67">Purpose <a href="#sec:purpose-67"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetInstances message on multiple objects.</p>
<h3 id="sec:functionality-tag-67">Functionality Tag <a
href="#sec:functionality-tag-67" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-68">Test Setup <a href="#sec:test-setup-68"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-67">Test Procedure <a
href="#sec:test-procedure-67" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetInstances message to the EUT with the following
structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            obj_paths: &#39;Device.LocalAgent.MTP.&#39;
            first_level_only: true
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-67">Test Metrics <a href="#sec:test-metrics-67"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with two
<code>req_path_results</code> elements containing a
<code>requested_path</code> of ‘Device.LocalAgent.Controller.’ and
‘Device.LocalAgent.MTP.’</li>
<li>Both <code>req_path_results</code> and each having at least one
<code>cur_insts</code> element.</li>
</ol>
<h2 id="sec:deleted"><em>1.69 DELETED</em> <a href="#sec:deleted"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<p><em>Note: This test was formerly named “GetInstances with root
object” and was invalid. It has been removed from this version of the
test plan and exists only as a placeholder for numeric
consistency.</em></p>
<h2 id="sec:getinstances-with-wildcard-search-path">1.70 GetInstances
with wildcard search path <a
href="#sec:getinstances-with-wildcard-search-path" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-68">Purpose <a href="#sec:purpose-68"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetInstances message when a wildcard search path is used.</p>
<h3 id="sec:functionality-tag-68">Functionality Tag <a
href="#sec:functionality-tag-68" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-69">Test Setup <a href="#sec:test-setup-69"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-68">Test Procedure <a
href="#sec:test-procedure-68" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetInstances message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.*.MTP.&#39;
            first_level_only: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-68">Test Metrics <a href="#sec:test-metrics-68"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with at least one
<code>req_path_results</code> element containing a
‘Device.LocalAgent.Controller.{i}.MTP.’ instance.</li>
</ol>
<h2 id="sec:getinstances-with-search-expression-search-path">1.71
GetInstances with search expression search path <a
href="#sec:getinstances-with-search-expression-search-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-69">Purpose <a href="#sec:purpose-69"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetInstances message when a search expression search path is
used.</p>
<h3 id="sec:functionality-tag-69">Functionality Tag <a
href="#sec:functionality-tag-69" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports least one nested multi-instance
object)</p>
<h3 id="sec:test-setup-70">Test Setup <a href="#sec:test-setup-70"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure there is at least one BootParameter for the Controller
instance used for testing.</li>
<li>Ensure the Alias of the Controller used for testing is known.</li>
</ol>
<h3 id="sec:test-procedure-69">Test Procedure <a
href="#sec:test-procedure-69" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetInstances message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}

body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.[Alias==&quot;&lt;Controller alias&gt;&quot;].BootParameter.&#39;
            first_level_only: false
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-69">Test Metrics <a href="#sec:test-metrics-69"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with at least one
<code>req_path_results</code> element containing a
‘Device.LocalAgent.Controller.&lt;Controller
instance&gt;.BootParameter.’ instance.</li>
</ol>
<h2
id="sec:getsupporteddm-using-a-single-object-first_level_only-false-all-options">1.72
GetSupportedDM using a single object, first_level_only false, all
options <a
href="#sec:getsupporteddm-using-a-single-object-first_level_only-false-all-options"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-70">Purpose <a href="#sec:purpose-70"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetSupportedDM message using a single object, when
<code>first_level_only</code> is false and all options are true.</p>
<h3 id="sec:functionality-tag-70">Functionality Tag <a
href="#sec:functionality-tag-70" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-71">Test Setup <a href="#sec:test-setup-71"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-70">Test Procedure <a
href="#sec:test-procedure-70" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.&#39;
            first_level_only: false
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-70">Test Metrics <a href="#sec:test-metrics-70"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp.</li>
<li>Every <code>req_obj_results</code> element contains all parameters,
events, and commands below the specified partial path, plus the
supported data model information of all sub-objects.</li>
<li>Each SupportedParamResult field contains the
<code>param_name</code>, <code>access</code>, <code>value_type</code>,
and <code>value_change</code> fields with valid information, if the
element is a parameter.</li>
<li>Each SupportedCommandResult field contains the
<code>command_name</code> field, <code>command_type</code> field, and a
set of <code>input_arg_names</code> and <code>output_arg_names</code>
fields with valid information, if the element is a command.</li>
<li>Each SupportedEventResult field contains the <code>event_name</code>
field and a set of <code>arg_names</code> fields with valid information,
if the element is an event.</li>
</ol>
<h2
id="sec:getsupporteddm-using-a-single-object-first_level_only-true-all-options">1.73
GetSupportedDM using a single object, first_level_only true, all options
<a
href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-all-options"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-71">Purpose <a href="#sec:purpose-71"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetSupportedDM message using a single object, when
<code>first_level_only</code> is true and all options are true.</p>
<h3 id="sec:functionality-tag-71">Functionality Tag <a
href="#sec:functionality-tag-71" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-72">Test Setup <a href="#sec:test-setup-72"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-71">Test Procedure <a
href="#sec:test-procedure-71" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following
structure:</p>
<pre><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.&#39;
            first_level_only: true
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-71">Test Metrics <a href="#sec:test-metrics-71"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp containing
<code>req_object_results</code> elements for the specified object and
each immediate child object.</li>
<li>Only the <code>req_obj_results</code> element of the object
specified in <code>obj_paths</code> contains parameters, events, and
commands.</li>
<li>Each SupportedParamResult field contains the
<code>param_name</code>, <code>access</code>, <code>value_type</code>,
and <code>value_change</code> fields with valid information, if
applicable.</li>
<li>Each SupportedCommandResult field contains the
<code>command_name</code> field, <code>command_type</code> field, and a
set of <code>input_arg_names</code> and <code>output_arg_names</code>
fields with valid information, if applicable.</li>
<li>Each SupportedEventResult field contains the <code>event_name</code>
field and a set of <code>arg_names</code> fields with valid information,
if applicable.</li>
</ol>
<h2
id="sec:getsupporteddm-using-a-single-object-first_level_only-true-no-options">1.74
GetSupportedDM using a single object, first_level_only true, no options
<a
href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-no-options"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-72">Purpose <a href="#sec:purpose-72"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetSupportedDM message using a single object, when
<code>first_level_only</code> is true and all options are false.</p>
<h3 id="sec:functionality-tag-72">Functionality Tag <a
href="#sec:functionality-tag-72" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-73">Test Setup <a href="#sec:test-setup-73"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-72">Test Procedure <a
href="#sec:test-procedure-72" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.&#39;
            first_level_only: true
            return_commands: false
            return_events: false
            return_params: false
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-72">Test Metrics <a href="#sec:test-metrics-72"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp containing
<code>req_object_results</code> elements for the specified object and
each immediate child object.</li>
<li>None of the <code>req_obj_results</code> elements contain any
commands, events, or params.</li>
</ol>
<h2
id="sec:getsupporteddm-using-multiple-objects-first_level_only-true-all-options">1.75
GetSupportedDM using multiple objects, first_level_only true, all
options <a
href="#sec:getsupporteddm-using-multiple-objects-first_level_only-true-all-options"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-73">Purpose <a href="#sec:purpose-73"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process a GetSupportedDM message using multiple objects, when
<code>first_level_only</code> is true and all options are true.</p>
<h3 id="sec:functionality-tag-73">Functionality Tag <a
href="#sec:functionality-tag-73" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-74">Test Setup <a href="#sec:test-setup-74"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-73">Test Procedure <a
href="#sec:test-procedure-73" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            obj_paths: &#39;Device.LocalAgent.MTP.&#39;
            first_level_only: true
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-73">Test Metrics <a href="#sec:test-metrics-73"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp containing
<code>req_object_results</code> elements for the specified objects and
each immediate child object.</li>
<li>Only the <code>req_obj_results</code> element of the object
specified in <code>obj_paths</code> contains parameters, events, and
commands.</li>
<li>Each SupportedParamResult field contains the
<code>param_name</code>, <code>access</code>, <code>value_type</code>,
and <code>value_change</code> fields with valid information, if
applicable.</li>
<li>Each SupportedCommandResult field contains the
<code>command_name</code> field, <code>command_type</code> field, and a
set of <code>input_arg_names</code> and <code>output_arg_names</code>
fields with valid information, if applicable.</li>
<li>Each SupportedEventResult field contains the <code>event_name</code>
field and a set of <code>arg_names</code> fields with valid information,
if applicable.</li>
</ol>
<h2 id="sec:getsupporteddm-on-root-object-all-options">1.76
GetSupportedDM on root object, all options <a
href="#sec:getsupporteddm-on-root-object-all-options" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-74">Purpose <a href="#sec:purpose-74"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Agent will correctly
process a GetSupportedDM message when the requested path is the root of
the data model.</p>
<h3 id="sec:functionality-tag-74">Functionality Tag <a
href="#sec:functionality-tag-74" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-75">Test Setup <a href="#sec:test-setup-75"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-74">Test Procedure <a
href="#sec:test-procedure-74" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths:&#39;Device.&#39;
            first_level_only: false
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-74">Test Metrics <a href="#sec:test-metrics-74"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp message with one or more
<code>req_obj_results</code> specifying its entire supported data model,
listing commands, parameters, and events.</li>
<li>Each SupportedParamResult field contains the
<code>param_name</code>, <code>access</code>, <code>value_type</code>,
and <code>value_change</code> fields with valid information, if
applicable.</li>
<li>Each SupportedCommandResult field contains the
<code>command_name</code> field, <code>command_type</code> field, and a
set of <code>input_arg_names</code> and <code>output_arg_names</code>
fields with valid information, if applicable.</li>
<li>Each SupportedEventResult field contains the <code>event_name</code>
field and a set of <code>arg_names</code> fields with valid information,
if applicable.</li>
</ol>
<h2 id="sec:getsupporteddm-on-unsupported-object">1.77 GetSupportedDM on
unsupported object <a href="#sec:getsupporteddm-on-unsupported-object"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:procedure">Procedure <a href="#sec:procedure"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Agent will correctly
process a GetSupportedDM message when the requested path is an
unsupported object.</p>
<h3 id="sec:functionality-tag-75">Functionality Tag <a
href="#sec:functionality-tag-75" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-76">Test Setup <a href="#sec:test-setup-76"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-75">Test Procedure <a
href="#sec:test-procedure-75" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetSupportedDM to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths:&#39;Device.LocalAgent.UnsupportedObject.&#39;
            first_level_only: false
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-75">Test Metrics <a href="#sec:test-metrics-75"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT returns a GetSupportedDMResp with a single
<code>req_obj_results</code> with a <code>err_code</code> of
‘7026’.</li>
</ol>
<h2
id="sec:removal-of-subscriptions-that-have-no-associated-controller">1.78
Removal of subscriptions that have no associated controller <a
href="#sec:removal-of-subscriptions-that-have-no-associated-controller"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-75">Purpose <a href="#sec:purpose-75"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>According to the Device.LocalAgent.Subscription.{i}.Recipient
parameter:</p>
<pre><code>The value MUST be the Path Name of the Controller instance that will receive the Notification associated with this Subscription. If the referenced object is deleted, this instance MUST also be deleted (so the parameter value will never be an empty string).</code></pre>
<p>This test validates that if a Controller is removed from the Agent’s
Device.LocalAgent.Controller.{i}. table, any associated Subscription
objects are also removed.</p>
<h3 id="sec:functionality-tag-76">Functionality Tag <a
href="#sec:functionality-tag-76" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Controller:1 profile with the ability
to create instances of the Device.LocalAgent.Controller. object)</p>
<h3 id="sec:test-setup-77">Test Setup <a href="#sec:test-setup-77"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the EUT has two Controller instances in its
Device.LocalAgent. Controller.{i}. table, and that both Controllers can
be simulated by the test equipment. Consider one to be the primary
Controller, and the other to be the secondary Controller. Record the
secondary Controller’s instance identifier.</p></li>
<li><p>Ensure that there is at least one Subscription object in the EUT
Device.LocalAgent.Subscription.{i}. table created by the secondary
Controller.</p></li>
</ol>
<h3 id="sec:test-procedure-76">Test Procedure <a
href="#sec:test-procedure-76" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier of secondary Controller&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-76">Test Metrics <a href="#sec:test-metrics-76"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The Subscription table does not contain the Subscription object
outlined in test setup step 3.</li>
</ol>
<h2 id="sec:operate-message-using-input-arguments">1.79 Operate message
using input arguments <a
href="#sec:operate-message-using-input-arguments" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-76">Purpose <a href="#sec:purpose-76"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
process an Operate message with input arguments.</p>
<h3 id="sec:functionality-tag-77">Functionality Tag <a
href="#sec:functionality-tag-77" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.ScheduleTimer() command or at
least one operation that contains input arguments)</p>
<h3 id="sec:test-setup-78">Test Setup <a href="#sec:test-setup-78"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT with NotifType
OperationComplete on Device.ScheduleTimer().</li>
</ol>
<h3 id="sec:test-procedure-77">Test Procedure <a
href="#sec:test-procedure-77" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
      operate {
          command: &#39;Device.ScheduleTimer()&#39;
          command_key: &#39;test79&#39;
          send_resp: true
          input_args {
              key: &#39;DelaySeconds&#39;
              value: &#39;30&#39;
          }
      }
  }
}</code></pre></li>
<li><p>Wait at least 30 seconds.</p></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
</ol>
<h3 id="sec:test-metrics-77">Test Metrics <a href="#sec:test-metrics-77"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResp message with the
<code>req_obj_path</code> field, containing an Object Instance Path to
the Request Object created as a result of this asynchronous
operation.</li>
<li>The EUT sends a Notify message containing a valid OperationComplete
event, with a <code>command_name</code> of ‘ScheduleTimer()’, an
<code>obj_path</code> of ‘Device.’, and a <code>command_key</code> of
‘test79’.</li>
</ol>
<h2 id="sec:getsupportedprotocol">1.80 GetSupportedProtocol <a
href="#sec:getsupportedprotocol" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-77">Purpose <a href="#sec:purpose-77"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can learn the
supported USP protocol version(s) of the EUT.</p>
<h3 id="sec:functionality-tag-78">Functionality Tag <a
href="#sec:functionality-tag-78" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-79">Test Setup <a href="#sec:test-setup-79"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-78">Test Procedure <a
href="#sec:test-procedure-78" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedProtocol message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET_SUPPORTED_PROTO
}
body {
  request {
    get_supported_protocol {
      controller_supported_protocol_versions: &#39;&lt;comma-separated list of USP specification versions&gt;&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetSupportedProtocolResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-78">Test Metrics <a href="#sec:test-metrics-78"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetSupportedProtocolResponse.</p></li>
<li><p>The <code>agent_supported_protocol_versions</code> element
contains a comma-separated list of supported USP specification
versions.</p></li>
</ol>
<h2 id="sec:automatic-unique-key-generation">1.81 Automatic unique key
generation <a href="#sec:automatic-unique-key-generation"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-78">Purpose <a href="#sec:purpose-78"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT assigns unique
keys which are not supplied in the Add message.</p>
<h3 id="sec:functionality-tag-79">Functionality Tag <a
href="#sec:functionality-tag-79" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-80">Test Setup <a href="#sec:test-setup-80"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the
Subscription object, ensure that the number of existing Subscription
object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-79">Test Procedure <a
href="#sec:test-procedure-79" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
    request {
      add {
        allow_partial: false
          create_objs {
              obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                    param: &#39;Enable&#39;
                    value: &#39;true&#39;
                  }
                param_settings {
                    param: &#39;NotifType&#39;
                    value: &#39;ValueChange&#39;
                  }
                param_settings {
                    param: &#39;ReferenceList&#39;
                    value: &#39;Device.LocalAgent.SoftwareVersion&#39;
                  }
              }
          create_objs {
              obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                  param: &#39;Enable&#39;
                  value: &#39;true&#39;
                }
                param_settings {
                  param: &#39;NotifType&#39;
                  value: &#39;ValueChange&#39;
                }
                param_settings {
                  param: &#39;ReferenceList&#39;
                  value: &#39;Device.LocalAgent.EndpointID&#39;
                }
            }
        }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 1&gt;.&#39;
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 2&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-79">Test Metrics <a href="#sec:test-metrics-79"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT AddResp is valid.</p></li>
<li><p>The AddResp contains two CreatedObjectResults that each have an
OperationStatus of OperationSuccess. The OperationSuccess elements
contains no parameter errors and 3 elements in the unique key map:
Alias, Recipient, and ID. The values of Alias and ID must differ between
the two CreatedObjectResults, and the values of Recipient must be
identical. Alternatively, the OperationSuccess contains 2 elements in
the unique key map if the Alias parameter is not supported: ‘Recipient’,
and ‘ID’. In this case the values of ID must differ between the two
CreatedObjectResults, and the values of Recipient must be
identical.</p></li>
</ol>
<h2 id="sec:get-message-with-unmatched-search-expression">1.82 Get
message with unmatched search expression <a
href="#sec:get-message-with-unmatched-search-expression"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-79">Purpose <a href="#sec:purpose-79"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that the EUT sends a successful
empty response when a Get request using a search expression returns no
objects.</p>
<h3 id="sec:functionality-tag-80">Functionality Tag <a
href="#sec:functionality-tag-80" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-81">Test Setup <a href="#sec:test-setup-81"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that no Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-80">Test Procedure <a
href="#sec:test-procedure-80" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[Enable==true].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-80">Test Metrics <a href="#sec:test-metrics-80"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Subscription.[Enable==true].’, and an empty
<code>resolved_path_results</code> element (i.e.,
<code>resolved_path_results{}</code>).</p></li>
</ol>
<h2 id="sec:getinstances-message-with-unmatched-search-expression">1.83
GetInstances message with unmatched search expression <a
href="#sec:getinstances-message-with-unmatched-search-expression"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-80">Purpose <a href="#sec:purpose-80"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that the EUT sends a successful
empty response when a GetInstances request using a search expression
returns no objects.</p>
<h3 id="sec:functionality-tag-81">Functionality Tag <a
href="#sec:functionality-tag-81" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports least one nested multi-instance
object)</p>
<h3 id="sec:test-setup-82">Test Setup <a href="#sec:test-setup-82"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-81">Test Procedure <a
href="#sec:test-procedure-81" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetInstances message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET_INSTANCES
}
body {
  request {
    get_instances {
      obj_paths: &#39;Device.LocalAgent.Controller.[Alias==&quot;&lt;non-existent alias&gt;&quot;].BootParameter.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetInstancesResp.</p></li>
</ol>
<h3 id="sec:test-metrics-81">Test Metrics <a href="#sec:test-metrics-81"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetInstancesResp.</p></li>
<li><p>The GetInstancesResp contains a single
<code>req_path_results</code> element. The
<code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to
‘Device.LocalAgent.Controller.[Alias==“&lt;non-existent
alias&gt;”].BootParameter.’, and an empty <code>curr_insts</code>
element (i.e., <code>curr_insts{}</code>).</p></li>
</ol>
<h2 id="sec:notification---subscription-using-search-paths">1.84
Notification - Subscription using search paths <a
href="#sec:notification---subscription-using-search-paths"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-81">Purpose <a href="#sec:purpose-81"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will create and
acknowledge Subscriptions containing a search path, and notifies the
Controller when the conditions of the subscription are triggered.</p>
<h3 id="sec:functionality-tag-82">Functionality Tag <a
href="#sec:functionality-tag-82" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-83">Test Setup <a href="#sec:test-setup-83"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure there are at least 2 enabled BootParameter instances under
the Controller used for testing.</p></li>
</ol>
<h3 id="sec:test-procedure-82">Test Procedure <a
href="#sec:test-procedure-82" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &quot;&lt;msg_id&gt;&quot;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &quot;Device.LocalAgent.Subscription.&quot;
        param_settings: {
            param: &quot;Enable&quot;
            value: &quot;true&quot;
        }
        param_settings: {
            param: &quot;ID&quot;
            value: &quot;notify84&quot;
        }
        param_settings: {
            param: &quot;NotifType&quot;
            value: &quot;ValueChange&quot;
        }
        param_settings: {
            param: &quot;ReferenceList&quot;
            value: &quot;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.*.Enable&quot;
            required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &quot;&lt;msg_id&gt;&quot;
  msg_type: SET
}

body {
  request {

    set {
      allow_partial: false
      update_objs {
        obj_path: &quot;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.&lt;valid BootParameter instance&gt;&quot;
        param_settings: {
         param: &quot;Enable&quot;
         value: &quot;false&quot;
         required: true
        }
      }
    }
  }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-82">Test Metrics <a href="#sec:test-metrics-82"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp.</p></li>
<li><p>The EUT sends a notification for the created subscription
containing the BootParameter modified in step 3.</p></li>
</ol>
<h2
id="sec:for-future-work-get-message-with-unresolved-instances---addressing-by-instance-number">1.85
(For future work) Get message with unresolved instances - addressing by
instance number <a
href="#sec:for-future-work-get-message-with-unresolved-instances---addressing-by-instance-number"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h4 id="sec:purpose-82">Purpose <a href="#sec:purpose-82"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h4>
<p>This test was left out of version 1.2 of this document. There is some
ambiguity in TR-369 Amendment 2 (USP 1.2) with regards to how paths that
use instance number addressing should be treated when they address
non-existant objects. This will be clarified in a future release.</p>
<h2
id="sec:get-message-with-unresolved-instances---using-a-search-path">1.86
Get message with unresolved instances - using a search path <a
href="#sec:get-message-with-unresolved-instances---using-a-search-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-83">Purpose <a href="#sec:purpose-83"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent successfully
responds to a Get request when the requested Instantiated Object Path is
valid but does not resolve to an existing object when using a search
path.</p>
<h3 id="sec:functionality-tag-83">Functionality Tag <a
href="#sec:functionality-tag-83" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-84">Test Setup <a href="#sec:test-setup-84"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that no enabled Subscription objects exist on the
EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-83">Test Procedure <a
href="#sec:test-procedure-83" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[Enable==true].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-83">Test Metrics <a href="#sec:test-metrics-83"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains no errors.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> element is empty
(i.e. <code>requested_path_results{}</code>).</p></li>
</ol>
<h2
id="sec:get-message-with-unresolved-instances---using-an-object-path">1.87
Get message with unresolved instances - using an object path <a
href="#sec:get-message-with-unresolved-instances---using-an-object-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-84">Purpose <a href="#sec:purpose-84"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent successfully
responds to a Get request when the requested Instantiated Object Path is
valid but does not resolve to an existing object when using an Object
Path.</p>
<h3 id="sec:functionality-tag-84">Functionality Tag <a
href="#sec:functionality-tag-84" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-85">Test Setup <a href="#sec:test-setup-85"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that no Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-84">Test Procedure <a
href="#sec:test-procedure-84" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-84">Test Metrics <a href="#sec:test-metrics-84"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains no errors.</p></li>
<li><p>The GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> element is empty
(i.e. <code>requested_path_results{}</code>).</p></li>
</ol>
<h2 id="sec:add-message-fails-when-unique-key-is-invalid">1.88 Add
message fails when unique key is invalid <a
href="#sec:add-message-fails-when-unique-key-is-invalid"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-85">Purpose <a href="#sec:purpose-85"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT will deliver an
error after it receives an Add message that includes a unique key
parameter that is not required but is set to an invalid value.</p>
<h3 id="sec:functionality-tag-85">Functionality Tag <a
href="#sec:functionality-tag-85" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-86">Test Setup <a href="#sec:test-setup-86"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-85">Test Procedure <a
href="#sec:test-procedure-85" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;True&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
</ol>
<h3 id="sec:test-metrics-85">Test Metrics <a href="#sec:test-metrics-85"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message containing an appropriate error
code.</p></li>
<li><p>The EUT does not create the new Subscription object.</p></li>
</ol>
<h2 id="sec:get-message-using-max_depth">1.89 Get message using
max_depth <a href="#sec:get-message-using-max_depth" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-86">Purpose <a href="#sec:purpose-86"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the
values of parameters in the Agent’s Instantiated Data Model using the
<code>max_depth</code> field to limit the tree depth of
<code>result_params</code>.</p>
<h3 id="sec:functionality-tag-86">Functionality Tag <a
href="#sec:functionality-tag-86" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-87">Test Setup <a href="#sec:test-setup-87"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-86">Test Procedure <a
href="#sec:test-procedure-86" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.&#39;
      max_depth: 1
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.&#39;
      max_depth: 2
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.&#39;
      max_depth: 0
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-86">Test Metrics <a href="#sec:test-metrics-86"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The first GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to ‘Device.LocalAgent.’, and a set of
<code>resolved_path_results</code> elements. One contains a
<code>resolved_path</code> of ‘Device.LocalAgent.’, and a number of
<code>result_params</code> elements ONLY containing keys and values of
the parameters of ‘Device.LocalAgent.’. No additional
<code>resolved_path_results</code> elements are included.</p></li>
<li><p>The second GetResp contains a single
<code>req_path_results</code> element. The
<code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to ‘Device.LocalAgent.’, and a set of
<code>resolved_path_results</code> elements. One contains a
<code>resolved_path</code> of ‘Device.LocalAgent.’, and a number of
<code>result_params</code> elements contain keys and values of the
parameters of ‘Device.LocalAgent.’. Additional
<code>resolved_path_results</code> exist for each of the immediate-child
sub-objects of Device.LocalAgent., with <code>result_params</code>
containing the keys and values of each sub-object’s parameters.</p></li>
<li><p>The third GetResp contains a single <code>req_path_results</code>
element. The <code>requested_path_results</code> has no errors, has a
<code>requested_path</code> equal to ‘Device.LocalAgent.’, and a set of
<code>resolved_path_results</code> elements. One contains a
<code>resolved_path</code> of ‘Device.LocalAgent.’, and a number of
<code>result_params</code> elements contain keys and values of the
parameters of ‘Device.LocalAgent.’. Additional
<code>resolved_path_results</code> exist for each of the sub-objects of
Device.LocalAgent., and their sub-objects, with
<code>result_params</code> containing the keys and values of each
sub-object’s parameters.</p></li>
<li><p>The keys of all <code>result_params</code> elements are Relative
Paths.</p></li>
</ol>
<h2
id="sec:delete-message-with-search-expression-that-matches-no-objects">1.90
Delete message with search expression that matches no objects <a
href="#sec:delete-message-with-search-expression-that-matches-no-objects"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-87">Purpose <a href="#sec:purpose-87"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles
a Delete message using a search path that matches no objects.</p>
<h3 id="sec:functionality-tag-87">Functionality Tag <a
href="#sec:functionality-tag-87" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-88">Test Setup <a href="#sec:test-setup-88"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that no Subscription objects exist in the Agent’s
Instantiated Data Model with the Enable parameter set to
‘false’.</p></li>
</ol>
<h3 id="sec:test-procedure-87">Test Procedure <a
href="#sec:test-procedure-87" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.Subscription.[Enable==false].&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-87">Test Metrics <a href="#sec:test-metrics-87"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a DeleteResp containing an empty
<code>oper_success</code> element.</li>
</ol>
<h2 id="sec:unknown-arguments-in-an-operate-message">1.91 Unknown
arguments in an Operate message <a
href="#sec:unknown-arguments-in-an-operate-message" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-88">Purpose <a href="#sec:purpose-88"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Agent ignores unknown
arguments that are included in an operate message, using
Device.ScheduleTimer() as an example.</p>
<h3 id="sec:functionality-tags-1">Functionality Tags <a
href="#sec:functionality-tags-1" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.ScheduleTimer() command)</p>
<h3 id="sec:test-setup-89">Test Setup <a href="#sec:test-setup-89"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-88">Test Procedure <a
href="#sec:test-procedure-88" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.ScheduleTimer()&#39;
            send_resp: true
            input_args {
                key: &#39;DelaySeconds&#39;
                value: &#39;10&#39;
            }
            input_args {
                key: &#39;InvalidArgument&#39;
                value: &#39;2&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send an OperateResp.</p></li>
</ol>
<h3 id="sec:test-metrics-88">Test Metrics <a href="#sec:test-metrics-88"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a successful OperateResponse with ‘ScheduleTimer()’ in
the <code>executed_command</code> element.</li>
</ol>
<h2 id="sec:agent-uses-default-values-for-operate-arguments">1.92 Agent
uses default values for Operate arguments <a
href="#sec:agent-uses-default-values-for-operate-arguments"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-89">Purpose <a href="#sec:purpose-89"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly
use default values for non-mandatory command arguments that include
defaults defined in the data model.</p>
<h3 id="sec:functionality-tag-88">Functionality Tag <a
href="#sec:functionality-tag-88" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the TraceRoute:1 profile)</p>
<h3 id="sec:test-setup-90">Test Setup <a href="#sec:test-setup-90"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-89">Test Procedure <a
href="#sec:test-procedure-89" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.IP.Diagnostics.TraceRoute()&#39;
            command_key: &#39;test92&#39;
            send_resp: true
            input_args {
               key: &#39;Host&#39;
               value: &#39;&lt;remote host IP&gt;&#39;
            }
            input_args {
               key: &#39;ProtocolVersion&#39;
               value: &#39;Any&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send an Operate Response message with an
<code>executed_command</code> which matches the command sent in the
Operate message.</p></li>
<li><p>Do not reply to the TraceRoute ICMP requests.</p></li>
</ol>
<h3 id="sec:test-metrics-89">Test Metrics <a href="#sec:test-metrics-89"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an OperateResp message with a single
<code>operation_results</code> element containing an
<code>executed_command</code> of ‘Device.IP.Diagnostics.TraceRoute()’
and a <code>req_obj_path</code> field containing a path name to the
Request object created by the EUT.</p></li>
<li><p>The EUT attempts a TraceRoute diagnostic against the supplied
host name. It retries 3 times within a 1% range of a 5000 millisecond
delay between each retry, which are the default values.</p></li>
</ol>
<h1 id="sec:authentication-and-access-control-test-cases">2
Authentication and Access Control Test Cases <a
href="#sec:authentication-and-access-control-test-cases"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:agent-does-not-accept-messages-from-its-own-endpoint-id">2.1
Agent does not accept messages from its own Endpoint ID <a
href="#sec:agent-does-not-accept-messages-from-its-own-endpoint-id"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-90">Purpose <a href="#sec:purpose-90"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not respond to a
USP message when the <code>from_id</code> is the EUT endpoint ID.</p>
<h3 id="sec:functionality-tag-89">Functionality Tag <a
href="#sec:functionality-tag-89" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-91">Test Setup <a href="#sec:test-setup-91"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-steps">Test Steps <a href="#sec:test-steps"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a message to the EUT with the following record
structure:</p>
<pre data-filter="pbv" type="Record"><code>    to_id: &#39;&lt;EUT_ID&gt;&#39;
    from_id: &#39;&lt;EUT_ID&gt;&#39;

    session_context {
        # ...
    }</code></pre></li>
</ol>
<h3 id="sec:test-metrics-90">Test Metrics <a href="#sec:test-metrics-90"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the message.</li>
</ol>
<h2
id="sec:agent-rejects-messages-that-do-not-contain-its-to_id-in-the-usp-record">2.2
Agent rejects messages that do not contain its to_id in the USP Record
<a
href="#sec:agent-rejects-messages-that-do-not-contain-its-to_id-in-the-usp-record"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-91">Purpose <a href="#sec:purpose-91"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not respond to a
USP message when the USP record doesn’t contain a the EUT
<code>to_id</code>.</p>
<h3 id="sec:functionality-tags-2">Functionality Tags <a
href="#sec:functionality-tags-2" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-92">Test Setup <a href="#sec:test-setup-92"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-steps-1">Test Steps <a href="#sec:test-steps-1"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a message to the EUT with the following record
structure:</p>
<pre data-filter="pbv" type="Record"><code>    to_id: &#39;&lt;invalid ID&gt;&#39;
    from_id: &#39;&lt;EUT_ID&gt;&#39;

    # ...</code></pre></li>
</ol>
<h3 id="sec:test-metrics-91">Test Metrics <a href="#sec:test-metrics-91"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the USP message.</li>
</ol>
<h2
id="sec:agent-does-not-process-messages-without-s-certificate-information---deprecated">2.3
Agent does not process messages without ’s certificate information -
DEPRECATED <a
href="#sec:agent-does-not-process-messages-without-s-certificate-information---deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-92">Purpose <a href="#sec:purpose-92"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the EUT doesn’t process a
USP message when the EUT does not possess the Controller’s certificate
information.</p>
<h3 id="sec:functionality-tags-3">Functionality Tags <a
href="#sec:functionality-tags-3" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Deprecated</p>
<h3 id="sec:test-setup-93">Test Setup <a href="#sec:test-setup-93"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Simulate a second Controller whose credentials are signed by an
untrusted certificate authority.</li>
<li>Ensure that the UntrustedRole feature is either unsupported or
disabled in the EUT.</li>
</ol>
<h3 id="sec:test-procedure-90">Test Procedure <a
href="#sec:test-procedure-90" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message from the second simulated Controller to the
EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}

body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-92">Test Metrics <a href="#sec:test-metrics-92"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT does not respond to the Get message.</li>
</ol>
<h2
id="sec:agent-rejects-messages-from-endpoint-ids-that-are-not-in-subjectaltname---deprecated">2.4
Agent rejects messages from Endpoint IDs that are not in subjectAltName
- DEPRECATED <a
href="#sec:agent-rejects-messages-from-endpoint-ids-that-are-not-in-subjectaltname---deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-93">Purpose <a href="#sec:purpose-93"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the EUT rejects a message
from an Endpoint ID that doesn’t match the subjectAltName in the
provided certificate.</p>
<h3 id="sec:functionality-tags-4">Functionality Tags <a
href="#sec:functionality-tags-4" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Deprecated</p>
<h3 id="sec:test-setup-94">Test Setup <a href="#sec:test-setup-94"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-91">Test Procedure <a
href="#sec:test-procedure-91" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT using a certificate with a
subjectAltName that does not match the Controller’s Endpoint ID.</li>
</ol>
<h3 id="sec:test-metrics-93">Test Metrics <a href="#sec:test-metrics-93"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the Get message.</li>
</ol>
<h2 id="sec:agent-use-of-self-signed-certificates---deprecated">2.5
Agent use of self-signed certificates - DEPRECATED <a
href="#sec:agent-use-of-self-signed-certificates---deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-94">Purpose <a href="#sec:purpose-94"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can handle self-signed
certificates.</p>
<h3 id="sec:functionality-tags-5">Functionality Tags <a
href="#sec:functionality-tags-5" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Deprecated</p>
<h3 id="sec:test-setup-95">Test Setup <a href="#sec:test-setup-95"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the is configured to use a self-signed certificate and
Endpoint ID that the EUT has not seen.</li>
</ol>
<h3 id="sec:test-procedure-92">Test Procedure <a
href="#sec:test-procedure-92" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT using a self-signed cert with the
following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-94">Test Metrics <a href="#sec:test-metrics-94"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT responds to the Get with a GetResponse containing a
‘Device.LocalAgent.ControllerTrust.{i}.Alias’ parameter.</li>
</ol>
<h2 id="sec:connecting-without-absolute-time">2.6 Connecting without
absolute time <a href="#sec:connecting-without-absolute-time"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-95">Purpose <a href="#sec:purpose-95"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can communicate with a
Controller if it cannot obtain an absolute time.</p>
<h3 id="sec:functionality-tags-6">Functionality Tags <a
href="#sec:functionality-tags-6" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports USP Session Context)</p>
<h3 id="sec:test-setup-96">Test Setup <a href="#sec:test-setup-96"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is booted into a test environment where it cannot resolve
absolute time.</li>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller is configured to use an expired
certificate.</li>
</ol>
<h3 id="sec:test-procedure-93">Test Procedure <a
href="#sec:test-procedure-93" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header{
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-95">Test Metrics <a href="#sec:test-metrics-95"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT responds to the Get message with a GetResponse, ignoring the
expired dates on the certificate.</li>
</ol>
<h2 id="sec:agent-ignores-unsigned-or-invalid-record-signatures">2.7
Agent ignores unsigned or invalid Record signatures <a
href="#sec:agent-ignores-unsigned-or-invalid-record-signatures"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-96">Purpose <a href="#sec:purpose-96"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will ignore a USP
record when the signature field is invalid.</p>
<h3 id="sec:functionality-tags-7">Functionality Tags <a
href="#sec:functionality-tags-7" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports USP Session Context)</p>
<h3 id="sec:test-setup-97">Test Setup <a href="#sec:test-setup-97"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-94">Test Procedure <a
href="#sec:test-procedure-94" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT with an invalid signature value.</li>
</ol>
<h3 id="sec:test-metrics-96">Test Metrics <a href="#sec:test-metrics-96"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the Get message.</li>
</ol>
<h2 id="sec:agent-ignores-invalid-tls-certificate">2.8 Agent ignores
invalid TLS certificate <a
href="#sec:agent-ignores-invalid-tls-certificate" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-97">Purpose <a href="#sec:purpose-97"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT rejects TLS connections
when an Endpoint’s TLS certificate is invalid.</p>
<h3 id="sec:functionality-tags-8">Functionality Tags <a
href="#sec:functionality-tags-8" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports USP Session Context)</p>
<h3 id="sec:test-setup-98">Test Setup <a href="#sec:test-setup-98"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has obtained an absolute time reference.</li>
</ol>
<h3 id="sec:test-procedure-95">Test Procedure <a
href="#sec:test-procedure-95" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT with an expired TLS certificate.</li>
</ol>
<h3 id="sec:test-metrics-97">Test Metrics <a href="#sec:test-metrics-97"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT doesn’t respond to the Get message.</li>
</ol>
<h2 id="sec:use-of-the-untrusted-role">2.9 Use of the Untrusted role <a
href="#sec:use-of-the-untrusted-role" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-98">Purpose <a href="#sec:purpose-98"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly assigns new a
Role of Untrusted.</p>
<h3 id="sec:functionality-tags-9">Functionality Tags <a
href="#sec:functionality-tags-9" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile)</p>
<h3 id="sec:test-setup-99">Test Setup <a href="#sec:test-setup-99"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-96">Test Procedure <a
href="#sec:test-procedure-96" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Using a secondary Controller, connect to the EUT and send an Get
message.</p></li>
<li><p>Using the primary trusted Controller send a Get message to the
EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-98">Test Metrics <a href="#sec:test-metrics-98"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the
<code>Device.LocalAgent.Controller.&lt;secondary Controller instance&gt;.AssignedRole</code>
matches the value of
<code>Device.LocalAgent.ControllerTrust.UntrustedRole</code>.</li>
</ol>
<h2 id="sec:adding-a-role">2.10 Adding a Role <a
href="#sec:adding-a-role" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-99">Purpose <a href="#sec:purpose-99"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Add message can be
used to add new Roles to the EUT data model.</p>
<h3 id="sec:functionality-tags-10">Functionality Tags <a
href="#sec:functionality-tags-10" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile)</p>
<h3 id="sec:test-setup-100">Test Setup <a href="#sec:test-setup-100"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-97">Test Procedure <a
href="#sec:test-procedure-97" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&#39;
                param_settings {
                    param: &#39;Enable&#39;
                    value: &#39;true&#39;
                }
                param_settings {
                    param: &#39;Name&#39;
                    value: &#39;Trusted&#39;
                }
            }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-99">Test Metrics <a href="#sec:test-metrics-99"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT correctly sent an AddResponse with a new Role instance.</li>
</ol>
<h2 id="sec:permissions---object-creation-allowed">2.11 Permissions -
Object Creation Allowed <a
href="#sec:permissions---object-creation-allowed" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-100">Purpose <a href="#sec:purpose-100"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to allow the creation of a particular object.</p>
<h3 id="sec:functionality-tags-11">Functionality Tags <a
href="#sec:functionality-tags-11" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-101">Test Setup <a href="#sec:test-setup-101"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
</ol>
<h3 id="sec:test-procedure-98">Test Procedure <a
href="#sec:test-procedure-98" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;Obj&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
            }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-100">Test Metrics <a
href="#sec:test-metrics-100" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing
a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in
step 1.</li>
<li>The EUT sends an AddResponse with a oper_success element containing
a new Device.LocalAgent.Subscription. object in step 2.</li>
</ol>
<h2 id="sec:permissions---object-creation-not-allowed">2.12 Permissions
- Object Creation Not Allowed <a
href="#sec:permissions---object-creation-not-allowed" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-101">Purpose <a href="#sec:purpose-101"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to restrict the creation of a particular object.</p>
<h3 id="sec:functionality-tags-12">Functionality Tags <a
href="#sec:functionality-tags-12" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-102">Test Setup <a href="#sec:test-setup-102"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
</ol>
<h3 id="sec:test-procedure-99">Test Procedure <a
href="#sec:test-procedure-99" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send an Add message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;Obj&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre>
<ol>
<li>Send an Add message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
            }
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-101">Test Metrics <a
href="#sec:test-metrics-101" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing
a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in
step 1.</li>
<li>The EUT sends an Error containing type ‘7006’ - Permission
Denied.</li>
</ol>
<h2 id="sec:permissions---object-deletion-allowed">2.13 Permissions -
Object Deletion Allowed <a
href="#sec:permissions---object-deletion-allowed" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-102">Purpose <a href="#sec:purpose-102"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to allow the deletion of a particular object.</p>
<h3 id="sec:functionality-tags-13">Functionality Tags <a
href="#sec:functionality-tags-13" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-103">Test Setup <a href="#sec:test-setup-103"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
<li>Ensure there is one or more Subscription object that can be
deleted.</li>
</ol>
<h3 id="sec:test-procedure-100">Test Procedure <a
href="#sec:test-procedure-100" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;InstantiatedObj&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: DELETE
}
body {
    request {
        delete {
            allow_partial: false
            obj_paths: &#39;Device.LocalAgent.Subscription.&lt;subscription to delete&gt;&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-102">Test Metrics <a
href="#sec:test-metrics-102" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends an DeleteResponse with a <code>oper_success</code>
element containing the Device.LocalAgent.Subscription. object in step
2.</li>
</ol>
<h2 id="sec:permissions---object-deletion-not-allowed">2.14 Permissions
- Object Deletion Not Allowed <a
href="#sec:permissions---object-deletion-not-allowed" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-103">Purpose <a href="#sec:purpose-103"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to restrict the deletion of a particular object.</p>
<h3 id="sec:functionality-tags-14">Functionality Tags <a
href="#sec:functionality-tags-14" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-104">Test Setup <a href="#sec:test-setup-104"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
<li>Ensure there is one or more Subscription object that can be
deleted.</li>
</ol>
<h3 id="sec:test-procedure-101">Test Procedure <a
href="#sec:test-procedure-101" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;InstantiatedObj&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Delete message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: DELETE
}
body {
    request {
        delete {
            allow_partial: false
            obj_paths: &#39;Device.LocalAgent.Subscription.&lt;subscription to delete&gt;&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-103">Test Metrics <a
href="#sec:test-metrics-103" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends an Error containing type ‘7006’ - Permission
Denied.</li>
</ol>
<h2 id="sec:permissions---parameter-update-allowed">2.15 Permissions -
Parameter Update Allowed <a
href="#sec:permissions---parameter-update-allowed" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-104">Purpose <a href="#sec:purpose-104"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to allow the update of a particular object.</p>
<h3 id="sec:functionality-tags-15">Functionality Tags <a
href="#sec:functionality-tags-15" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-105">Test Setup <a href="#sec:test-setup-105"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
<li>Ensure there is one or more Subscription object that can be
edited.</li>
</ol>
<h3 id="sec:test-procedure-102">Test Procedure <a
href="#sec:test-procedure-102" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            allow_partial: false
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;&lt;negation of previous value&gt;&#39;
                            required: true
                        }
                }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-104">Test Metrics <a
href="#sec:test-metrics-104" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends a SetResponse with a <code>oper_success</code> element
containing Device.LocalAgent.Subscription.{i}.Enable in step 2.</li>
</ol>
<h2 id="sec:permissions---parameter-update-not-allowed">2.16 Permissions
- Parameter Update Not Allowed <a
href="#sec:permissions---parameter-update-not-allowed"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-105">Purpose <a href="#sec:purpose-105"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to restrict the update of a particular object.</p>
<h3 id="sec:functionality-tags-16">Functionality Tags <a
href="#sec:functionality-tags-16" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-106">Test Setup <a href="#sec:test-setup-106"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
<li>Ensure there is one or more Subscription object that can be
edited.</li>
</ol>
<h3 id="sec:test-steps-2">Test Steps <a href="#sec:test-steps-2"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            allow_partial: false
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;&lt;negation of previous value&gt;&#39;
                            required: true
                        }
                }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-105">Test Metrics <a
href="#sec:test-metrics-105" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends an Error containing type ‘7006’ - Permission
Denied.</li>
</ol>
<h2 id="sec:permissions---operation-allowed">2.17 Permissions -
Operation Allowed <a href="#sec:permissions---operation-allowed"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-106">Purpose <a href="#sec:purpose-106"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to allow the invocation of commands on a particular object.</p>
<h3 id="sec:functionality-tags-17">Functionality Tags <a
href="#sec:functionality-tags-17" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-107">Test Setup <a href="#sec:test-setup-107"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
</ol>
<h3 id="sec:test-steps-3">Test Steps <a href="#sec:test-steps-3"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.Reboot()&#39;
                    }
                param_settings {
                        param: &#39;CommandEvent&#39;
                        value: &#39;r-x-&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
            send_resp: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-106">Test Metrics <a
href="#sec:test-metrics-106" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends an OperateResponse with a <code>req_output_args</code>
element in step 2.</li>
</ol>
<h2 id="sec:permissions---operation-not-allowed">2.18 Permissions -
Operation Not Allowed <a href="#sec:permissions---operation-not-allowed"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-107">Purpose <a href="#sec:purpose-107"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to restrict the invocation of commands on a particular object.</p>
<h3 id="sec:functionality-tags-18">Functionality Tags <a
href="#sec:functionality-tags-18" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-108">Test Setup <a href="#sec:test-setup-108"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
</ol>
<h3 id="sec:test-steps-4">Test Steps <a href="#sec:test-steps-4"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.Reboot()&#39;
                    }
                param_settings {
                        param: &#39;CommandEvent&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-107">Test Metrics <a
href="#sec:test-metrics-107" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends an Error message containing an appropriate error
code.</li>
</ol>
<h2
id="sec:permissions---value-change-notification-allowed-on-parameter">2.19
Permissions - Value Change Notification Allowed on Parameter <a
href="#sec:permissions---value-change-notification-allowed-on-parameter"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-108">Purpose <a href="#sec:purpose-108"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to allow a Controller to subscribe to the ValueChange notification
of a particular parameter.</p>
<h3 id="sec:functionality-tags-19">Functionality Tags <a
href="#sec:functionality-tags-19" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-109">Test Setup <a href="#sec:test-setup-109"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
</ol>
<h3 id="sec:test-steps-5">Test Steps <a href="#sec:test-steps-5"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw-n&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;NotifType&#39;
                        value: &#39;ValueChange&#39;
                    }
                param_settings {
                        param: &#39;ReferenceList&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
            }
        }
    }
  }</code></pre></li>
<li><p>Send a Set message to the EUT, setting
Device.LocalAgent.Controller.&lt;Controller instance
id&gt;.PeriodicNotifInterval to a new value.</p></li>
<li><p>Wait for a Notification from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-108">Test Metrics <a
href="#sec:test-metrics-108" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with an <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends an AddResponse with an <code>oper_success</code>
element containing a new Device.LocalAgent.Subscription. object in step
2.</li>
<li>The EUT sends a SetResponse with an <code>oper_success</code>
element with the path ‘Device.LocalAgent.Controller.&lt;Controller
instance id&gt;.PeriodicNotifInterval’.</li>
<li>The EUT sends a Notify message with a <code>value_change</code>
element pointing to ‘Device.LocalAgent.Controller.&lt;Controller
instance&gt;.PeriodicNotifInterval’.</li>
</ol>
<h2
id="sec:permissions---value-change-notification-not-allowed-on-parameter">2.20
Permissions - Value Change Notification Not Allowed on Parameter <a
href="#sec:permissions---value-change-notification-not-allowed-on-parameter"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-109">Purpose <a href="#sec:purpose-109"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions
set to restrict a Controller from subscribing to the ValueChange
notification of a particular parameter.</p>
<h3 id="sec:functionality-tags-20">Functionality Tags <a
href="#sec:functionality-tags-20" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-110">Test Setup <a href="#sec:test-setup-110"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
</ol>
<h3 id="sec:test-steps-6">Test Steps <a href="#sec:test-steps-6"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;NotifType&#39;
                        value: &#39;ValueChange&#39;
                    }
                param_settings {
                        param: &#39;ReferenceList&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT, setting
Device.LocalAgent.Controller.&lt;Controller instance
id&gt;.PeriodicNotifInterval to a new value.</p></li>
<li><p>Wait 30 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-109">Test Metrics <a
href="#sec:test-metrics-109" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with an <code>oper_success</code>
element containing a new
Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step
1.</li>
<li>The EUT sends an AddResponse with an <code>oper_success</code>
element containing a new Device.LocalAgent.Subscription. object in step
2.</li>
<li>The EUT sends a SetResponse with an <code>oper_success</code>
element with the path ‘Device.LocalAgent.Controller.&lt;Controller
instance id&gt;.PeriodicNotifInterval’.</li>
<li>The EUT does not send a Notify message with a value_change element
pointing to ‘Device.LocalAgent.Controller.&lt;Controller
instance&gt;.PeriodicNotifInterval’.</li>
</ol>
<h2 id="sec:permissions---overlapping-permissions">2.21 Permissions -
Overlapping Permissions <a
href="#sec:permissions---overlapping-permissions" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-110">Purpose <a href="#sec:purpose-110"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT allows for the creation
of Permission instances, and when Permissions overlap the EUT behaves
correctly.</p>
<h3 id="sec:functionality-tags-21">Functionality Tags <a
href="#sec:functionality-tags-21" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-111">Test Setup <a href="#sec:test-setup-111"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
<li>Ensure there is at least one BootParameter configured.</li>
</ol>
<h3 id="sec:test-procedure-103">Test Procedure <a
href="#sec:test-procedure-103" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.&lt;Controller id&gt;.Role.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.BootParameter.&lt;boot parameter instance&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;----&#39;
                    }
            }
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.&lt;Controller id&gt;.Role.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.BootParameter.&lt;boot parameter instance&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw--&#39;
                    }
                param_settings {
                        param: &#39;Order&#39;
                        value: &#39;1&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;Controller instance ID&gt;.BootParameter.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-110">Test Metrics <a
href="#sec:test-metrics-110" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse message after step 1. The message
contains two <code>oper_success</code> elements, one for each added
permission.</li>
<li>The EUT sends a GetResponse with a <code>result_params</code>
element containing parameters of the specified BootParameter
instance.</li>
</ol>
<h2
id="sec:using-get-when-no-read-permissions-are-available-on-some-parameters">2.22
Using Get when no read permissions are available on some parameters <a
href="#sec:using-get-when-no-read-permissions-are-available-on-some-parameters"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-111">Purpose <a href="#sec:purpose-111"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly returns
parameters that are readable while ignoring parameters that do not have
read permissions.</p>
<h3 id="sec:functionality-tags-22">Functionality Tags <a
href="#sec:functionality-tags-22" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at
least one role that allows object creation, or supports writable
parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-112">Test Setup <a href="#sec:test-setup-112"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is
writable.</li>
<li>Ensure there is at least one BootParameter configured.</li>
</ol>
<h3 id="sec:test-procedure-104">Test Procedure <a
href="#sec:test-procedure-104" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                    obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller trust instance&gt;.Permission.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;true&#39;
                        }
                    param_settings {
                            param: &#39;Targets&#39;
                            value: &#39;Device.LocalAgent.Controller.&lt;Controller instance ID&gt;.BootParameter.&lt;known instance&gt;.ParameterName&#39;
                        }
                    param_settings {
                            param: &#39;Param&#39;
                            value: &#39;----&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;Controller instance ID&gt;.BootParameter.&lt;known instance&gt;.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-111">Test Metrics <a
href="#sec:test-metrics-111" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse message after step 1. The message
contains a <code>oper_success</code> element for the added
Permission.</li>
<li>The EUT sends a GetResponse with a <code>result_params</code>
element containing parameters of the specified BootParameter instance,
with the exception of the ‘ParameterName’ parameter.</li>
</ol>
<h1 id="sec:usp-record-test-cases">3 USP Record Test Cases <a
href="#sec:usp-record-test-cases" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:bad-request-outside-a-session-context">3.1 Bad request
outside a session context <a
href="#sec:bad-request-outside-a-session-context" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-112">Purpose <a href="#sec:purpose-112"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly responds to a
bad request outside a session context.</p>
<h3 id="sec:functionality-tags-23">Functionality Tags <a
href="#sec:functionality-tags-23" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-113">Test Setup <a href="#sec:test-setup-113"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to not use a session context.</li>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-105">Test Procedure <a
href="#sec:test-procedure-105" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP Record to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-112">Test Metrics <a
href="#sec:test-metrics-112" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT either ignores the malformed record or sends a USP Record
Error.</li>
</ol>
<h2 id="sec:agent-verifies-non-payload-field-integrity">3.2 Agent
Verifies Non-Payload Field Integrity <a
href="#sec:agent-verifies-non-payload-field-integrity"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-113">Purpose <a href="#sec:purpose-113"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT verifies the integrity
of the non-payload fields in a USP record.</p>
<h3 id="sec:functionality-tags-24">Functionality Tags <a
href="#sec:functionality-tags-24" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS
for USP Record Integrity)’</p>
<h3 id="sec:test-setup-114">Test Setup <a href="#sec:test-setup-114"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the relevant equipment are configured to NOT provide
integrity protection at the MTP layer.</li>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
</ol>
<h3 id="sec:test-procedure-106">Test Procedure <a
href="#sec:test-procedure-106" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT with a <code>payload_security</code>
of PLAINTEXT.</li>
</ol>
<h3 id="sec:test-metrics-113">Test Metrics <a
href="#sec:test-metrics-113" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives the USP record, it exhibits the expected ‘bad
request’ behavior for the applicable MTP.</li>
</ol>
<h2
id="sec:agent-rejects-invalid-signature-starting-a-session-context">3.3
Agent rejects invalid signature starting a session context <a
href="#sec:agent-rejects-invalid-signature-starting-a-session-context"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-114">Purpose <a href="#sec:purpose-114"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT handles an attempt to
start a session context with an invalid <code>mac_signature</code>.</p>
<h3 id="sec:functionality-tags-25">Functionality Tags <a
href="#sec:functionality-tags-25" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS
for USP Record Integrity)’</p>
<h3 id="sec:test-setup-115">Test Setup <a href="#sec:test-setup-115"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
</ol>
<h3 id="sec:test-procedure-107">Test Procedure <a
href="#sec:test-procedure-107" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a TLS ‘client hello’ to the EUT to begin a session context as
described in ‘<a
href="https://usp.technology/specification/e2e-message-exchange/">End to
End Message Exchange</a>’ in TR-369 with an invalid
<code>mac_signature</code>.</li>
</ol>
<h3 id="sec:test-metrics-114">Test Metrics <a
href="#sec:test-metrics-114" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives the USP record, it exhibits the expected ‘bad
request’ behavior for the applicable MTP.</li>
</ol>
<h2 id="sec:using-tls-for-usp-record-integrity">3.4 Using TLS for USP
Record Integrity <a href="#sec:using-tls-for-usp-record-integrity"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-115">Purpose <a href="#sec:purpose-115"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT uses TLS to validate
the integrity of USP records when the <code>payload_security</code> is
TLS and the TLS handshake has completed.</p>
<h3 id="sec:functionality-tags-26">Functionality Tags <a
href="#sec:functionality-tags-26" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS
for USP Record Integrity)’</p>
<h3 id="sec:test-setup-116">Test Setup <a href="#sec:test-setup-116"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller are configured to secure the USP
record payload with TLS.</li>
</ol>
<h3 id="sec:test-procedure-108">Test Procedure <a
href="#sec:test-procedure-108" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a E2E session with the EUT using TLS to secure the
payload.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-115">Test Metrics <a
href="#sec:test-metrics-115" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>In the GetResponse sent by the EUT, the <code>mac_signature</code>
in the USP Record secures the non-payload fields via the MAC
mechanism.</li>
<li>The <code>mac_signature</code> in the USP record sent by the EUT
validates the integrity of the non-payload fields.</li>
</ol>
<h2 id="sec:failure-to-establish-tls">3.5 Failure to Establish TLS <a
href="#sec:failure-to-establish-tls" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-116">Purpose <a href="#sec:purpose-116"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT behaves correctly when
the TLS session used to encapsulate the payload cannot be
established.</p>
<h3 id="sec:functionality-tags-27">Functionality Tags <a
href="#sec:functionality-tags-27" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS
for USP Record Integrity)’</p>
<h3 id="sec:test-setup-117">Test Setup <a href="#sec:test-setup-117"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Configure the controller to use TLS12 as a
<code>payload_security</code>.</li>
<li>Ensure <code>PeriodicNotifInterval</code> is ‘60’, and the
controller used for testing is subscribed to Periodic Event
Notification.</li>
</ol>
<h3 id="sec:test-procedure-109">Test Procedure <a
href="#sec:test-procedure-109" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
        }
    }
}</code></pre></li>
<li><p>Attempt to establish a new secure session with the EUT using TLS
payload encapsulation.</p></li>
<li><p>Configure the controller to send TLS alerts during the TLS
handshake process.</p></li>
<li><p>Wait for the EUT to attempt to start a session with the
controller.</p></li>
<li><p>Allow the controller to send a TLS alert to the EUT and for the
session to terminate.</p></li>
<li><p>Configure the controller to not send a TLS alert.</p></li>
<li><p>Wait for the EUT to retry establishing a E2E session.</p></li>
</ol>
<h3 id="sec:test-metrics-116">Test Metrics <a
href="#sec:test-metrics-116" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After sending the client certificate to the EUT, the EUT sends a TLS
alert, terminating the session.</li>
<li>After step 5, the EUT waits before retrying the session in
accordance with the ‘SessionRetry’ parameters found in step 1.</li>
</ol>
<h2
id="sec:agent-does-not-accept-tls-renegotiation-for-e2e-message-exchange">3.6
Agent does not accept TLS renegotiation for E2E message exchange <a
href="#sec:agent-does-not-accept-tls-renegotiation-for-e2e-message-exchange"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-117">Purpose <a href="#sec:purpose-117"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not accept TLS
renegotiation. frames during a E2E message exchange.</p>
<h3 id="sec:functionality-tags-28">Functionality Tags <a
href="#sec:functionality-tags-28" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS
for USP Record Integrity)’</p>
<h3 id="sec:test-setup-118">Test Setup <a href="#sec:test-setup-118"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure both the EUT and the controller are configured to use TLS
payload security.</li>
</ol>
<h3 id="sec:test-procedure-110">Test Procedure <a
href="#sec:test-procedure-110" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Establish a E2E session with the EUT.</p></li>
<li><p>Send a request to renegotiate TLS in place of the
payload.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-117">Test Metrics <a
href="#sec:test-metrics-117" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Between sending the TLS renegotiation request and receiving the
GetResponse, the EUT either sends no records, or sends a TLS alert of
type <code>no_renegotiation(100)</code>.</li>
</ol>
<h2 id="sec:use-of-x.509-certificates">3.7 Use of X.509 Certificates <a
href="#sec:use-of-x.509-certificates" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-118">Purpose <a href="#sec:purpose-118"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses X.509
certificates to authenticate other endpoints, and in turn provides a
X.509 certificate for the purpose of authentication.</p>
<h3 id="sec:functionality-tags-29">Functionality Tags <a
href="#sec:functionality-tags-29" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS
for USP Record Integrity)’</p>
<h3 id="sec:test-setup-119">Test Setup <a href="#sec:test-setup-119"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller are configured to use TLS payload
security.</li>
</ol>
<h3 id="sec:test-procedure-111">Test Procedure <a
href="#sec:test-procedure-111" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the controller to provide a X.509 certificate with a
<code>subjectAltName</code> that does not match the controller’s USP
endpoint ID.</p></li>
<li><p>Attempt to start a session with the EUT and send a Get message
with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-118">Test Metrics <a
href="#sec:test-metrics-118" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>During the TLS handshake the EUT provides a X.509 certificate with a
<code>subjectAltName</code> that matches the endpoint ID of the
EUT.</li>
<li>During the TLS handshake the EUT requests a X.509 certificate from
the controller.</li>
<li>The EUT rejects the controller’s certificate.</li>
</ol>
<h2 id="sec:establishing-a-session-context">3.8 Establishing a Session
Context <a href="#sec:establishing-a-session-context" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-119">Purpose <a href="#sec:purpose-119"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can use a session
context to exchange USP messages.</p>
<h3 id="sec:functionality-tag-90">Functionality Tag <a
href="#sec:functionality-tag-90" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-120">Test Setup <a href="#sec:test-setup-120"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to
establish a connection and exchange USP messages.</li>
<li>Ensure at the start of the test there is no existing session context
between the EUT and controller.</li>
</ol>
<h3 id="sec:test-procedure-112">Test Procedure <a
href="#sec:test-procedure-112" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a session context with the EUT and send a Get message with
the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-119">Test Metrics <a
href="#sec:test-metrics-119" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After step 1, the EUT responds with a USP record containing a
session context, a <code>sequence_number</code> of 1 and a
<code>session_id</code> that matched the session identifier sent to the
EUT.</li>
</ol>
<h2 id="sec:receipt-of-a-record-out-of-a-session-context">3.9 Receipt of
a Record out of a Session Context <a
href="#sec:receipt-of-a-record-out-of-a-session-context"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-120">Purpose <a href="#sec:purpose-120"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly handles the
receiving of a USP record outside of a session context.</p>
<h3 id="sec:functionality-tags-30">Functionality Tags <a
href="#sec:functionality-tags-30" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-121">Test Setup <a href="#sec:test-setup-121"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to
establish a session and exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedure-113">Test Procedure <a
href="#sec:test-procedure-113" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a session with the EUT using a session context.</p></li>
<li><p>Send a Get message to the EUT for <code>Device.DeviceInfo.</code>
using a USP Record with the following structure:</p>
<pre><code>Record {
      session_context {
        session_id: &lt;new_session_id&gt;
        sequence_id:  1
        expected_id:  1
        payload {
            #  ...
          }
        }
      }</code></pre></li>
</ol>
<h3 id="sec:test-metrics-120">Test Metrics <a
href="#sec:test-metrics-120" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends the GetResponse in a USP Record using the new
<code>session_id</code> and a <code>sequence_id</code> of 1.</li>
</ol>
<h2 id="sec:session-context-expiration">3.10 Session Context Expiration
<a href="#sec:session-context-expiration" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-121">Purpose <a href="#sec:purpose-121"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly adheres to
the <code>SessionExpiration</code> parameter.</p>
<h3 id="sec:functionality-tags-31">Functionality Tags <a
href="#sec:functionality-tags-31" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-122">Test Setup <a href="#sec:test-setup-122"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information
required to start a session and exchange USP records.</li>
<li>Ensure the controller is subscribed to Periodic! event.</li>
</ol>
<h3 id="sec:test-procedure-114">Test Procedure <a
href="#sec:test-procedure-114" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
                    param_settings {
                            param: &#39;SessionExpiration&#39;
                            value: &#39;60&#39;
                        }
                }
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.&#39;
                    param_settings {
                            param: &#39;PeriodicNotifInterval&#39;
                            value: &#39;10&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Wait for 3 Notify messages from the EUT containing a Periodic!
event.</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
                    param_settings: {
                            param: &#39;SessionExpiration&#39;
                            value: &#39;5&#39;
                        }
                }
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.&#39;
                    param_settings {
                            param: &#39;PeriodicNotifInterval&#39;
                            value: &#39;10&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Wait for 3 Notify messages from the EUT containing a Periodic!
event.</p></li>
</ol>
<h3 id="sec:test-metrics-121">Test Metrics <a
href="#sec:test-metrics-121" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>All three Notify messages received in step 2 use the same session
context.</li>
<li>None of the three Notify messages received in step 4 shared the same
session context.</li>
</ol>
<h2 id="sec:use-of-sequence-id-and-expected-id">3.11 Use of Sequence ID
and Expected ID <a href="#sec:use-of-sequence-id-and-expected-id"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-122">Purpose <a href="#sec:purpose-122"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses the
<code>sequence_id</code> and <code>expected_id</code> attributes found
in a session context.</p>
<h3 id="sec:functionality-tags-32">Functionality Tags <a
href="#sec:functionality-tags-32" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-123">Test Setup <a href="#sec:test-setup-123"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to
start a session and exchange USP messages.</li>
<li>Ensure the controller is not subscribed to any events on the
EUT.</li>
</ol>
<h3 id="sec:test-procedure-115">Test Procedure <a
href="#sec:test-procedure-115" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Start a new session by sending a Get message to the EUT with
<code>sequence_id</code> and <code>expected_id</code> set to 1 for
‘Device.DeviceInfo.ModelNumber’.</li>
<li>Send a Get message to the EUT with the <code>sequence_id</code> and
<code>expected_id</code> set to 4 for
‘Device.DeviceInfo.SoftwareVersion’.</li>
<li>Send a Get message to the EUT with the <code>sequence_id</code> and
<code>expected_id</code> set to 2 for
‘Device.DeviceInfo.HardwareVersion’.</li>
<li>Send a Get message to the EUT with the <code>sequence_id</code> and
<code>expected_id</code> set to 3 for
‘Device.DeviceInfo.HardwareVersion’.</li>
</ol>
<h3 id="sec:test-metrics-122">Test Metrics <a
href="#sec:test-metrics-122" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After step 1, the EUT returns a GetResponse with a
<code>sequence_id</code> of 1 containing the parameter
‘Device.DeviceInfo.ModelNumber’.</li>
<li>The EUT buffers the Get message sent in step 2 and does not
immediately respond.</li>
<li>After step 3, The EUT sends a GetResponse with a
<code>sequence_id</code> of 2 containing the parameter
‘Device.DeviceInfo.HardwareVersion’.</li>
<li>After step 4, the EUT sends a GetResponse with a
<code>sequence_id</code> of 3 containing the parameter
‘Device.DeviceInfo.HardwareVersion’. The EUT then sends a GetResponse
for the buffered Get message from step 2 with a <code>sequence_id</code>
of 4 containing the parameter ‘Device.DeviceInfo.SoftwareVersion’.</li>
</ol>
<h2 id="sec:preservation-of-usp-records">3.12 Preservation of USP
Records <a href="#sec:preservation-of-usp-records" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<p>The purpose of this test is to ensure the EUT preserves a sent record
in the event the receiving endpoint requests a retransmission.</p>
<h3 id="sec:functionality-tags-33">Functionality Tags <a
href="#sec:functionality-tags-33" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-124">Test Setup <a href="#sec:test-setup-124"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to
start a session an exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedures">Test Procedures <a
href="#sec:test-procedures" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a new session.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait 60 seconds.</p></li>
<li><p>Send a USP record to the EUT with a <code>retransmit_id</code>
set to the <code>expected_id</code> value in the record sent in step
1.</p></li>
</ol>
<h3 id="sec:test-metrics-123">Test Metrics <a
href="#sec:test-metrics-123" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends the same GetResponse twice, once after step 2 and once
after step 4.</li>
</ol>
<h2
id="sec:agent-rejects-records-with-different-payload-security-than-the-established-context">3.13
Agent Rejects Records with Different Payload Security than the
Established Context <a
href="#sec:agent-rejects-records-with-different-payload-security-than-the-established-context"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-123">Purpose <a href="#sec:purpose-123"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not accept USP
Records that have a different <code>payload_security</code> value than
the that of the established session context.</p>
<h3 id="sec:functionality-tags-34">Functionality Tags <a
href="#sec:functionality-tags-34" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Secure Message Exchange using TLS for
USP Record Integrity)</p>
<h3 id="sec:test-setup-125">Test Setup <a href="#sec:test-setup-125"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to
start a session and exchange USP messages.</li>
<li>Ensure the EUT and controller have the necessary information to
secure the USP record payload using TLS.</li>
</ol>
<h3 id="sec:test-procedure-116">Test Procedure <a
href="#sec:test-procedure-116" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Starts a session with the EUT using <code>payload_security</code>
TLS12.</li>
<li>After the session is established, send the following Get message for
any valid parameter using <code>payload_security</code> PLAINTEXT and a
plaintext payload.</li>
</ol>
<h3 id="sec:test-metrics-124">Test Metrics <a
href="#sec:test-metrics-124" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not send a GetResponse.</li>
<li>The EUT starts a new session after step 2.</li>
</ol>
<h2 id="sec:use-of-retransmit_id">3.14 Use of retransmit_id <a
href="#sec:use-of-retransmit_id" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-124">Purpose <a href="#sec:purpose-124"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses the
<code>retransmit_id</code> value in a USP record and adheres to the
related parameters in the data model.</p>
<h3 id="sec:functionality-tags-35">Functionality Tags <a
href="#sec:functionality-tags-35" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditionality Mandatory (supports session context)</p>
<h3 id="sec:test-setup-126">Test Setup <a href="#sec:test-setup-126"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to
start a session and exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedure-117">Test Procedure <a
href="#sec:test-procedure-117" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
                    param_settings {
                            param: &#39;MaxRetransmitTries&#39;
                            value: &#39;2&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Wait for a SetResponse</p></li>
<li><p>Send a USP record with a <code>retransmit_id</code> set to the
value of the <code>sequence_id</code> found in the SetResponse in step
2.</p></li>
<li><p>Repeat steps 2 and 3 twice more.</p></li>
</ol>
<h3 id="sec:test-metrics-125">Test Metrics <a
href="#sec:test-metrics-125" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The first three SetResponse messages are sent in the same session
context.</li>
<li>On the third retransmit request, the EUT doesn’t send a SetResponse
and instead starts a new session with the controller.</li>
</ol>
<h2 id="sec:handling-duplicate-records">3.15 Handling Duplicate Records
<a href="#sec:handling-duplicate-records" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-125">Purpose <a href="#sec:purpose-125"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can correctly handle
receiving duplicate records.</p>
<h3 id="sec:functionality-tags-36">Functionality Tags <a
href="#sec:functionality-tags-36" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-127">Test Setup <a href="#sec:test-setup-127"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to
start session and exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedure-118">Test Procedure <a
href="#sec:test-procedure-118" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Start a session with the EUT.</li>
<li>Send a Get message to the EUT requesting a parameter that is known
to exist.</li>
<li>Retransmit the same USP record sent in step 2 to the EUT, using the
same non-payload USP record field values.</li>
<li>Repeat step 3 twice more.</li>
</ol>
<h3 id="sec:test-metrics-126">Test Metrics <a
href="#sec:test-metrics-126" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT send only one GetResponse.</li>
</ol>
<h1 id="sec:general-mtp-test-cases">4 General MTP Test Cases <a
href="#sec:general-mtp-test-cases" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:use-of-x.509-certificates-at-the-mtp-layer">4.1 Use of X.509
certificates at the MTP layer <a
href="#sec:use-of-x.509-certificates-at-the-mtp-layer"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-126">Purpose <a href="#sec:purpose-126"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can use X.509
certificates to secure communication at the MTP layer.</p>
<h3 id="sec:functionality-tags-37">Functionality Tags <a
href="#sec:functionality-tags-37" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-128">Test Setup <a href="#sec:test-setup-128"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that the use of MTP layer encryption is enabled on the
EUT.</li>
</ol>
<h3 id="sec:test-procedure-119">Test Procedure <a
href="#sec:test-procedure-119" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetSupportedProtocol message to the EUT with the following
structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_SUPPORTED_PROTO
}
body {
    request {
        get_supported_protocol {
            controller_supported_protocol_versions: &#39;&lt;comma separated list of test controller versions&gt;&#39;
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-127">Test Metrics <a
href="#sec:test-metrics-127" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT processes the certificate and establishes a secure TLS
connection at the MTP layer.</li>
</ol>
<h1 id="sec:coap-test-cases-deprecated">5 CoAP Test Cases (DEPRECATED)
<a href="#sec:coap-test-cases-deprecated" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:mapping-a-usp-record-to-a-coap-message-deprecated">5.1
Mapping a USP Record to a CoAP message (DEPRECATED) <a
href="#sec:mapping-a-usp-record-to-a-coap-message-deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-127">Purpose <a href="#sec:purpose-127"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can properly use CoAP
to transport USP Records.</p>
<h3 id="sec:functionality-tags-38">Functionality Tags <a
href="#sec:functionality-tags-38" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-129">Test Setup <a href="#sec:test-setup-129"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-120">Test Procedure <a
href="#sec:test-procedure-120" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-128">Test Metrics <a
href="#sec:test-metrics-128" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The GetResponse is encapsulated in a CoAP message.</li>
<li>The CoAP message used transport the GetResponse uses
‘application/octet-stream’ for <code>Content-Format</code>.</li>
</ol>
<h2 id="sec:usp-records-that-exceed-coap-message-size-deprecated">5.2
USP Records that exceed CoAP message size (DEPRECATED) <a
href="#sec:usp-records-that-exceed-coap-message-size-deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-128">Purpose <a href="#sec:purpose-128"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly segments large
USP records and transports them using block encapsulation.</p>
<h3 id="sec:functionality-tags-39">Functionality Tags <a
href="#sec:functionality-tags-39" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-130">Test Setup <a href="#sec:test-setup-130"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-121">Test Procedure <a
href="#sec:test-procedure-121" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-129">Test Metrics <a
href="#sec:test-metrics-129" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends the GetResponse message using multiple block
encapsulated CoAP messages.</li>
</ol>
<h2 id="sec:successful-coap-exchange-deprecated">5.3 Successful CoAP
exchange (DEPRECATED) <a href="#sec:successful-coap-exchange-deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-129">Purpose <a href="#sec:purpose-129"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly sends a 2.04
Changed response to CoAP messages.</p>
<h3 id="sec:functionality-tags-40">Functionality Tags <a
href="#sec:functionality-tags-40" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-131">Test Setup <a href="#sec:test-setup-131"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-122">Test Procedure <a
href="#sec:test-procedure-122" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-130">Test Metrics <a
href="#sec:test-metrics-130" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After the transmission of the Get message the EUT sends a 2.04
Changed message.</li>
</ol>
<h2 id="sec:failed-coap-exchange---timeout-deprecated">5.4 Failed CoAP
exchange - timeout (DEPRECATED) <a
href="#sec:failed-coap-exchange---timeout-deprecated" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-130">Purpose <a href="#sec:purpose-130"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT behaves correctly when
a timeout occurs at the MTP layer when using CoAP.</p>
<h3 id="sec:functionality-tags-41">Functionality Tags <a
href="#sec:functionality-tags-41" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-132">Test Setup <a href="#sec:test-setup-132"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-123">Test Procedure <a
href="#sec:test-procedure-123" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the to not send 2.04 Changed responses to CoAP
messages</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse message from the EUT.</p></li>
<li><p>Prevent the Controller from sending a 2.04 Changed CoAP
response.</p></li>
<li><p>Wait for EUT to retry sending the GetResponse.</p></li>
<li><p>Allow the Controller to send a 2.04 Changed CoAP
response.</p></li>
</ol>
<h3 id="sec:test-metrics-131">Test Metrics <a
href="#sec:test-metrics-131" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT attempts to retransmit the GetResponse message after not
receiving a 2.04 Changed from the Controller.</li>
</ol>
<h2 id="sec:failed-coap-exchange---invalid-method-deprecated">5.5 Failed
CoAP Exchange - Invalid Method (DEPRECATED) <a
href="#sec:failed-coap-exchange---invalid-method-deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-131">Purpose <a href="#sec:purpose-131"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly responds when
it receives a CoAP message with an invalid method.</p>
<h3 id="sec:functionality-tags-42">Functionality Tags <a
href="#sec:functionality-tags-42" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-133">Test Setup <a href="#sec:test-setup-133"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
<li>The EUT the Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-124">Test Procedure <a
href="#sec:test-procedure-124" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a USP record to the EUT using a CoAP message with method code
<code>0x06</code>.</li>
<li>Wait up to 60 seconds for the EUT to send a CoAP response.</li>
</ol>
<h3 id="sec:test-metrics-132">Test Metrics <a
href="#sec:test-metrics-132" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a reply to the CoAP message with an invalid method
code.</li>
<li>The EUT CoAP response uses code <code>4.05</code> to indicate an
invalid CoAP method.</li>
</ol>
<h2
id="sec:failed-coap-exchange---invalid-content-format-deprecated">5.6
Failed CoAP Exchange - Invalid Content-Format (DEPRECATED) <a
href="#sec:failed-coap-exchange---invalid-content-format-deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-132">Purpose <a href="#sec:purpose-132"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly responds to
CoAP messages that feature invalid Content-Format options.</p>
<h3 id="sec:functionality-tags-43">Functionality Tags <a
href="#sec:functionality-tags-43" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-134">Test Setup <a href="#sec:test-setup-134"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-125">Test Procedure <a
href="#sec:test-procedure-125" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a USP record to the EUT using a CoAP message with
Content-Format option <code>0x113a</code>.</li>
<li>Wait up to 60 second for the EUT to respond.</li>
</ol>
<h3 id="sec:test-metrics-133">Test Metrics <a
href="#sec:test-metrics-133" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a reply to the CoAP message with an invalid
Content-Format.</li>
<li>The EUT CoAP response uses code <code>4.15</code> to indicate an
invalid Content-Format.</li>
</ol>
<h2 id="sec:failed-coap-exchange---invalid-usp-record-deprecated">5.7
Failed CoAP Exchange - Invalid USP Record (DEPRECATED) <a
href="#sec:failed-coap-exchange---invalid-usp-record-deprecated"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-133">Purpose <a href="#sec:purpose-133"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this is to ensure the EUT properly responds to a CoAP
message containing a malformed USP record.</p>
<h3 id="sec:functionality-tags-44">Functionality Tags <a
href="#sec:functionality-tags-44" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-135">Test Setup <a href="#sec:test-setup-135"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-126">Test Procedure <a
href="#sec:test-procedure-126" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP record to the EUT in a CoAP message.</li>
<li>Wait up to 60 seconds for the EUT to send a CoAP reply.</li>
</ol>
<h3 id="sec:test-metrics-134">Test Metrics <a
href="#sec:test-metrics-134" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a reply to the CoAP message with the malformed USP
record.</li>
<li>The EUT CoAP response uses code <code>4.00</code> to indicate the
USP record is invalid or not understandable.</li>
</ol>
<h2 id="sec:use-of-dtls-deprecated">5.8 Use of DTLS (DEPRECATED) <a
href="#sec:use-of-dtls-deprecated" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-134">Purpose <a href="#sec:purpose-134"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish secure
communication with another CoAP endpoint at the CoAP layer.</p>
<h3 id="sec:functionality-tags-45">Functionality Tags <a
href="#sec:functionality-tags-45" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-136">Test Setup <a href="#sec:test-setup-136"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP using
DTLS.</li>
<li>The EUT and Controller have the necessary information about one
another to establish an encrypted channel of communication.</li>
</ol>
<h3 id="sec:test-procedure-127">Test Procedure <a
href="#sec:test-procedure-127" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-135">Test Metrics <a
href="#sec:test-metrics-135" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The Controller is able to establish a DTLS session with the
EUT.</li>
<li>The EUT established a DTLS session and sends a GetResponse.</li>
</ol>
<h1 id="sec:stomp-test-cases">6 STOMP Test Cases <a
href="#sec:stomp-test-cases" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:support-of-required-profiles">6.1 Support of Required
Profiles <a href="#sec:support-of-required-profiles" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-135">Purpose <a href="#sec:purpose-135"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT supports the required
STOMP profiles.</p>
<h3 id="sec:functionality-tags-46">Functionality Tags <a
href="#sec:functionality-tags-46" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-137">Test Setup <a href="#sec:test-setup-137"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
</ol>
<h3 id="sec:test-procedure-128">Test Procedure <a
href="#sec:test-procedure-128" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.STOMP.&#39;
            obj_paths: &#39;Device.LocalAgent.&#39;
            return_params: true
            first_level_only: false
        }
    }
}</code></pre></li>
<li><p>Wait for the GetSupportedDMResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-136">Test Metrics <a
href="#sec:test-metrics-136" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResponse.</li>
<li>The GetSupportedDMResponse from the EUT contains the following
parameters: * Device.LocalAgent.Controller.{i}.MTP.{i}.STOMP.Reference *
Device.LocalAgent.Controller.{i}.MTP.{i}.STOMP.Destination *
Device.STOMP.ConnectionNumberOfEntries *
Device.STOMP.Connection.{i}.Alias * Device.STOMP.Connection.{i}.Enable *
Device.STOMP.Connection.{i}.Status * Device.STOMP.Connection.{i}.Host *
Device.STOMP.Connection.{i}.Port *
Device.STOMP.Connection.{i}.VirtualHost *
Device.STOMP.Connection.{i}.ServerRetryInitialInterval *
Device.STOMP.Connection.{i}.ServerRetryIntervalMultiplier *
Device.STOMP.Connection.{i}.ServerRetryMaxInterval</li>
</ol>
<h2 id="sec:stomp-session-establishment">6.2 STOMP session establishment
<a href="#sec:stomp-session-establishment" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-136">Purpose <a href="#sec:purpose-136"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can properly start a
STOMP session.</p>
<h3 id="sec:functionality-tags-47">Functionality Tags <a
href="#sec:functionality-tags-47" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-138">Test Setup <a href="#sec:test-setup-138"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use a STOMP server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-129">Test Procedure <a
href="#sec:test-procedure-129" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to reconnect to the STOMP server and subscribe to a
destination.</li>
</ol>
<h3 id="sec:test-metrics-137">Test Metrics <a
href="#sec:test-metrics-137" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a STOMP frame to the STOMP server to initiate the
STOMP session.</li>
</ol>
<h2 id="sec:stomp-connection-retry">6.3 STOMP Connection Retry <a
href="#sec:stomp-connection-retry" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-137">Purpose <a href="#sec:purpose-137"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly enters a retry
state when it fails to connect to the STOMP server.</p>
<h3 id="sec:functionality-tags-48">Functionality Tags <a
href="#sec:functionality-tags-48" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-139">Test Setup <a href="#sec:test-setup-139"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use a STOMP server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-130">Test Procedure <a
href="#sec:test-procedure-130" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.STOMP.Connection.&#39;
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
<li><p>Disable the STOMP server.</p></li>
<li><p>Allow the EUT to attempt to start a STOMP session with the STOMP
server.</p></li>
<li><p>Reenable the STOMP server after the EUT fails to connect to the
STOMP server twice.</p></li>
</ol>
<h3 id="sec:test-metrics-138">Test Metrics <a
href="#sec:test-metrics-138" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT retries connecting to the STOMP server within the
<code>ServerRetryInitialInterval</code> of the connection instance.</li>
<li>The EUT retries a second time in accordance with
<code>ServerRetryInitialInterval</code> and
<code>ServerRetryIntervalMultiplier</code>.</li>
</ol>
<h2 id="sec:successful-usp-message-over-stomp-with-required-headers">6.4
Successful USP message over STOMP with required headers <a
href="#sec:successful-usp-message-over-stomp-with-required-headers"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-138">Purpose <a href="#sec:purpose-138"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can communicate over
STOMP using the correct headers.</p>
<h3 id="sec:functionality-tags-49">Functionality Tags <a
href="#sec:functionality-tags-49" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-140">Test Setup <a href="#sec:test-setup-140"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use a STOMP server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-131">Test Procedure <a
href="#sec:test-procedure-131" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-139">Test Metrics <a
href="#sec:test-metrics-139" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>In the STOMP frame transporting the GetResponse the
<code>content-length</code> header is present and contains the length of
the included body of the message.</li>
<li>In the STOMP frame transporting the GetResponse the
<code>content-type</code> header is present and contains
<code>application/vnd.bbf.usp.msg</code>.</li>
<li>In the STOMP frame transporting the GetResponse the
<code>reply-to-dest</code> header is present and contains the STOMP
destination of the EUT.</li>
</ol>
<h2 id="sec:stomp-destination---provided-in-subscribe-dest">6.5 STOMP
destination - provided in subscribe-dest <a
href="#sec:stomp-destination---provided-in-subscribe-dest"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-139">Purpose <a href="#sec:purpose-139"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correct subscribe to a
destination found in the <code>subscribe-dest</code> header in a
CONNECTED frame.</p>
<h3 id="sec:functionality-tags-50">Functionality Tags <a
href="#sec:functionality-tags-50" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-141">Test Setup <a href="#sec:test-setup-141"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that is part of
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-132">Test Procedure <a
href="#sec:test-procedure-132" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the STOMP server to send an unused destination via the
<code>subscribe-dest</code> header in the CONNECTED frames.</p></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Allow the EUT to reconnect to the STOMP server.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to respond to the Get message.</p></li>
</ol>
<h3 id="sec:test-metrics-140">Test Metrics <a
href="#sec:test-metrics-140" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT subscribes to the destination configured in step 1.</li>
<li>The STOMP frame containing the GetResponse has a
<code>reply-to-dest</code> header which matches the destination
configured in step 1.</li>
</ol>
<h2 id="sec:stomp-destination---configured-in-usp-data-model">6.6 STOMP
destination - configured in USP data model <a
href="#sec:stomp-destination---configured-in-usp-data-model"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-140">Purpose <a href="#sec:purpose-140"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can use the
<code>Device.LocalAgent.MTP.{i}.STOMP.Destination</code> parameter to
select a STOMP destination.</p>
<h3 id="sec:functionality-tags-51">Functionality Tags <a
href="#sec:functionality-tags-51" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-steps-7">Test Steps <a href="#sec:test-steps-7"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that is part of
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-133">Test Procedure <a
href="#sec:test-procedure-133" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                obj_path: &#39;Device.LocalAgent.MTP.&lt;active MTP instance&gt;.STOMP.&#39;
                param_settings {
                        param: &#39;Destination&#39;
                        value: &#39;&lt;new unused destination&gt;&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the STOMP server.</p></li>
<li><p>Allow the STOMP server to send a CONNECTED frame that does NOT
include the subscribe-dest field.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-141">Test Metrics <a
href="#sec:test-metrics-141" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT subscribes to the destination configured in step 1.</li>
<li>The STOMP frame containing the GetResponse has a
<code>reply-to-dest</code> header which contains the STOMP destination
configured in step 1.</li>
</ol>
<h2 id="sec:stomp-destination---terminates-unconfigured-session">6.7
STOMP Destination - terminates unconfigured session <a
href="#sec:stomp-destination---terminates-unconfigured-session"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-141">Purpose <a href="#sec:purpose-141"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT terminates a STOMP
session when no destination id configured.</p>
<h3 id="sec:functionality-tags-52">Functionality Tags <a
href="#sec:functionality-tags-52" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-142">Test Setup <a href="#sec:test-setup-142"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is configured to use a STOMP server which exists in the test
environment.</li>
<li>Configure the STOMP server to not provide a
<code>subscribe-dest</code> header in the CONNECTED frame.</li>
</ol>
<h3 id="sec:test-procedure-134">Test Procedure <a
href="#sec:test-procedure-134" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.MTP.&lt;active MTP instance&gt;.STOMP.&#39;
                    param_settings {
                            param: &#39;Destination&#39;
                            value: &#39;&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to attempt to reconnect to the STOMP
server.</p></li>
</ol>
<h3 id="sec:test-metrics-142">Test Metrics <a
href="#sec:test-metrics-142" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT terminates the STOMP session after the STOMP server sends a
CONNECTION to the EUT.</li>
</ol>
<h2 id="sec:use-of-stomp-heartbeat-mechanism">6.8 Use of STOMP heartbeat
mechanism <a href="#sec:use-of-stomp-heartbeat-mechanism"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-142">Purpose <a href="#sec:purpose-142"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can correctly
implements the STOMP heartbeat mechanism and the relevant parameters in
the data model.</p>
<h3 id="sec:functionality-tags-53">Functionality Tags <a
href="#sec:functionality-tags-53" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports STOMPHeartbeat:1 profile)</p>
<h3 id="sec:test-setup-143">Test Setup <a href="#sec:test-setup-143"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is configured to use a STOMP server which exists in the test
environment.</li>
<li>Ensure the STOMP server supports heartbeats.</li>
</ol>
<h3 id="sec:test-procedure-135">Test Procedure <a
href="#sec:test-procedure-135" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.STOMP.Connection.&lt;STOMP server in use&gt;.&#39;
                    param_settings {
                            param: &#39;EnableHeartbeats&#39;
                            value: &#39;true&#39;
                        }
                    param_settings {
                            param: &#39;IncomingHeartbeat&#39;
                            value: &#39;10000&#39;
                        }
                    param_settings {
                            param: &#39;OutgoingHeartbeat&#39;
                            value: &#39;15000&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the STOMP server.</p></li>
<li><p>Wait for 60 seconds</p></li>
</ol>
<h3 id="sec:test-metrics-143">Test Metrics <a
href="#sec:test-metrics-143" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>In the STOMP frame sent to the STOMP server during step 2, the
<code>heart-beat</code> header sent by the EUT contains ‘15000,
10000’.</li>
<li>After the EUT is connected to the STOMP server, the EUT sends
heartbeat messages every 15 seconds.</li>
</ol>
<h2 id="sec:error-handling---unprocessed-record">6.9 Error Handling -
Unprocessed Record <a href="#sec:error-handling---unprocessed-record"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-143">Purpose <a href="#sec:purpose-143"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will correctly send an
ERROR STOMP frame when a malformed USP record is received.</p>
<h3 id="sec:functionality-tags-54">Functionality Tags <a
href="#sec:functionality-tags-54" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-144">Test Setup <a href="#sec:test-setup-144"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-136">Test Procedure <a
href="#sec:test-procedure-136" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP record to the EUT.</li>
<li>Wait 60 seconds for the EUT to send a response.</li>
</ol>
<h3 id="sec:test-metrics-144">Test Metrics <a
href="#sec:test-metrics-144" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT either ignores the malformed record or sends a USP Record
Error.</li>
</ol>
<h2 id="sec:agents-stomp-destination-is-changed">6.10 Agent’s STOMP
destination is changed <a
href="#sec:agents-stomp-destination-is-changed" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-144">Purpose <a href="#sec:purpose-144"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that when the EUT destination
is altered it properly unsubscribes and subscribes to the new
destination.</p>
<h3 id="sec:functionality-tags-55">Functionality Tags <a
href="#sec:functionality-tags-55" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-145">Test Setup <a href="#sec:test-setup-145"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that exists in
the test environment.</li>
<li>Ensure the STOMP server is configured to not provide a destination
via the <code>subscribe-dest</code> header.</li>
</ol>
<h3 id="sec:test-procedure-137">Test Procedure <a
href="#sec:test-procedure-137" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.MTP.&lt;active MTP instance&gt;.STOMP.&#39;
                    param_settings {
                            param: &#39;Destination&#39;
                            value: &#39;&lt;new destination&gt;&#39;
                        }
                }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-145">Test Metrics <a
href="#sec:test-metrics-145" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After the STOMP destination was changed the EUT sent an UNSUBSCRIBE
message message to the STOMP server.</li>
<li>After the EUT sent an UNSUBSCRIBE to the STOMP server it sent a
SUBSCRIBE message with the new destination to the STOMP server.</li>
</ol>
<h2 id="sec:stomp---use-of-tls">6.11 STOMP - Use of TLS <a
href="#sec:stomp---use-of-tls" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-145">Purpose <a href="#sec:purpose-145"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish secure
STOMP communication via TLS.</p>
<h3 id="sec:functionality-tags-56">Functionality Tags <a
href="#sec:functionality-tags-56" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-146">Test Setup <a href="#sec:test-setup-146"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to the use a STOMP server that exists
in the test environment.</li>
<li>Ensure the EUT and STOMP server are configured with the appropriate
certificates to communicate over TLS.</li>
</ol>
<h3 id="sec:test-procedure-138">Test Procedure <a
href="#sec:test-procedure-138" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT</p></li>
<li><p>Wait for the EUT to reconnect to the STOMP server</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-146">Test Metrics <a
href="#sec:test-metrics-146" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>All communication between the EUT and STOMP server after step 1 are
encrypted using TLS</li>
</ol>
<h2 id="sec:stomp---use-of-connect-record">6.12 STOMP - Use of Connect
Record <a href="#sec:stomp---use-of-connect-record" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-146">Purpose <a href="#sec:purpose-146"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly sends a
Connect record after it has established a communications channel to the
controller.</p>
<h3 id="sec:functionality-tags-57">Functionality Tags <a
href="#sec:functionality-tags-57" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-147">Test Setup <a href="#sec:test-setup-147"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-139">Test Procedure <a
href="#sec:test-procedure-139" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to reconnect to the STOMP server.</li>
</ol>
<h3 id="sec:test-metrics-147">Test Metrics <a
href="#sec:test-metrics-147" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After reconnecting to the STOMP server the EUT transmits a
STOMPConnectRecord to the test controller within 30 seconds.</li>
<li>The version in the received STOMPConnectRecord matches the expected
version.</li>
<li>The subscribed_destination string in the received STOMPConnectRecord
matches the destination the EUT is subscribed to.</li>
</ol>
<h1 id="sec:websocket-test-cases">7 WebSocket Test Cases <a
href="#sec:websocket-test-cases" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:session-establishment">7.1 Session Establishment <a
href="#sec:session-establishment" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-147">Purpose <a href="#sec:purpose-147"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish a session
using WebSocket as the MTP.</p>
<h3 id="sec:functionality-tags-58">Functionality Tags <a
href="#sec:functionality-tags-58" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-148">Test Setup <a href="#sec:test-setup-148"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket and to communicate to
the controller that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-140">Test Procedure <a
href="#sec:test-procedure-140" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the controller.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse from the EUT</p></li>
</ol>
<h3 id="sec:test-metrics-148">Test Metrics <a
href="#sec:test-metrics-148" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is able to establish a WebSocket connection to the
controller</li>
<li>The EUT sends a GetResponse to the Get message sent in step 3</li>
</ol>
<h2 id="sec:use-of-only-one-session">7.2 Use of only one session <a
href="#sec:use-of-only-one-session" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-148">Purpose <a href="#sec:purpose-148"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT maintains only one
WebSocket connection to a controller at a time.</p>
<h3 id="sec:functionality-tags-59">Functionality Tags <a
href="#sec:functionality-tags-59" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP with requirement
R-WS.6)</p>
<h3 id="sec:test-setup-149">Test Setup <a href="#sec:test-setup-149"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket and to communicate to
the controller that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-141">Test Procedure <a
href="#sec:test-procedure-141" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT using the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Attempt to open a second WebSocket connection to the
EUT.</p></li>
<li><p>Send the Get message outlined in step 1 over the new
connection.</p></li>
</ol>
<h3 id="sec:test-metrics-149">Test Metrics <a
href="#sec:test-metrics-149" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Either the first WebSocket connection closes when the second is
opened, or the second connection is rejected.</li>
</ol>
<h2 id="sec:agent-session-acceptance-from-controller">7.3 Agent session
acceptance from Controller <a
href="#sec:agent-session-acceptance-from-controller" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-149">Purpose <a href="#sec:purpose-149"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>This test has been DEPRECATED as of version 1.0.1 of this test
plan.</p>
<h3 id="sec:functionality-tags-60">Functionality Tags <a
href="#sec:functionality-tags-60" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>N/A</p>
<h3 id="sec:test-setup-150">Test Setup <a href="#sec:test-setup-150"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>N/A</p>
<h3 id="sec:test-procedure-142">Test Procedure <a
href="#sec:test-procedure-142" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>N/A</p>
<h3 id="sec:test-metrics-150">Test Metrics <a
href="#sec:test-metrics-150" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>N/A</p>
<h2 id="sec:closing-a-websocket-connection">7.4 Closing a WebSocket
Connection <a href="#sec:closing-a-websocket-connection"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-150">Purpose <a href="#sec:purpose-150"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly implements
the procedure to close a WebSocket connection.</p>
<h3 id="sec:functionality-tags-61">Functionality Tags <a
href="#sec:functionality-tags-61" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-151">Test Setup <a href="#sec:test-setup-151"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Ensure there is an active WebSocket connection between the EUT and
the controller that was initiated by the EUT.</li>
</ol>
<h3 id="sec:test-procedure-143">Test Procedure <a
href="#sec:test-procedure-143" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a <code>Close</code> WebSocket control frame to the EUT.</li>
<li>Wait for the EUT to close the underlying TCP session.</li>
</ol>
<h3 id="sec:test-metrics-151">Test Metrics <a
href="#sec:test-metrics-151" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a WebSocket Close frame.</li>
</ol>
<h2 id="sec:rejection-of-session-establishment">7.5 Rejection of Session
Establishment <a href="#sec:rejection-of-session-establishment"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-151">Purpose <a href="#sec:purpose-151"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will correctly reject
WebSocket sessions.</p>
<h3 id="sec:functionality-tags-62">Functionality Tags <a
href="#sec:functionality-tags-62" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-152">Test Setup <a href="#sec:test-setup-152"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Configure the controller to reject WebSocket connections from the
EUT.</li>
</ol>
<h3 id="sec:test-procedure-144">Test Procedure <a
href="#sec:test-procedure-144" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Configure the controller to not include the
<code>Sec-WebSocket-Protocol</code> when opening new WebSocket
connections.</li>
<li>Reboot the EUT</li>
<li>Attempt to start a WebSocket connection to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-152">Test Metrics <a
href="#sec:test-metrics-152" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT rejects the WebSocket connection with the missing
<code>Sec-WebSocket-Protocol</code> header.</li>
</ol>
<h2 id="sec:error-handling---unprocessed-records">7.6 Error Handling -
Unprocessed Records <a href="#sec:error-handling---unprocessed-records"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-152">Purpose <a href="#sec:purpose-152"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly closes the
WebSocket connection when a malformed USP Record is received.</p>
<h3 id="sec:functionality-tags-63">Functionality Tags <a
href="#sec:functionality-tags-63" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-153">Test Setup <a href="#sec:test-setup-153"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket</li>
<li>Ensure there is an active WebSocket connection between the EUT and
controller.</li>
</ol>
<h3 id="sec:test-procedure-145">Test Procedure <a
href="#sec:test-procedure-145" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP record to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-153">Test Metrics <a
href="#sec:test-metrics-153" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After step 1 the EUT closes the WebSocket connection with a
WebSocket <code>Close</code> control frame containing status code
1003.</li>
</ol>
<h2 id="sec:use-of-ping-and-pong-frames">7.7 Use of Ping and Pong frames
<a href="#sec:use-of-ping-and-pong-frames" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-153">Purpose <a href="#sec:purpose-153"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses
<code>Ping</code> and <code>Pong</code> control frames to keep the
WebSocket session alive.</p>
<h3 id="sec:functionality-tags-64">Functionality Tags <a
href="#sec:functionality-tags-64" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-154">Test Setup <a href="#sec:test-setup-154"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket</li>
<li>Ensure there is an active WebSocket session between the EUT and the
Controller.</li>
</ol>
<h3 id="sec:test-procedure-146">Test Procedure <a
href="#sec:test-procedure-146" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send a <code>Ping</code> control frame to the EUT.</li>
<li>Wait up to 60 seconds for a <code>Pong</code> control frame from the
EUT.</li>
<li>Send a <code>Pong</code> control frame to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-154">Test Metrics <a
href="#sec:test-metrics-154" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a <code>Pong</code> control frame in response to the
<code>Ping</code> control frame.</li>
<li>The EUT doesn’t terminate the WebSocket connection after receiving
an unsolicited <code>Pong</code> control frame.</li>
</ol>
<h2 id="sec:websocket-session-retry">7.8 WebSocket Session Retry <a
href="#sec:websocket-session-retry" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-154">Purpose <a href="#sec:purpose-154"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will correctly attempt
to reestablish a WebSocket session if a session is unexpectedly
closed.</p>
<h3 id="sec:functionality-tags-65">Functionality Tags <a
href="#sec:functionality-tags-65" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-155">Test Setup <a href="#sec:test-setup-155"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Ensure there is an active WebSocket connection between the EUT and
controller.</li>
</ol>
<h3 id="sec:test-procedure-147">Test Procedure <a
href="#sec:test-procedure-147" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;test controller instance&gt;.MTP.&lt;active MTP instance&gt;.&#39;
        }
    }
}</code></pre></li>
<li><p>Configure the controller to reject new WebSocket
connections.</p></li>
<li><p>Terminate the underlying TCP connection on the existing WebSocket
connection.</p></li>
<li><p>Wait for the EUT to attempt to establish a WebSocket
connection.</p></li>
<li><p>Configure the controller to accept new WebSocket
connections.</p></li>
<li><p>Wait for the EUT to attempt to establish a WebSocket
connection.</p></li>
</ol>
<h3 id="sec:test-metrics-155">Test Metrics <a
href="#sec:test-metrics-155" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT attempts to start a new WebSocket connection in conformance
with the <code>SessionRetryMinimumWaitInterval</code> parameter.</li>
<li>The EUT makes a second attempt to start a new WebSocket connection
in conformance with the <code>SessionRetryMinimumWaitInterval</code> and
<code>SessionRetryIntervalMultiplier</code> parameters.</li>
</ol>
<h2 id="sec:use-of-tls">7.9 Use of TLS <a href="#sec:use-of-tls"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-155">Purpose <a href="#sec:purpose-155"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish and use a
secure WebSocket connection.</p>
<h3 id="sec:functionality-tags-66">Functionality Tags <a
href="#sec:functionality-tags-66" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-156">Test Setup <a href="#sec:test-setup-156"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Ensure the EUT and controller both have the required certificates to
secure a websocket connection.</li>
</ol>
<h3 id="sec:test-procedure-148">Test Procedure <a
href="#sec:test-procedure-148" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to connect to the controller.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-156">Test Metrics <a
href="#sec:test-metrics-156" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT starts a WebSocket connection with the controller using
TLS.</li>
<li>The EUT sends a GetResponse in step 4.</li>
</ol>
<h2 id="sec:websocket---use-of-connect-record">7.10 WebSocket - Use of
Connect Record <a href="#sec:websocket---use-of-connect-record"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-156">Purpose <a href="#sec:purpose-156"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly sends a
Connect Record after it has established a WebSocket connection to the
Controller.</p>
<h3 id="sec:functionality-tags-67">Functionality Tags <a
href="#sec:functionality-tags-67" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-157">Test Setup <a href="#sec:test-setup-157"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to connect to the test controller using
WebSocket.</li>
</ol>
<h3 id="sec:test-procedure-149">Test Procedure <a
href="#sec:test-procedure-149" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to reconnect to the test controller.</li>
</ol>
<h3 id="sec:test-metrics-157">Test Metrics <a
href="#sec:test-metrics-157" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After reconnecting to the test controller the EUT transmits a
WebSocketConnectRecord to the test controller within 30 seconds.</li>
</ol>
<h1 id="sec:discovery-test-cases">8 Discovery Test Cases <a
href="#sec:discovery-test-cases" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:dhcp-discovery---agent-request-requirements">8.1 DHCP
Discovery - Agent Request Requirements <a
href="#sec:dhcp-discovery---agent-request-requirements"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-157">Purpose <a href="#sec:purpose-157"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly requests
controller information via DHCP. <em>Note: this test can be run over
DHCPv4 or DHCPv6, depending on the deployment model of the EUT.</em></p>
<h3 id="sec:functionality-tags-68">Functionality Tags <a
href="#sec:functionality-tags-68" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via DHCP Options)</p>
<h3 id="sec:test-setup-158">Test Setup <a href="#sec:test-setup-158"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to request controller DHCP
information.</li>
<li>Ensure the EUT is configured to acquire an address via DHCP.</li>
</ol>
<h3 id="sec:test-procedure-150">Test Procedure <a
href="#sec:test-procedure-150" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to request an address via DHCP.</li>
</ol>
<h3 id="sec:test-metrics-158">Test Metrics <a
href="#sec:test-metrics-158" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT includes a Vendor Class option with Enterprise Number 3561
and vendor-class-data “usp” in the DHCP request.</li>
</ol>
<h2 id="sec:dhcp-discovery---agent-handling-of-received-options">8.2
DHCP Discovery - Agent handling of received options <a
href="#sec:dhcp-discovery---agent-handling-of-received-options"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-158">Purpose <a href="#sec:purpose-158"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can properly handle the
USP options provided by a DHCP server.</p>
<h3 id="sec:functionality-tags-69">Functionality Tags <a
href="#sec:functionality-tags-69" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via DHCP Options)</p>
<h3 id="sec:test-setup-159">Test Setup <a href="#sec:test-setup-159"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to request controller DHCP
information</li>
<li>Ensure the EUT is configured to acquire an address via DHCP.</li>
<li>Ensure the EUT ProvisioningCode parameter is set to a value other
than that which will be set during the test procedure.</li>
</ol>
<h3 id="sec:test-procedure-151">Test Procedure <a
href="#sec:test-procedure-151" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the DHCP server to provide a null terminated
provisioning code.</p></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to request an address via DHCP.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;test controller instance&gt;.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-159">Test Metrics <a
href="#sec:test-metrics-159" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The ProvisioningCode parameter found in the GetResponse matches the
provisioning code configured on the DHCP server.</li>
</ol>
<h2 id="sec:dhcp-discovery---fqdn-leads-to-dns-query">8.3 DHCP Discovery
- FQDN Leads to DNS Query <a
href="#sec:dhcp-discovery---fqdn-leads-to-dns-query" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-159">Purpose <a href="#sec:purpose-159"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses DNS to
retrieve additional controller information upon receiving a FQDN of a
controller.</p>
<h3 id="sec:functionality-tags-70">Functionality Tags <a
href="#sec:functionality-tags-70" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via DHCP Options)</p>
<h3 id="sec:test-setup-160">Test Setup <a href="#sec:test-setup-160"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to request controller information via
DHCP.</li>
<li>Ensure the EUT is configured to acquire an address via DHCP.</li>
</ol>
<h3 id="sec:test-procedure-152">Test Procedure <a
href="#sec:test-procedure-152" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Configure the DHCP server to provide a controller URL with a
FQDN.</li>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to request an address.</li>
<li>Wait for the EUT to query the DNS with the FQDN.</li>
<li>Wait for the EUT to connect to the controller.</li>
</ol>
<h3 id="sec:test-metrics-160">Test Metrics <a
href="#sec:test-metrics-160" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives a FQDN in the DHCP Offer, the EUT uses DNS to
retrieve additional information about the controller.</li>
</ol>
<h2 id="sec:mdns">8.4 mDNS <a href="#sec:mdns" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-160">Purpose <a href="#sec:purpose-160"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly implements
mDNS.</p>
<h3 id="sec:functionality-tags-71">Functionality Tags <a
href="#sec:functionality-tags-71" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS, supports the
Reboot:1 profile)</p>
<h3 id="sec:test-setup-161">Test Setup <a href="#sec:test-setup-161"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT has mDNS enabled.</li>
<li>Ensure the controller exists on the same network as the EUT.</li>
<li>Ensure that the EUT has the Controller’s URL, which contains
“.local.” is preconfigured on the EUT.</li>
<li>Ensure that a Subscription exists for the Boot! event on the EUT
with the test Controller as the Recipient.</li>
</ol>
<h3 id="sec:test-procedure-153">Test Procedure <a
href="#sec:test-procedure-153" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to send a mDNS request for the FQDN.</li>
<li>Allow the controller to respond to the mDNS request.</li>
</ol>
<h3 id="sec:test-metrics-161">Test Metrics <a
href="#sec:test-metrics-161" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives a FQDN via DHCP containing “.local.” the EUT
uses mDNS to resolve it.</li>
</ol>
<h2 id="sec:mdns-and-message-transfer-protocols">8.5 mDNS and Message
Transfer Protocols <a href="#sec:mdns-and-message-transfer-protocols"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-161">Purpose <a href="#sec:purpose-161"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly advertises
the MTP it supports.</p>
<h3 id="sec:functionality-tags-72">Functionality Tags <a
href="#sec:functionality-tags-72" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS)</p>
<h3 id="sec:test-setup-162">Test Setup <a href="#sec:test-setup-162"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT has mDNS enabled.</li>
<li>Ensure the Controller exists on the same network as the EUT.</li>
</ol>
<h3 id="sec:test-procedure-154">Test Procedure <a
href="#sec:test-procedure-154" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to acquire an address.</li>
<li>Wait for the EUT to send an unsolicited mDNS response.</li>
</ol>
<h3 id="sec:test-metrics-162">Test Metrics <a
href="#sec:test-metrics-162" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an unsolicited multicast DNS response containing
correct SRV and TXT records that convey the DNS-SD Service Instance Name
for each supported MTP.</li>
</ol>
<h2 id="sec:dns---dns-record-requirements">8.6 DNS - DNS Record
Requirements <a href="#sec:dns---dns-record-requirements"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-162">Purpose <a href="#sec:purpose-162"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT provides valid DNS-SD
records.</p>
<h3 id="sec:functionality-tags-73">Functionality Tags <a
href="#sec:functionality-tags-73" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS)</p>
<h3 id="sec:test-setup-163">Test Setup <a href="#sec:test-setup-163"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure mDNS is enabled on the EUT.</li>
</ol>
<h3 id="sec:test-procedure-155">Test Procedure <a
href="#sec:test-procedure-155" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to acquire a new address.</li>
<li>Wait for to the EUT to send a multicast mDNS advertisement.</li>
</ol>
<h3 id="sec:test-metrics-163">Test Metrics <a
href="#sec:test-metrics-163" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a multicast mDNS advertisement containing a TXT record
for every supported MTP.</li>
<li>Every TXT record in the mDNS advertisement has a “path” and “name”
attribute.</li>
</ol>
<h2 id="sec:mdns-request-response">8.7 mDNS request response <a
href="#sec:mdns-request-response" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-163">Purpose <a href="#sec:purpose-163"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will respond to mDNS
requests.</p>
<h3 id="sec:functionality-tags-74">Functionality Tags <a
href="#sec:functionality-tags-74" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS)</p>
<h3 id="sec:test-setup-164">Test Setup <a href="#sec:test-setup-164"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to listen for mDNS requests.</li>
</ol>
<h3 id="sec:test-procedure-156">Test Procedure <a
href="#sec:test-procedure-156" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Send an mDNS query to the multicast domain that includes the
EUT.</li>
<li>Wait for an mDNS response from the EUT.</li>
</ol>
<h3 id="sec:test-metrics-164">Test Metrics <a
href="#sec:test-metrics-164" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT responds to the mDNS query with the proper information.</li>
</ol>
<h1 id="sec:functionality-test-cases">9 Functionality Test Cases <a
href="#sec:functionality-test-cases" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:use-of-the-timer-event-deprecated-by-9.11">9.1 Use of the
Timer! Event (DEPRECATED by 9.11) <a
href="#sec:use-of-the-timer-event-deprecated-by-9.11" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-164">Purpose <a href="#sec:purpose-164"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Timer! event can be
configured, and the EUT correctly triggers the event.</p>
<h3 id="sec:functionality-tags-75">Functionality Tags <a
href="#sec:functionality-tags-75" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports
Device.LocalAgent.Controller.{i}.ScheduleTimer() command)</p>
<h3 id="sec:test-setup-165">Test Setup <a href="#sec:test-setup-165"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-157">Test Procedure <a
href="#sec:test-procedure-157" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Controller.&lt;Controller ID&gt;.ScheduleTimer()&#39;
            input_args {
                key: &#39;DelaySeconds&#39;
                value: &#39;60&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a Notification.</p></li>
</ol>
<h3 id="sec:test-metrics-165">Test Metrics <a
href="#sec:test-metrics-165" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResponse with ‘ScheduleTimer()’ in the
<code>executed_command</code> element.</li>
<li>The EUT sends a Notify message with an <code>event</code> element
containing Timer!</li>
</ol>
<h2 id="sec:use-of-device.localagent.addcertificate">9.2 Use of
Device.LocalAgent.AddCertificate() <a
href="#sec:use-of-device.localagent.addcertificate" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-165">Purpose <a href="#sec:purpose-165"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the AddCertificate() operation
on the EUT functions correctly.</p>
<h3 id="sec:functionality-tags-76">Functionality Tags <a
href="#sec:functionality-tags-76" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.LocalAgent.AddCertificate()
command)</p>
<h3 id="sec:test-setups">Test Setups <a href="#sec:test-setups"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Have an alternate certificate that the EUT hasn’t seen.</li>
</ol>
<h3 id="sec:test-procedure-158">Test Procedure <a
href="#sec:test-procedure-158" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.AddCertificate()&#39;
            send_resp: true
            input_args {
                key: &#39;Alias&#39;
                value: &#39;addedCert&#39;
            }
            input_args {
                key: &#39;Certificate&#39;
                value: &#39;&lt;new certificate&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Reconfigure the Controller to use the new certificate.</p></li>
<li><p>Reestablish a connection to the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Certificate.&#39;
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Certificate.&lt;cert instance&gt;.Delete()&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-166">Test Metrics <a
href="#sec:test-metrics-166" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResponse after step 1.</li>
<li>The EUT accepts the connection after the Controller has been
reconfigured to use the new certificate.</li>
<li>The EUT returns a GetResponse after step 4 which contains an
instance with an Alias which matches the certificate added in step
1.</li>
<li>The EUT sends an OperateResponse after step 5.</li>
</ol>
<h2 id="sec:upgraded-the-agents-firmware---autoactivate-enabled">9.3
Upgraded the Agent’s Firmware - Autoactivate enabled <a
href="#sec:upgraded-the-agents-firmware---autoactivate-enabled"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-166">Purpose <a href="#sec:purpose-166"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can download firmware
and automatically activate it using the AutoActivate parameter.</p>
<h3 id="sec:functionality-tags-77">Functionality Tags <a
href="#sec:functionality-tags-77" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile)</p>
<h3 id="sec:test-setup-166">Test Setup <a href="#sec:test-setup-166"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has a Subscription to the TransferComplete! and
Boot! events with the Recipient being the Controller instance used for
testing.</li>
</ol>
<h3 id="sec:test-procedure-159">Test Procedure <a
href="#sec:test-procedure-159" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command:  &#39;Device.DeviceInfo.FirmwareImage.&lt;inactive instance&gt;.Download()&#39;
            input_args {
                key: &#39;AutoActivate&#39;
                value: &#39;true&#39;
            }
            input_args {
                key: &#39;URL&#39;
                value: &#39;&lt;firmware URL&gt;&#39;
            }
            input_args {
                key: &#39;Username&#39;
                value: &#39;&lt;optional username&gt;&#39;
            }
            input_args {
                key: &#39;Password&#39;
                value:&#39;&lt;optional password&gt;&#39;
            }
            input_args {
                key: &#39;FileSize&#39;
                value: &#39;&lt;file size&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a Notification</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-167">Test Metrics <a
href="#sec:test-metrics-167" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message after step 1 containing a
<code>oper_complete</code> element with a <code>command_name</code> of
‘Download()’</li>
<li>The EUT sends a Notify message with a TransferComplete! event.</li>
<li>The EUT sends a Notify message with a Boot! event, with the
‘FirmwareUpdated’ argument set to true.</li>
<li>The EUT sends a GetResponse message after step 3 which shows that
Device.DeviceInfo.ActiveFirmwareImage matches the FirmwareImage instance
on which the Download() operation was called; also that
Device.DeviceInfo.SoftwareVersion matches the expected version.</li>
</ol>
<h2
id="sec:upgrading-the-agents-firmware---using-timewindow-immediate">9.4
Upgrading the Agent’s Firmware - Using TimeWindow, Immediate <a
href="#sec:upgrading-the-agents-firmware---using-timewindow-immediate"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-167">Purpose <a href="#sec:purpose-167"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can activate a firmware
image when a TimeWindow object is used with Immediately mode.</p>
<h3 id="sec:functionality-tags-78">Functionality Tags <a
href="#sec:functionality-tags-78" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile with Activate()
operation)</p>
<h3 id="sec:test-setup-167">Test Setup <a href="#sec:test-setup-167"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the EUT has a FirmwareImage instance containing inactive
firmware.</li>
<li>Ensure the EUT has a Subscription instance for Boot! with the
Controller used for testing set as the Recipient.</li>
<li>Ensure that the EUT has a Subscription instance for the
OperationComplete notification with a NotifType equal to
‘OperationComplete’ and a ReferenceList that matches the path of the
‘Activate()’ command with the Controller used for testing set as the
Recipient.</li>
</ol>
<h3 id="sec:test-procedure-160">Test Procedure <a
href="#sec:test-procedure-160" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &quot;Device.DeviceInfo.FirmwareImage.&lt;instance&gt;.Activate()&quot;
            input_args: {
                key: &#39;TimeWindow.1.Start&#39;
                value: &#39;1&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.End&#39;
                value: &#39;100&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.Mode&#39;
                value: &#39;Immediately&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for Notify message from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.SoftwareVersion&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-168">Test Metrics <a
href="#sec:test-metrics-168" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message within 5 seconds with an
OperationComplete element with a <code>command_name</code> of
‘Activate()’.</li>
<li>The EUT sends a Notify message with a Boot! event and a
FirmwareUpdated argument set to true.</li>
<li>The EUT responds to the Get message with a GetResponse containing a
SoftwareVersion element with the expected software version.</li>
</ol>
<h2
id="sec:upgrading-the-agents-firmware---using-timewindow-anytime">9.5
Upgrading the Agent’s Firmware - Using TimeWindow, AnyTime <a
href="#sec:upgrading-the-agents-firmware---using-timewindow-anytime"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-168">Purpose <a href="#sec:purpose-168"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can activate a firmware
image when a TimeWindow instance used with the AnyTime mode.</p>
<h3 id="sec:functionality-tags-79">Functionality Tags <a
href="#sec:functionality-tags-79" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditionally Mandatory (implements Firmware:1 and Activate()
operation)</p>
<h3 id="sec:test-setup-168">Test Setup <a href="#sec:test-setup-168"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the EUT has a FirmwareImage instance containing inactive
firmware.</li>
<li>Ensure the EUT has a Subscription to the Boot! event with the
Controller used for testing set as the Recipient.</li>
<li>Ensure that the EUT has a Subscription instance for the
OperationComplete notification with a NotifType equal to
‘OperationComplete’ and a ReferenceList that matches the path of the
‘Activate()’ command with the Controller used for testing set as the
Recipient.</li>
</ol>
<h3 id="sec:test-procedure-161">Test Procedure <a
href="#sec:test-procedure-161" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;inactive instance&gt;.Activate()&#39;
            input_args: {
                key: &#39;TimeWindow.1.Start&#39;
                value: &#39;0&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.End&#39;
                value: &#39;120&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.Mode&#39;
                value: &#39;AnyTime&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.SoftwareVersion&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-169">Test Metrics <a
href="#sec:test-metrics-169" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message within 2 minutes after step 1.</li>
<li>The Notify message has a OperationComplete element.</li>
<li>The EUT sends a Notify message with a Boot! event and a
FirmwareUpdated argument set to true.</li>
<li>The EUT sends a GetResponse after step 3 with a SoftwareVersion
parameter that matches the expected version.</li>
</ol>
<h2 id="sec:upgrading-the-agents-firmware---validated-firmware">9.6
Upgrading the Agent’s Firmware - Validated Firmware <a
href="#sec:upgrading-the-agents-firmware---validated-firmware"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-169">Purpose <a href="#sec:purpose-169"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can validate the
integrity of downloaded firmware.</p>
<h3 id="sec:functionality-tags-80">Functionality Tags <a
href="#sec:functionality-tags-80" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile)</p>
<h3 id="sec:test-setup-169">Test Setup <a href="#sec:test-setup-169"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has Subscriptions to the TransferComplete! event
notification with the Controller used for testing set as the
Recipient.</li>
</ol>
<h3 id="sec:test-procedure-162">Test Procedure <a
href="#sec:test-procedure-162" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure
using an invalid checksum:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;inactive slot&gt;.Download()&#39;
            input_args {
                key: &#39;URL&#39;
                value: &#39;&lt;firmware URL&gt;&#39;
            }
            input_args {
                key: &#39;CheckSumAlgorithm&#39;
                value: &#39;SHA-1&#39;
            }
            input_args {
                key: &#39;CheckSum&#39;
                value: &#39;&lt;invalid checksum&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.FirmwareImage.&lt;previously used instance&gt;.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-170">Test Metrics <a
href="#sec:test-metrics-170" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message with a TransferComplete! event.</li>
<li>The EUT sends a Get response with a Status parameter of
ValidationFailed.</li>
</ol>
<h2 id="sec:upgrading-the-agents-firmware---download-to-active-bank">9.7
Upgrading the Agent’s Firmware - Download to Active Bank <a
href="#sec:upgrading-the-agents-firmware---download-to-active-bank"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-170">Purpose <a href="#sec:purpose-170"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT is capable downloading
and installing new firmware for EUTs that may support only the active
firmware bank.</p>
<h3 id="sec:functionality-tags-81">Functionality Tags <a
href="#sec:functionality-tags-81" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile)</p>
<h3 id="sec:test-setup-170">Test Setup <a href="#sec:test-setup-170"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has a Subscription to the TransferComplete!
event with the recipient being the instance used for testing.</li>
<li>Ensure the EUT has a Subscription to the Boot! event and the
Controller used for testing is set as the Recipient.</li>
<li>Record the number of firmware banks the EUT supports.</li>
</ol>
<h3 id="sec:test-procedure-163">Test Procedure <a
href="#sec:test-procedure-163" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;active firmware slot&gt;.Download()&#39;
            input_args {
                key: &#39;URL&#39;
                value: &#39;&lt;firmware URL&gt;&#39;
            }
            input_args {
                key: &#39;AutoActivate&#39;
                value: &#39;true&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-171">Test Metrics <a
href="#sec:test-metrics-171" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message with an OperationComplete, if the EUT
supports multiple firmware banks the OperationComplete may contain an
error indicating that downloading to an active firmware slot is not
allowed.</li>
<li>If an OperationComplete Notification is sent without an error, the
EUT sends a Notify message with a Boot! event and a FirmwareUpdated
argument set to true.</li>
</ol>
<h2
id="sec:upgrading-the-agents-firmware---cancelling-a-request-using-the-cancel-command">9.8
Upgrading the Agent’s Firmware - Cancelling a request using the Cancel()
command <a
href="#sec:upgrading-the-agents-firmware---cancelling-a-request-using-the-cancel-command"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-171">Purpose <a href="#sec:purpose-171"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can correctly cancel a
Download() operation.</p>
<h3 id="sec:functionality-tags-82">Functionality Tags <a
href="#sec:functionality-tags-82" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile and
Device.LocalAgent.Request.{i}.Cancel() operation)</p>
<h3 id="sec:test-setup-171">Test Setup <a href="#sec:test-setup-171"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure the EUT has inactive firmware in one of FirmwareImage
slots.</li>
<li>Ensure the EUT has a subscription to the Boot! event with the
Controller used for testing set as the Recipient.</li>
</ol>
<h3 id="sec:test-procedure-164">Test Procedure <a
href="#sec:test-procedure-164" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;valid instance&gt;.Activate()&#39;
            input_args {
                key: &#39;TimeWindow.1.Start&#39;
                value: &#39;120&#39;
            }
            input_args {
                key: &#39;TimeWindow.1.End&#39;
                value: &#39;500&#39;
            }
            input_args {
                key: &#39;TimeWindow.1.Mode&#39;
                value: &#39;AnyTime&#39;
            }
            send_resp: true
        }
    }
}</code></pre></li>
<li><p>Send an message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Request.&lt;returned in step 1&gt;.Cancel()&#39;
        }
    }
}</code></pre></li>
<li><p>Wait up to 500 seconds for a Boot! event from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Request.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-172">Test Metrics <a
href="#sec:test-metrics-172" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a OperationResponse after step 1 with a
<code>executed_command</code> element of ‘Activate()’ and a
<code>req_obj_path</code> referencing an entry in the
Device.LocalAgent.Request table.</li>
<li>The EUT never sends a Boot! event.</li>
<li>In the GetResponse from the EUT after step 4, the Request instance
is either non-existent or the Status parameter of the relevant request
is either Cancelled or Cancelling.</li>
</ol>
<h2 id="sec:adding-a-new-controller---onboardrequest">9.9 Adding a New
Controller - OnBoardRequest <a
href="#sec:adding-a-new-controller---onboardrequest" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-172">Purpose <a href="#sec:purpose-172"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can handle the manual
adding of a new Controller.</p>
<h3 id="sec:functionality-tags-83">Functionality Tags <a
href="#sec:functionality-tags-83" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Controller:1 profile with the ability
to create instances of the Device.LocalAgent.Controller. object,
supports SendOnBoardRequest())</p>
<h3 id="sec:test-setup-172">Test Setup <a href="#sec:test-setup-172"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>A valid role instance is configured on the EUT for use with the new
certificate.</li>
<li>A valid certificate instance is configured on the EUT</li>
<li>A secondary Controller is configured and ready to communicate with
another endpoint.</li>
</ol>
<h3 id="sec:test-procedure-165">Test Procedure <a
href="#sec:test-procedure-165" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure.</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            create_objs {
                obj_path: &#39;Device.LocalAgent.Controller.&#39;
                param_settings {
                        param: &#39;Alias&#39;
                        value: &#39;usp-111-Controller&#39;
                    }
                param_settings {
                        param: &#39;EndpointID&#39;
                        value: &#39;&lt;new Controller endpoint ID&gt;&#39;
                    }
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;AssignedRole&#39;
                        value: &#39;&lt;valid role instance&gt;&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
          create_objs {
            obj_path: &#39;Device.LocalAgent.Controller.&lt;new Controller instance&gt;.MTP.&#39;
            param_settings: {
                    param: &#39;Enable&#39;
                    value: &#39;true&#39;
                }
            param_settings: {
                    param: &#39;Protocol&#39;
                    value: &#39;&lt;supported MTP&gt;&#39;
                }
           }
              #  .
              #  .
              #  &lt;further parameters to configure supported MTP&gt;
              #  .
              #  .
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Controller.&lt;new instance&gt;.SendOnBoardRequest()&#39;
        }
    }
}</code></pre></li>
<li><p>Allow the secondary Controller to receive the OnBoardRequest()
and send a NotifyResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-173">Test Metrics <a
href="#sec:test-metrics-173" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is able to start a session with the secondary
Controller.</li>
<li>The EUT sends a Notify message to the secondary Controller
containing an OnBoardRequest element.</li>
</ol>
<h2 id="sec:use-of-the-boot-event-and-bootparameters">9.10 Use of the
Boot! event and BootParameters <a
href="#sec:use-of-the-boot-event-and-bootparameters" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-173">Purpose <a href="#sec:purpose-173"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly triggers the
Boot! event and correctly includes the configured BootParameters.</p>
<h3 id="sec:functionality-tags-84">Functionality Tags <a
href="#sec:functionality-tags-84" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Reboot:1 profile, supports
Device.DeviceInfo.BootFirmwareImage)</p>
<h3 id="sec:test-setup-173">Test Setup <a href="#sec:test-setup-173"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-166">Test Procedure <a
href="#sec:test-procedure-166" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            create_objs {
                    obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                    param_settings {
                            param: &#39;NotifType&#39;
                            value: &#39;Event&#39;
                        }
                    param_settings {
                            param: &#39;ReferenceList&#39;
                            value: &#39;Device.Boot!&#39;
                        }
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;true&#39;
                        }
                }
            create_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;Controller instance&gt;.BootParameter.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;true&#39;
                        }
                    param_settings {
                            param: &#39;ParameterName&#39;
                            value: &#39;Device.DeviceInfo.BootFirmwareImage&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-174">Test Metrics <a
href="#sec:test-metrics-174" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After step 2 the EUT sends a Notify message with an event element
containing a ParameterMap argument with
‘Device.DeviceInfo.BootFirmwareImage’</li>
</ol>
<h2 id="sec:use-of-the-timer-event">9.11 Use of the Timer! Event <a
href="#sec:use-of-the-timer-event" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-174">Purpose <a href="#sec:purpose-174"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Timer! event can be
configured, and the EUT correctly triggers the event.</p>
<h3 id="sec:functionality-tags-85">Functionality Tags <a
href="#sec:functionality-tags-85" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.ScheduleTimer() command)</p>
<h3 id="sec:test-setup-174">Test Setup <a href="#sec:test-setup-174"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT with NotifType
OperationComplete on Device.ScheduleTimer().</li>
</ol>
<h3 id="sec:test-procedure-167">Test Procedure <a
href="#sec:test-procedure-167" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.ScheduleTimer()&#39;
            send_resp: true
            input_args {
                key: &#39;DelaySeconds&#39;
                value: &#39;60&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a Notification.</p></li>
</ol>
<h3 id="sec:test-metrics-175">Test Metrics <a
href="#sec:test-metrics-175" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResponse with ScheduleTimer() in the
executed_command element.</li>
<li>The EUT sends an OperationComplete Notify message with an event
element containing ScheduleTimer().</li>
</ol>
<h1 id="sec:bulk-data-collection-test-cases">10 Bulk Data Collection
Test Cases <a href="#sec:bulk-data-collection-test-cases"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:use-bulkdata-collection-using-http-and-json">10.1 Use
BulkData collection using HTTP and JSON <a
href="#sec:use-bulkdata-collection-using-http-and-json"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-175">Purpose <a href="#sec:purpose-175"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports JSON BulkData
collection over HTTP.</p>
<h3 id="sec:functionality-tags-86">Functionality Tags <a
href="#sec:functionality-tags-86" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols, “JSON” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-175">Test Setup <a href="#sec:test-setup-175"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured
to support receiving JSON BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-168">Test Procedure <a
href="#sec:test-procedure-168" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;JSON&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-176">Test Metrics <a
href="#sec:test-metrics-176" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTP endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is JSON and is well formed
(parsable).</li>
<li>The BulkData transfer contains the one parameter configured in step
4 and the name of the parameter matches the expected name ‘UpTime’.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-https-and-json">10.2 Use
BulkData collection using HTTPS and JSON <a
href="#sec:use-bulkdata-collection-using-https-and-json"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-176">Purpose <a href="#sec:purpose-176"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports JSON BulkData
collection over HTTPS.</p>
<h3 id="sec:functionality-tags-87">Functionality Tags <a
href="#sec:functionality-tags-87" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols, “JSON” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-176">Test Setup <a href="#sec:test-setup-176"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTPS endpoint that is accessible by the EUT is configured
to support receiving JSON BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-169">Test Procedure <a
href="#sec:test-procedure-169" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;JSON&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-177">Test Metrics <a
href="#sec:test-metrics-177" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTPS endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is JSON and is well formed
(parsable).</li>
<li>The BulkData transfer contains the one parameter configured in step
4 and the name of the parameter matches the expected name ‘UpTime’.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-http-and-csv">10.3 Use
BulkData collection using HTTP and CSV <a
href="#sec:use-bulkdata-collection-using-http-and-csv"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-177">Purpose <a href="#sec:purpose-177"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports CSV BulkData
collection over HTTP.</p>
<h3 id="sec:functionality-tags-88">Functionality Tags <a
href="#sec:functionality-tags-88" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols, “CSV” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-177">Test Setup <a href="#sec:test-setup-177"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured
to support receiving CSV BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-170">Test Procedure <a
href="#sec:test-procedure-170" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;CSV&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-178">Test Metrics <a
href="#sec:test-metrics-178" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTP endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is CSV and is well formed
(parsable).</li>
<li>The BulkData transfer contains the one parameter configured in step
4 and the name of the parameter matches the expected name ‘UpTime’.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-https-and-csv">10.4 Use
BulkData collection using HTTPS and CSV <a
href="#sec:use-bulkdata-collection-using-https-and-csv"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-178">Purpose <a href="#sec:purpose-178"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports CSV BulkData
collection over HTTPS.</p>
<h3 id="sec:functionality-tags-89">Functionality Tags <a
href="#sec:functionality-tags-89" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols, “CSV” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-178">Test Setup <a href="#sec:test-setup-178"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTPS endpoint that is accessible by the EUT is configured
to support receiving CSV BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-171">Test Procedure <a
href="#sec:test-procedure-171" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;CSV&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-179">Test Metrics <a
href="#sec:test-metrics-179" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTPS endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is CSV and is well formed
(parsable).</li>
<li>The BulkData transfer contains the one parameter configured in step
4 and the name of the parameter matches the expected name ‘UpTime’.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-http-with-uri-parameters">10.5
Use BulkData collection using HTTP with URI Parameters <a
href="#sec:use-bulkdata-collection-using-http-with-uri-parameters"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-179">Purpose <a href="#sec:purpose-179"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection over HTTP with extra URI parameters</p>
<h3 id="sec:functionality-tags-90">Functionality Tags <a
href="#sec:functionality-tags-90" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-179">Test Setup <a href="#sec:test-setup-179"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is
configured.</li>
</ol>
<h3 id="sec:test-procedure-172">Test Procedure <a
href="#sec:test-procedure-172" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.HTTP.RequestURIParameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-180">Test Metrics <a
href="#sec:test-metrics-180" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTP endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The EUT includes the EUT UpTime encoded into the URI using the name
‘UpTime’</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2
id="sec:use-bulkdata-collection-using-https-with-uri-parameters">10.6
Use BulkData collection using HTTPS with URI Parameters <a
href="#sec:use-bulkdata-collection-using-https-with-uri-parameters"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-180">Purpose <a href="#sec:purpose-180"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection over HTTPS with extra URI parameters</p>
<h3 id="sec:functionality-tags-91">Functionality Tags <a
href="#sec:functionality-tags-91" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-180">Test Setup <a href="#sec:test-setup-180"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTPS endpoint that is accessible by the EUT is
configured.</li>
</ol>
<h3 id="sec:test-procedure-173">Test Procedure <a
href="#sec:test-procedure-173" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of https endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.HTTP.RequestURIParameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-181">Test Metrics <a
href="#sec:test-metrics-181" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTPS endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The EUT includes the EUT UpTime encoded into the URI using the name
‘UpTime’</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:bulkdata-collection-retry-mechanism-over-http">10.7 BulkData
collection retry mechanism over HTTP <a
href="#sec:bulkdata-collection-retry-mechanism-over-http"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-181">Purpose <a href="#sec:purpose-181"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection retry mechanism.</p>
<h3 id="sec:functionality-tags-92">Functionality Tags <a
href="#sec:functionality-tags-92" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-181">Test Setup <a href="#sec:test-setup-181"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is
configured.</li>
</ol>
<h3 id="sec:test-procedure-174">Test Procedure <a
href="#sec:test-procedure-174" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
          param_settings {
               param: &#39;HTTP.RetryEnable&#39;
               value: &#39;true&#39;
           }
          param_settings {
               param: &#39;HTTP.RetryMinimumWaitInterval&#39;
               value: &#39;5&#39;
           }
          param_settings {
               param: &#39;HTTP.RetryIntervalMultiplier&#39;
               value: &#39;2000&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Disable the HTTP BulkData collection endpoint.</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to attempt to send a BulkData transfer.</p></li>
<li><p>Wait for 13 seconds for the EUT to retry the BulkData
transfer.</p></li>
<li><p>Wait for 23 seconds for the EUT to retry the BulkData
transfer.</p></li>
<li><p>Enable the HTTP BulkData collection endpoint</p></li>
<li><p>Wait for 43 seconds for the EUT to retry the BulkData
transfer.</p></li>
<li><p>Wait for the EUT to send a BulkData transfer</p></li>
</ol>
<h3 id="sec:test-metrics-182">Test Metrics <a
href="#sec:test-metrics-182" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTP endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The EUT retries sending the BulkData transfer 3 times with each time
occurring within the expected retry interval.</li>
<li>The EUT does not attempt to retry the BulkData transfer after
receiving a positive response in step 9.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are encoded as URI parameters in each request.</li>
</ol>
<h2
id="sec:use-bulkdata-collection-using-http-with-wildcard-parameter">10.8
Use BulkData collection using HTTP with wildcard parameter <a
href="#sec:use-bulkdata-collection-using-http-with-wildcard-parameter"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-182">Purpose <a href="#sec:purpose-182"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection over HTTP with a wildcarded parameter</p>
<h3 id="sec:functionality-tags-93">Functionality Tags <a
href="#sec:functionality-tags-93" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-182">Test Setup <a href="#sec:test-setup-182"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is
configured.</li>
<li>Ensure there are at least 2 BootParameters configured for the test
controller.</li>
</ol>
<h3 id="sec:test-procedure-175">Test Procedure <a
href="#sec:test-procedure-175" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;Enabled&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.*.BootParameter.*.Enable&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-183">Test Metrics <a
href="#sec:test-metrics-183" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTP endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>Ensure at least two “Enable” are in the BulkData transfer with the
parameter names matching the following expression:
<code>Enabled\.[1-9][0-9]*\.[1-9][0-9]*</code></li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-http-with-object-path">10.9
Use BulkData collection using HTTP with Object Path <a
href="#sec:use-bulkdata-collection-using-http-with-object-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-183">Purpose <a href="#sec:purpose-183"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection over HTTP with an Object Path</p>
<h3 id="sec:functionality-tags-94">Functionality Tags <a
href="#sec:functionality-tags-94" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-183">Test Setup <a href="#sec:test-setup-183"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is
configured.</li>
</ol>
<h3 id="sec:test-procedure-176">Test Procedure <a
href="#sec:test-procedure-176" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;TestController&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-184">Test Metrics <a
href="#sec:test-metrics-184" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData
transfers to the HTTPS endpoint within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>Ensure that all the parameters included in the BulkData transfer
match <code>TestController.&lt;parameter&gt;</code> and that all
expected parameters are present.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the
USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-push-event">10.10 Use BulkData
collection Push event <a href="#sec:use-bulkdata-collection-push-event"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-184">Purpose <a href="#sec:purpose-184"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection via the Push event.</p>
<h3 id="sec:functionality-tags-95">Functionality Tags <a
href="#sec:functionality-tags-95" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “USPEventNotif” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-184">Test Setup <a href="#sec:test-setup-184"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-177">Test Procedure <a
href="#sec:test-procedure-177" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;USPEventNotif&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;JSON or CSV&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.LocalAgent.Subscription.&#39;
          param_settings {
               param: &#39;NotifType&#39;
               value: &#39;Event&#39;
           }
          param_settings {
               param: &#39;ReferenceList&#39;
               value: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Push!&#39;
           }
          param_settings {
               param: &#39;Enable&#39;
               value: &#39;true&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-185">Test Metrics <a
href="#sec:test-metrics-185" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfer
Push! events to the controller within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the Data parameter in the Push! notification is well
formed (parsable).</li>
<li>The BulkData transfer contains the one parameter configured in step
4 and the name of the parameter matches the expected name ‘UpTime’.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-push-event-with-wildcard-path">10.11
Use BulkData collection Push event with Wildcard path <a
href="#sec:use-bulkdata-collection-push-event-with-wildcard-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-185">Purpose <a href="#sec:purpose-185"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection via the Push event using a wildcard path.</p>
<h3 id="sec:functionality-tags-96">Functionality Tags <a
href="#sec:functionality-tags-96" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “USPEventNotif” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-185">Test Setup <a href="#sec:test-setup-185"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure that there are at least 2 BootParameters configured for the
test Controller.</li>
</ol>
<h3 id="sec:test-procedure-178">Test Procedure <a
href="#sec:test-procedure-178" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;USPEventNotif&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;JSON or CSV&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;Enabled&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.*.BootParameter.*.Enable&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.LocalAgent.Subscription.&#39;
          param_settings {
               param: &#39;NotifType&#39;
               value: &#39;Event&#39;
           }
          param_settings {
               param: &#39;ReferenceList&#39;
               value: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Push!&#39;
           }
          param_settings {
               param: &#39;Enable&#39;
               value: &#39;true&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-186">Test Metrics <a
href="#sec:test-metrics-186" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfer
Push! events to the controller within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the Data parameter in the Push! notification is well
formed (parsable).</li>
<li>The BulkData transfer contains at least 2 parameters, one for each
of the configured BootParameters and the name of the parameters match
the expected name <code>Enabled\.[1-9][0-9]*\.[1-9][0-9]*</code>.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-push-event-with-object-path">10.12
Use BulkData collection Push event with Object path <a
href="#sec:use-bulkdata-collection-push-event-with-object-path"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-186">Purpose <a href="#sec:purpose-186"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection via the Push event using an object path.</p>
<h3 id="sec:functionality-tags-97">Functionality Tags <a
href="#sec:functionality-tags-97" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “USPEventNotif” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-186">Test Setup <a href="#sec:test-setup-186"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-179">Test Procedure <a
href="#sec:test-procedure-179" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;USPEventNotif&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;JSON or CSV&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;Controller&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.LocalAgent.Subscription.&#39;
          param_settings {
               param: &#39;NotifType&#39;
               value: &#39;Event&#39;
           }
          param_settings {
               param: &#39;ReferenceList&#39;
               value: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Push!&#39;
           }
          param_settings {
               param: &#39;Enable&#39;
               value: &#39;true&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-187">Test Metrics <a
href="#sec:test-metrics-187" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfer
Push! events to the controller within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the Data parameter in the Push! notification is well
formed (parsable).</li>
<li>The BulkData transfer contains at parameters with names using the
prefix “Controller”.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-over-mqtt">10.13 Use BulkData
collection over MQTT <a href="#sec:use-bulkdata-collection-over-mqtt"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-187">Purpose <a href="#sec:purpose-187"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData
collection via MQTT.</p>
<h3 id="sec:functionality-tags-98">Functionality Tags <a
href="#sec:functionality-tags-98" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “MQTT” ∈
Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-187">Test Setup <a href="#sec:test-setup-187"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP Records to each other.</li>
<li>Ensure a MQTT endpoint that is accessible by the EUT is enabled in
the test environment.</li>
<li>Ensure there is a Device.MQTT.Client. entry in the EUT’s data model
for the MQTT endpoint mentioned in step 2 of the test setup.</li>
</ol>
<h3 id="sec:test-procedure-180">Test Procedure <a
href="#sec:test-procedure-180" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;MQTT&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;JSON or CSV&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;MQTT.Reference&#39;
               value: &#39;&lt;MQTT.Client instance from step 3 of test setup&gt;&#39;
           }
          param_settings {
               param: &#39;MQTT.PublishTopic&#39;
               value: &#39;mqtt-bulkdata&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as
reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>)
seconds</p></li>
</ol>
<h3 id="sec:test-metrics-188">Test Metrics <a
href="#sec:test-metrics-188" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT published 2 BulkData
transfers to the MQTT server using using the configured topic within 130
(<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the Data parameter in the MQTT frame notification is
well formed (parsable).</li>
<li>The BulkData transfer contains the one parameter configured in step
4 and the name of the parameter matches the expected name ‘UpTime’.</li>
</ol>
<h1 id="sec:mqtt-test-cases">11 MQTT Test Cases <a
href="#sec:mqtt-test-cases" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h1>
<h2 id="sec:support-of-required-mqtt-profiles">11.1 Support of Required
MQTT Profiles <a href="#sec:support-of-required-mqtt-profiles"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-188">Purpose <a href="#sec:purpose-188"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT supports the required
MQTT profiles.</p>
<h3 id="sec:functionality-tags-99">Functionality Tags <a
href="#sec:functionality-tags-99" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-188">Test Setup <a href="#sec:test-setup-188"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary
information to send and receive USP records to each other.</li>
</ol>
<h3 id="sec:test-procedure-181">Test Procedure <a
href="#sec:test-procedure-181" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.MQTT.&#39;
            obj_paths: &#39;Device.LocalAgent.&#39;
            return_params: true
            first_level_only: false
        }
    }
}</code></pre></li>
<li><p>Wait for the GetSupportedDMResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-189">Test Metrics <a
href="#sec:test-metrics-189" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResponse.</li>
<li>The GetSupportedDMResponse from the EUT contains all required
parameters in the MQTTClientCon:1, MQTTClientSubscribe:1, MQTTAgent:1,
and MQTTController:1 data model profiles. The parameter
<code>Device.MQTT.Client.{i}.MessageRetryTime</code> is not required to
be supported for EUTs that only implement MQTT version 5.0.</li>
</ol>
<h2 id="sec:mqtt-session-establishment-using-a-connect-packet">11.2 MQTT
session establishment using a CONNECT packet <a
href="#sec:mqtt-session-establishment-using-a-connect-packet"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-189">Purpose <a href="#sec:purpose-189"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can properly start an
MQTT session using an MQTT CONNECT packet.</p>
<h3 id="sec:functionality-tags-100">Functionality Tags <a
href="#sec:functionality-tags-100" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-189">Test Setup <a href="#sec:test-setup-189"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use an MQTT server that exists
in the test environment.</li>
<li>Ensure that the EUT data model is configured with
<code>.MQTT.Client.{i}.Username</code>,
<code>.MQTT.Client.{i}.Password</code> values.</li>
</ol>
<h3 id="sec:test-procedure-182">Test Procedure <a
href="#sec:test-procedure-182" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to reconnect to the MQTT server.</li>
</ol>
<h3 id="sec:test-metrics-190">Test Metrics <a
href="#sec:test-metrics-190" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an MQTT CONNECT packet to the MQTT server.<br />
</li>
<li>The MQTT CONNECT packet Version is either 5.0 or 3.1.1.</li>
<li>If the EUT uses MQTT 5.0, the MQTT CONNECT packet contains a User
Property name-value pair with name of “usp-endpoint-id” and value of the
EUT USP Endpoint ID.</li>
<li>The EUT includes User Name and Password fields in the MQTT CONNECT
packet.</li>
</ol>
<h2 id="sec:mqtt-use-of-tls">11.3 MQTT Use of TLS <a
href="#sec:mqtt-use-of-tls" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-190">Purpose <a href="#sec:purpose-190"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish secure
MQTT communication via TLS.</p>
<h3 id="sec:functionality-tags-101">Functionality Tags <a
href="#sec:functionality-tags-101" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-190">Test Setup <a href="#sec:test-setup-190"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that exists in
the test environment.</li>
<li>Ensure the EUT and MQTT server are configured with the appropriate
certificates to communicate over TLS.</li>
</ol>
<h3 id="sec:test-procedure-183">Test Procedure <a
href="#sec:test-procedure-183" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT</p></li>
<li><p>Wait for the EUT to reconnect to the MQTT server</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-191">Test Metrics <a
href="#sec:test-metrics-191" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>All communication between the EUT and MQTT server after step 1 are
encrypted using TLS 1.2 or later.</li>
</ol>
<h2 id="sec:mqtt-5.0-clientid">11.4 MQTT 5.0 ClientID <a
href="#sec:mqtt-5.0-clientid" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-191">Purpose <a href="#sec:purpose-191"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly sets the
ClientID field in MQTT packets.</p>
<h3 id="sec:functionality-tags-102">Functionality Tags <a
href="#sec:functionality-tags-102" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP, version 5.0)</p>
<h3 id="sec:test-setup-191">Test Setup <a href="#sec:test-setup-191"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use an MQTT server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-184">Test Procedure <a
href="#sec:test-procedure-184" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.​MQTT.​Client.&lt;active MQTT client instance&gt;.&#39;
        param_settings {
         param: &#39;ClientID&#39;
         value: &#39;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the MQTT server.</p></li>
<li><p>The MQTT server sends an MQTT CONNACK packet with an Assigned
Client Identifier.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.​MQTT.​Client.&lt;active MQTT client instance&gt;.ClientID&#39;
    }
  }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-192">Test Metrics <a
href="#sec:test-metrics-192" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT MQTT CONNECT packet must include a ClientID set to an empty
string.</li>
<li>The retrieved value of ClientID matches the Assigned Client
Identifier from step 4.</li>
</ol>
<h2 id="sec:mqtt-clientid-persistence">11.5 MQTT ClientID Persistence <a
href="#sec:mqtt-clientid-persistence" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-192">Purpose <a href="#sec:purpose-192"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the MQTT ClientID field
persists after successful connection with an MQTT server.</p>
<h3 id="sec:functionality-tags-103">Functionality Tags <a
href="#sec:functionality-tags-103" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-192">Test Setup <a href="#sec:test-setup-192"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use an MQTT server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-185">Test Procedure <a
href="#sec:test-procedure-185" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.​MQTT.​Client.&lt;active MQTT client instance&gt;.ClientID&#39;
    }
  }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the MQTT server.</p></li>
</ol>
<h3 id="sec:test-metrics-193">Test Metrics <a
href="#sec:test-metrics-193" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT uses the same ClientID in the subsequent MQTT CONNECT
packet.</li>
</ol>
<h2 id="sec:mqtt-message-retry">11.6 MQTT Message Retry <a
href="#sec:mqtt-message-retry" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-193">Purpose <a href="#sec:purpose-193"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly enters a retry
state when it fails to connect to the MQTT server.</p>
<h3 id="sec:functionality-tags-104">Functionality Tags <a
href="#sec:functionality-tags-104" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-193">Test Setup <a href="#sec:test-setup-193"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that is part of
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-186">Test Procedure <a
href="#sec:test-procedure-186" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.MQTT.Client.&#39;
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following
structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
<li><p>Disable the MQTT server.</p></li>
<li><p>Allow the EUT to attempt to start an MQTT session with the MQTT
server.</p></li>
<li><p>Reenable the MQTT server after the EUT fails to connect to the
MQTT server twice.</p></li>
</ol>
<h3 id="sec:test-metrics-194">Test Metrics <a
href="#sec:test-metrics-194" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT retries connecting to the MQTT server within the
<code>ConnectRetryTime</code> of the connection instance.</li>
<li>The EUT retries a second time in accordance with
<code>ConnectRetryTime</code> and
<code>ConnectRetryIntervalMultiplier</code>.</li>
</ol>
<h2 id="sec:mqtt-keep-alive">11.7 MQTT Keep Alive <a
href="#sec:mqtt-keep-alive" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-194">Purpose <a href="#sec:purpose-194"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can correctly implement
the MQTT keep alive mechanism and the relevant parameters in the data
model.</p>
<h3 id="sec:functionality-tags-105">Functionality Tags <a
href="#sec:functionality-tags-105" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP, version 5.0)</p>
<h3 id="sec:test-setup-194">Test Setup <a href="#sec:test-setup-194"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is configured to use an MQTT server which exists in the test
environment.</li>
</ol>
<h3 id="sec:test-procedure-187">Test Procedure <a
href="#sec:test-procedure-187" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.​MQTT.​Client.​&lt;active MQTT client instance&gt;.&#39;
                    param_settings {
                            param: &#39;KeepAliveTime&#39;
                            value: &#39;60&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the MQTT server.</p></li>
<li><p>The MQTT server sends an MQTT CONNACK packet with a Keep Alive
value of 30 seconds.</p></li>
<li><p>Wait 45 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-195">Test Metrics <a
href="#sec:test-metrics-195" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an MQTT CONNECT packet on boot with the Keep Alive
property set to 60 seconds.</li>
<li>The EUT sends an MQTT PINGREQ packet within 45 seconds of the last
MQTT message. This represents 1.5 times the Keep Alive value.</li>
</ol>
<h2 id="sec:mqtt-subscribe-packet">11.8 MQTT SUBSCRIBE Packet <a
href="#sec:mqtt-subscribe-packet" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-195">Purpose <a href="#sec:purpose-195"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT includes the correct
fields in an MQTT SUBSCRIBE packet.</p>
<h3 id="sec:functionality-tags-106">Functionality Tags <a
href="#sec:functionality-tags-106" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP, version 5.0)</p>
<h3 id="sec:test-setup-195">Test Setup <a href="#sec:test-setup-195"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use an MQTT server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-188">Test Procedure <a
href="#sec:test-procedure-188" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to reconnect to the MQTT server.</li>
<li>The MQTT server sends an MQTT CONNACK packet containing a User
Property of subscribe-topic.</li>
<li>For an EUT using MQTT 5.0, the MQTT CONNACK packet contains a
Response Information property.</li>
<li>Wait for the EUT to send an MQTT SUBSCRIBE packet.</li>
</ol>
<h3 id="sec:test-metrics-196">Test Metrics <a
href="#sec:test-metrics-196" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an MQTT CONNECT packet to the MQTT server. If the EUT
uses MQTT 5.0, the Request Response Information property must be set to
1.</li>
<li>The EUT sends an MQTT SUBSCRIBE packet to the MQTT server. The MQTT
SUBSCRIBE packet includes the subscribe-topic sent in step 3.</li>
<li>If the EUT uses MQTT 5.0, the MQTT SUBSCRIBE packet includes the
Response Information property sent in step 4.</li>
</ol>
<h2 id="sec:mqtt-new-subscription">11.9 MQTT New Subscription <a
href="#sec:mqtt-new-subscription" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-196">Purpose <a href="#sec:purpose-196"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT sends an MQTT SUBSCRIBE
packet when a new <code>Device.MQTT.Client.{i}.Subscription.{i}.</code>
object is added.</p>
<h3 id="sec:functionality-tags-107">Functionality Tags <a
href="#sec:functionality-tags-107" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports MQTT MTP)</p>
<h3 id="sec:test-setup-196">Test Setup <a href="#sec:test-setup-196"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use an MQTT server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-metrics-197">Test Metrics <a
href="#sec:test-metrics-197" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
          allow_partial: false
          create_objs {
              obj_path: &#39;Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.&#39;
              param_settings {
                      param: &#39;Enable&#39;
                      value: &#39;true&#39;
                  }
              param_settings {
                      param: &#39;Topic&#39;
                      value: &#39;newTopic-11-9&#39;
                  }
              }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send an MQTT SUBSCRIBE packet.</p></li>
<li><p>The MQTT server sends an MQTT SUBACK packet indicating the QoS
level that was granted for the subscription.</p></li>
<li><p>Send a Get message with topic <code>newTopic-11-9</code> with the
following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.&lt;instance identifier from step 1&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &quot;&lt;msg_id&gt;&quot;
  msg_type: SET
}

body {
  request {

    set {
      allow_partial: false
      update_objs {
        obj_path: &quot;Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.&lt;instance identifier from step 1&gt;&quot;
        param_settings: {
         param: &quot;Enable&quot;
         value: &quot;false&quot;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>The MQTT Server sends an MQTT UNSUBACK packet indicating
success.</p></li>
</ol>
<h3 id="sec:test-metrics-198">Test Metrics <a
href="#sec:test-metrics-198" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an MQTT SUBSCRIBE packet that includes the new Topic
from step 1.</li>
<li>The EUT sends a GetResp for the Subscription.</li>
<li>The EUT sends an MQTT UNSUBSCRIBE packet for the configured Topic
after Enable is set to false.</li>
</ol>
<h2 id="sec:mqtt-no-topic-in-connack">11.10 MQTT No Topic in CONNACK <a
href="#sec:mqtt-no-topic-in-connack" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-197">Purpose <a href="#sec:purpose-197"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will disconnect from
the MQTT server if it receives no subscribe-topic.</p>
<h3 id="sec:functionality-tags-108">Functionality Tags <a
href="#sec:functionality-tags-108" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP, version 5.0)</p>
<h3 id="sec:test-setup-197">Test Setup <a href="#sec:test-setup-197"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use an MQTT server that exists
in the test environment.</li>
<li>Ensure that all instances of
<code>Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.</code>
are removed from the EUT.</li>
</ol>
<h3 id="sec:test-procedure-189">Test Procedure <a
href="#sec:test-procedure-189" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to reconnect to the MQTT server.</li>
<li>The MQTT server sends an MQTT CONNACK packet that does not include a
subscribe-topic User Property.</li>
</ol>
<h3 id="sec:test-metrics-199">Test Metrics <a
href="#sec:test-metrics-199" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an MQTT DISCONNECT packet to the MQTT server.</li>
</ol>
<h2 id="sec:mqtt-failure-to-subscribe">11.11 MQTT Failure to Subscribe
<a href="#sec:mqtt-failure-to-subscribe" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-198">Purpose <a href="#sec:purpose-198"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will disconnect from
the MQTT server if it is unable to subscribe to a Topic.</p>
<h3 id="sec:functionality-tags-109">Functionality Tags <a
href="#sec:functionality-tags-109" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-198">Test Setup <a href="#sec:test-setup-198"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use an MQTT server that exists
in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-190">Test Procedure <a
href="#sec:test-procedure-190" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to send an MQTT SUBSCRIBE packet.</li>
<li>The MQTT server sends an MQTT SUBACK packet that includes an error
for each Topic in the SUBSCRIBE packet.</li>
</ol>
<h3 id="sec:test-metrics-200">Test Metrics <a
href="#sec:test-metrics-200" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an MQTT DISCONNECT packet to the MQTT server.</li>
</ol>
<h2 id="sec:mqtt-publish-packet">11.12 MQTT PUBLISH Packet <a
href="#sec:mqtt-publish-packet" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-199">Purpose <a href="#sec:purpose-199"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can send a properly
formatted an MQTT PUBLISH packet.</p>
<h3 id="sec:functionality-tags-110">Functionality Tags <a
href="#sec:functionality-tags-110" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-199">Test Setup <a href="#sec:test-setup-199"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-191">Test Procedure <a
href="#sec:test-procedure-191" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the MQTT server.</p></li>
<li><p>The MQTT server sends a CONNACK packet.</p></li>
<li><p>For an EUT using MQTT 5.0, the CONNACK packet contains a Response
Information property.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-201">Test Metrics <a
href="#sec:test-metrics-201" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an MQTT PUBLISH packet containing a GetResponse.</li>
<li>If the EUT uses MQTT 5.0, the Response Topic is set to the Response
Information property from step 4.</li>
<li>If the EUT uses MQTT 3.1.1, the “reply to” is included after
<code>/reply-to=</code> at the end of the PUBLISH Topic Name, with any
<code>/</code> character in the Topic replaced by <code>%2F</code>.</li>
<li>If the EUT uses MQTT 5.0, the Content Type property is set to
<code>usp.msg</code></li>
</ol>
<h2 id="sec:mqtt-qos">11.13 MQTT QoS <a href="#sec:mqtt-qos"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-200">Purpose <a href="#sec:purpose-200"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT supports at least MQTT
QoS levels 0 and 1.</p>
<h3 id="sec:functionality-tags-111">Functionality Tags <a
href="#sec:functionality-tags-111" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-200">Test Setup <a href="#sec:test-setup-200"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-192">Test Procedure <a
href="#sec:test-procedure-192" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
          allow_partial: false
          create_objs {
              obj_path: &#39;Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.&#39;
              param_settings {
                      param: &#39;Enable&#39;
                      value: &#39;true&#39;
                  }
              param_settings {
                      param: &#39;Topic&#39;
                      value: &#39;newTopic-11-13-QoS0&#39;
                  }
              }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send an MQTT SUBSCRIBE packet.</p></li>
<li><p>The MQTT server sends an MQTT SUBACK packet indicating a QoS
level of 0 for the subscription.</p></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
          allow_partial: false
          create_objs {
              obj_path: &#39;Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.&#39;
              param_settings {
                      param: &#39;Enable&#39;
                      value: &#39;true&#39;
                  }
              param_settings {
                      param: &#39;Topic&#39;
                      value: &#39;newTopic-11-13-QoS1&#39;
                  }
              param_settings {
                      param: &#39;QoS&#39;
                      value: &#39;1&#39;
                  }
              }
        }
    }
}</code></pre></li>
<li><p>The MQTT server sends an MQTT SUBACK packet indicating a QoS
level of 1 for the subscription.</p></li>
<li><p>Send a Get message with topic ‘newTopic-11-13-QoS0’ to the EUT
with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.&lt;instance from step 1&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Send a Get message with topic ‘newTopic-11-13-QoS1’ to the EUT
with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.MQTT.Client.&lt;active MQTT client instance&gt;.Subscription.&lt;instance from step 4&gt;.&#39;
    }
  }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-202">Test Metrics <a
href="#sec:test-metrics-202" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetResp for the Get message sent to topic
‘newTopic-11-13-QoS0’.</li>
<li>The EUT sends a GetResp for the Get message sent to topic
‘newTopic-11-13-QoS1’.</li>
</ol>
<h2 id="sec:mqtt-reply-to-topic">11.14 MQTT Reply to Topic <a
href="#sec:mqtt-reply-to-topic" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-201">Purpose <a href="#sec:purpose-201"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can process and set the
“reply to” Topic in MQTT PUBLISH packets.</p>
<h3 id="sec:functionality-tags-112">Functionality Tags <a
href="#sec:functionality-tags-112" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-201">Test Setup <a href="#sec:test-setup-201"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-193">Test Procedure <a
href="#sec:test-procedure-193" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-203">Test Metrics <a
href="#sec:test-metrics-203" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>If the EUT uses MQTT 5.0, the EUT must send an MQTT PUBLISH packet
that includes a GetResponse. The Topic Name must be set to the “reply
to” Topic from the controller’s MQTT PUBLISH packet Response Topic
property. The EUT must include a Response Topic property that has a
“reply to” Topic set.</li>
<li>If the EUT uses MQTT 3.1.1, the EUT must send an MQTT PUBLISH packet
that includes a GetResponse. The Topic must be set to the reply to topic
at the end of the Topic Name in the Controller’s MQTT PUBLISH packet.
All instances of <code>%2F</code> must be replaced by <code>/</code> in
the Topic Name. The EUT must set a reply to topic by including it at the
end of the Topic Name after <code>/reply-to=</code> and replacing all
instances of <code>/</code> with <code>%2F</code>.</li>
</ol>
<h2 id="sec:mqtt-5.0-content-type">11.15 MQTT 5.0 Content Type <a
href="#sec:mqtt-5.0-content-type" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-202">Purpose <a href="#sec:purpose-202"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can accept valid values
of the MQTT Content Type property.</p>
<h3 id="sec:functionality-tags-113">Functionality Tags <a
href="#sec:functionality-tags-113" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP, version 5.0)</p>
<h3 id="sec:test-setup-202">Test Setup <a href="#sec:test-setup-202"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-194">Test Procedure <a
href="#sec:test-procedure-194" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the Controller to include an MQTT Content Type property
of <code>usp.msg</code> in its MQTT packets.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse.</p></li>
<li><p>Configure the Controller to include an MQTT Content Type property
of <code>application/vnd.bbf.usp.msg</code> in its MQTT
packets.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-204">Test Metrics <a
href="#sec:test-metrics-204" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT must send a GetResponse for both Get messages, indicating
that it processed the Controller’s MQTT PUBLISH packets.</li>
</ol>
<h2 id="sec:mqtt-connection-retry">11.16 MQTT Connection Retry <a
href="#sec:mqtt-connection-retry" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-203">Purpose <a href="#sec:purpose-203"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT retries its connection
with the MQTT server after the server terminates the connection.</p>
<h3 id="sec:functionality-tags-114">Functionality Tags <a
href="#sec:functionality-tags-114" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-203">Test Setup <a href="#sec:test-setup-203"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-195">Test Procedure <a
href="#sec:test-procedure-195" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Send an MQTT DISCONNECT packet to the EUT.</li>
<li>Allow the EUT to start a new MQTT session with the MQTT server.</li>
</ol>
<h3 id="sec:test-metrics-205">Test Metrics <a
href="#sec:test-metrics-205" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>The EUT retries connecting to the MQTT server between
ConnectRetryTime of the connection instance and
ConnectRetryTime*(ConnectRetryIntervalMultiplier/1000).</li>
</ol>
<h2 id="sec:mqtt---use-of-connect-record">11.17 MQTT - Use of Connect
Record <a href="#sec:mqtt---use-of-connect-record" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-204">Purpose <a href="#sec:purpose-204"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly sends a
Connect record after it has established a communications channel to the
controller.</p>
<h3 id="sec:functionality-tags-115">Functionality Tags <a
href="#sec:functionality-tags-115" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the MQTT MTP)</p>
<h3 id="sec:test-setup-204">Test Setup <a href="#sec:test-setup-204"
class="headerlink" title="Permalink to this header"><img
src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use an MQTT server that exists in
the test environment.</li>
</ol>
<h3 id="sec:test-procedure-196">Test Procedure <a
href="#sec:test-procedure-196" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to establish an MQTT session with the MQTT
server.</li>
</ol>
<h3 id="sec:test-metrics-206">Test Metrics <a
href="#sec:test-metrics-206" class="headerlink"
title="Permalink to this header"><img src="permalink.png"
style="width:0.8em" /></a></h3>
<ol>
<li>After reconnecting to the MQTT server, the EUT transmits an
MQTTConnectRecord within 30 seconds. The EUT includes the MQTTVersion
field set to the correct MQTT version and the subscribed_topic field set
to a Topic that the EUT is subscribed to.</li>
</ol>
</div>
</body>
</html>
