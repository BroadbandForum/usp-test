<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
<head>
  <meta charset="utf-8" />
  <meta name="generator" content="pandoc" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=yes" />
  <meta name="description" content="USP – The User Services Platform: Conformance Test Plan for User Services Platform Agents" />
  <title>BBF – USP – The User Services Platform</title>
  <style>
    code{white-space: pre-wrap;}
    span.smallcaps{font-variant: small-caps;}
    span.underline{text-decoration: underline;}
    div.column{display: inline-block; vertical-align: top; width: 50%;}
    div.hanging-indent{margin-left: 1.5em; text-indent: -1.5em;}
    ul.task-list{list-style: none;}
    .display.math{display: block; text-align: center; margin: 0.5rem auto;}
  </style>
  <link rel="stylesheet" href="bbf.css" />
  <link rel="stylesheet" href="extra.css" />
  <link rel="stylesheet" href="toc.css" />
  <link rel="stylesheet" href="release.css" />
  <!--[if lt IE 9]>
    <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.7.3/html5shiv-printshiv.min.js"></script>
  <![endif]-->
</head>
<body>
<div class="main-content">
<header id="title-block-header">
<h1 class="title">USP – The User Services Platform</h1>
<p class="subtitle">Issue: 1 Amendment 1 <span class="release"></span></p>
<p class="date">Issue Date: January 2022</p>
</header>
<nav id="TOC" role="doc-toc">
<ul>
<li><a href="#sec:executive-summary">Executive Summary <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:purpose">Purpose <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:scope">Scope <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:test-setup">Test Setup <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:test-equipment">Test Equipment <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:test-setup-and-execution">Test Setup and Execution <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:universal-test-metrics">Universal Test Metrics <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:notes-about-test-case-descriptions">Notes about test case descriptions <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:messages-and-path-names">1 Messages and Path Names <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-succeed">1.1 Add message with allow partial false, single object, required parameters succeed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-true-single-object-required-parameters-succeed">1.2 Add message with allow partial true, single object, required parameters succeed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-fail">1.3 Add message with allow partial false, single object, required parameters fail <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-false-single-invalid-object">1.4 Add message with allow partial false, single invalid object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-false-multiple-objects">1.5 Add message with allow partial false, multiple objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-false-multiple-objects-with-an-invalid-object">1.6 Add message with allow partial false, multiple objects with an invalid object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.7 Add message with allow partial false, multiple objects, required parameters fail in single object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-true-required-parameters-fail-invalid-type-single-object">1.8 Add message with allow partial true, required parameters fail, invalid type, single object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-allow-partial-true-required-parameters-fail-multiple-objects">1.9 Add message with allow partial true, required parameters fail, multiple objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:add-message-with-unique-key-addressing-in-path">1.10 Add message with unique key addressing in path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-allow-partial-false-required-parameters-pass">1.11 Set message with allow partial false, required parameters pass <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-allow-partial-true-required-parameters-pass">1.12 Set message with allow partial true, required parameters pass <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-allow-partial-false-multiple-objects">1.13 Set message with allow partial false, multiple objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-allow-partial-false-required-parameters-fail">1.14 Set message with allow partial false, required parameters fail <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.15 Set message with allow partial false, multiple objects, required parameters fail in single object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-allow-partial-true-required-parameter-fails-multiple-objects">1.16 Set message with allow partial true, required parameter fails, multiple objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-allow-partial-true-non-required-parameter-fails-multiple-parameters">1.17 Set message with allow partial true, non-required parameter fails, multiple parameters <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-unique-key-addressing-in-path">1.18 Set message with unique key addressing in path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-pass">1.19 Set message with wildcard search path, allow partial false, required parameters pass <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-fail">1.20 Set message with wildcard search path, allow partial false, required parameters fail <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-wildcard-search-path-allow-partial-true-required-parameters-fail">1.21 Set message with wildcard search path, allow partial true, required parameters fail <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-search-expression-search-path">1.22 Set message with search expression search path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:set-message-with-path-that-matches-no-objects">1.23 Set message with path that matches no objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-false-valid-object-instance">1.24 Delete message with allow partial false, valid object instance <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-false-object-instance-doesnt-exist">1.25 Delete message with allow partial false, object instance doesn’t exist <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-false-invalid-object">1.26 Delete message with allow partial false, invalid object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-false-multiple-objects">1.27 Delete message with allow partial false, multiple objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-false-multiple-objects-invalid-object">1.28 Delete message with allow partial false, multiple objects, invalid object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-true-object-instance-doesnt-exist">1.29 Delete message with allow partial true, object instance doesn’t exist <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-true-invalid-object">1.30 Delete message with allow partial true, invalid object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-true-multiple-objects-invalid-object">1.31 Delete message with allow partial true, multiple objects, invalid object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-allow-partial-true-multiple-objects-object-doesnt-exist">1.32 Delete message with allow partial true, multiple objects, object doesn’t exist <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-unique-key-addressing">1.33 Delete message with unique key addressing <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-wildcard-search-path-valid-objects">1.34 Delete message with wildcard search path, valid objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:delete-message-with-search-expression-search-path">1.35 Delete message with search expression search path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-full-parameter-path">1.36 Get message with full parameter path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-multiple-full-parameter-paths-same-object">1.37 Get message with multiple full parameter paths, same object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-multiple-full-parameter-paths-different-objects">1.38 Get message with multiple full parameter paths, different objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-object-path">1.39 Get message with object path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-object-instance-path">1.40 Get message with object instance path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-invalid-parameter">1.41 Get message with invalid parameter <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-invalid-parameter-and-valid-parameter">1.42 Get message with invalid parameter and valid parameter <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-unique-key-addressing">1.43 Get message using unique key addressing <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-wildcard-search-path-on-full-parameter">1.44 Get message using wildcard search path on full parameter <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-wildcard-search-path-on-object-path">1.45 Get message using wildcard search path on object path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-search-expression-search-path-equivalence">1.46 Get message using search expression search path (equivalence) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-search-expression-search-path-non-equivalence">1.47 Get message using search expression search path (non-equivalence) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-search-expression-search-path-exclusive-greater-comparison">1.48 Get message using search expression search path (exclusive greater comparison) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-search-expression-search-path-exclusive-lesser-comparison">1.49 Get message using search expression search path (exclusive lesser comparison) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-search-expression-search-path-inclusive-greater-comparison">1.50 Get message using search expression search path (inclusive greater comparison) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-using-search-expression-search-path-inclusive-lesser-comparison">1.51 Get message using search expression search path (inclusive lesser comparison) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:notify---subscription-creation-using-value-change">1.52 Notify - Subscription creation using Value Change <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:notify---subscription-deletion-using-value-change">1.53 Notify - Subscription Deletion Using Value Change <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:notification-retry-using-value-change">1.54 Notification Retry using Value Change <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:subscription-expiration-using-value-change">1.55 Subscription Expiration using Value Change <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:notification-retry-expiration-using-value-change">1.56 Notification Retry Expiration using Value Change <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:objectcreation-notification">1.57 ObjectCreation Notification <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:objectdeletion-notification">1.58 ObjectDeletion Notification <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:event-notification-using-periodic">1.59 Event Notification using Periodic! <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:onboardrequest-notification">1.60 OnBoardRequest Notification <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:operate-message-using-reboot-with-send_resp-true">1.61 Operate message using Reboot() with send_resp true <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:operate-message-using-reboot-with-send_resp-false">1.62 Operate message using Reboot() with send_resp false <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:operate-message-using-input-arguments-deprecated-by-1.79">1.63 Operate message using input arguments (DEPRECATED by 1.79) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:asynchronous-operation-with-send_resp-true">1.64 Asynchronous operation with send_resp true <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:asynchronous-operation-with-send_resp-false">1.65 Asynchronous operation with send_resp false <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getinstances-using-a-single-object-first_level_only-true">1.66 GetInstances using a single object, first_level_only true <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getinstances-using-a-single-object-first_level_only-false">1.67 GetInstances using a single object, first_level_only false <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getinstances-with-multiple-objects">1.68 GetInstances with multiple objects <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:deleted"><em>1.69 DELETED</em> <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getinstances-with-wildcard-search-path">1.70 GetInstances with wildcard search path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getinstances-with-search-expression-search-path">1.71 GetInstances with search expression search path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getsupporteddm-using-a-single-object-first_level_only-false-all-options">1.72 GetSupportedDM using a single object, first_level_only false, all options <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-all-options">1.73 GetSupportedDM using a single object, first_level_only true, all options <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-no-options">1.74 GetSupportedDM using a single object, first_level_only true, no options <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getsupporteddm-using-multiple-objects-first_level_only-true-all-options">1.75 GetSupportedDM using multiple objects, first_level_only true, all options <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getsupporteddm-on-root-object-all-options">1.76 GetSupportedDM on root object, all options <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getsupporteddm-on-unsupported-object">1.77 GetSupportedDM on unsupported object <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:removal-of-subscriptions-that-have-no-associated-controller">1.78 Removal of subscriptions that have no associated controller <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:operate-message-using-input-arguments">1.79 Operate message using input arguments <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getsupportedprotocol">1.80 GetSupportedProtocol <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:automatic-unique-key-generation">1.81 Automatic unique key generation <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:get-message-with-unmatched-search-expression">1.82 Get message with unmatched search expression <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:getinstances-message-with-unmatched-search-expression">1.83 GetInstances message with unmatched search expression <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:notification---subscription-using-search-paths">1.84 Notification - Subscription using search paths <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:authentication-and-access-control-test-cases">2 Authentication and Access Control Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:agent-does-not-accept-messages-from-its-own-endpoint-id">2.1 Agent does not accept messages from its own Endpoint ID <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-rejects-messages-that-do-not-contain-its-to_id-in-the-usp-record">2.2 Agent rejects messages that do not contain its to_id in the USP Record <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-does-not-process-messages-without-s-certificate-information---deprecated">2.3 Agent does not process messages without ’s certificate information - DEPRECATED <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-rejects-messages-from-endpoint-ids-that-are-not-in-subjectaltname---deprecated">2.4 Agent rejects messages from Endpoint IDs that are not in subjectAltName - DEPRECATED <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-use-of-self-signed-certificates---deprecated">2.5 Agent use of self-signed certificates - DEPRECATED <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:connecting-without-absolute-time">2.6 Connecting without absolute time <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-ignores-unsigned-or-invalid-record-signatures">2.7 Agent ignores unsigned or invalid Record signatures <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-ignores-invalid-tls-certificate">2.8 Agent ignores invalid TLS certificate <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-the-untrusted-role">2.9 Use of the Untrusted role <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:adding-a-role">2.10 Adding a Role <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---object-creation-allowed">2.11 Permissions - Object Creation Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---object-creation-not-allowed">2.12 Permissions - Object Creation Not Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---object-deletion-allowed">2.13 Permissions - Object Deletion Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---object-deletion-not-allowed">2.14 Permissions - Object Deletion Not Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---parameter-update-allowed">2.15 Permissions - Parameter Update Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---parameter-update-not-allowed">2.16 Permissions - Parameter Update Not Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---operation-allowed">2.17 Permissions - Operation Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---operation-not-allowed">2.18 Permissions - Operation Not Allowed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---value-change-notification-allowed-on-parameter">2.19 Permissions - Value Change Notification Allowed on Parameter <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---value-change-notification-not-allowed-on-parameter">2.20 Permissions - Value Change Notification Not Allowed on Parameter <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:permissions---overlapping-permissions">2.21 Permissions - Overlapping Permissions <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:using-get-when-no-read-permissions-are-available-on-some-parameters">2.22 Using Get when no read permissions are available on some parameters <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:usp-record-test-cases">3 USP Record Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:bad-request-outside-a-session-context">3.1 Bad request outside a session context <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-verifies-non-payload-field-integrity">3.2 Agent Verifies Non-Payload Field Integrity <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-rejects-invalid-signature-starting-a-session-context">3.3 Agent rejects invalid signature starting a session context <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:using-tls-for-usp-record-integrity">3.4 Using TLS for USP Record Integrity <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:failure-to-establish-tls">3.5 Failure to Establish TLS <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-does-not-accept-tls-renegotiation-for-e2e-message-exchange">3.6 Agent does not accept TLS renegotiation for E2E message exchange <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-x.509-certificates">3.7 Use of X.509 Certificates <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:establishing-a-session-context">3.8 Establishing a Session Context <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:receipt-of-a-record-out-of-a-session-context">3.9 Receipt of a Record out of a Session Context <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:session-context-expiration">3.10 Session Context Expiration <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-sequence-id-and-expected-id">3.11 Use of Sequence ID and Expected ID <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:preservation-of-usp-records">3.12 Preservation of USP Records <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-rejects-records-with-different-payload-security-than-the-established-context">3.13 Agent Rejects Records with Different Payload Security than the Established Context <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-retransmit_id">3.14 Use of retransmit_id <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:handling-duplicate-records">3.15 Handling Duplicate Records <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:general-mtp-test-cases">4 General MTP Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:use-of-x.509-certificates-at-the-mtp-layer">4.1 Use of X.509 certificates at the MTP layer <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:coap-test-cases">5 CoAP Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:mapping-a-usp-record-to-a-coap-message">5.1 Mapping a USP Record to a CoAP message <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:usp-records-that-exceed-coap-message-size">5.2 USP Records that exceed CoAP message size <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:successful-coap-exchange">5.3 Successful CoAP exchange <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:failed-coap-exchange---timeout">5.4 Failed CoAP exchange - timeout <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:failed-coap-exchange---invalid-method">5.5 Failed CoAP Exchange - Invalid Method <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:failed-coap-exchange---invalid-content-format">5.6 Failed CoAP Exchange - Invalid Content-Format <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:failed-coap-exchange---invalid-usp-record">5.7 Failed CoAP Exchange - Invalid USP Record <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-dtls">5.8 Use of DTLS <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:stomp-test-cases">6 STOMP Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:support-of-required-profiles">6.1 Support of Required Profiles <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:stomp-session-establishment">6.2 STOMP session establishment <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:stomp-connection-retry">6.3 STOMP Connection Retry <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:successful-usp-message-over-stomp-with-required-headers">6.4 Successful USP message over STOMP with required headers <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:stomp-destination---provided-in-subscribe-dest">6.5 STOMP destination - provided in subscribe-dest <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:stomp-destination---configured-in-usp-data-model">6.6 STOMP destination - configured in USP data model <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:stomp-destination---terminates-unconfigured-session">6.7 STOMP Destination - terminates unconfigured session <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-stomp-heartbeat-mechanism">6.8 Use of STOMP heartbeat mechanism <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:error-handling---unprocessed-record">6.9 Error Handling - Unprocessed Record <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agents-stomp-destination-is-changed">6.10 Agent’s STOMP destination is changed <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:stomp---use-of-tls">6.11 STOMP - Use of TLS <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:websocket-test-cases">7 WebSocket Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:session-establishment">7.1 Session Establishment <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-only-one-session">7.2 Use of only one session <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:agent-session-acceptance-from-controller">7.3 Agent session acceptance from Controller <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:closing-a-websocket-connection">7.4 Closing a WebSocket Connection <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:rejection-of-session-establishment">7.5 Rejection of Session Establishment <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:error-handling---unprocessed-records">7.6 Error Handling - Unprocessed Records <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-ping-and-pong-frames">7.7 Use of Ping and Pong frames <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:websocket-session-retry">7.8 WebSocket Session Retry <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-tls">7.9 Use of TLS <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:discovery-test-cases">8 Discovery Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:dhcp-discovery---agent-request-requirements">8.1 DHCP Discovery - Agent Request Requirements <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:dhcp-discovery---agent-handling-of-received-options">8.2 DHCP Discovery - Agent handling of received options <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:dhcp-discovery---fqdn-leads-to-dns-query">8.3 DHCP Discovery - FQDN Leads to DNS Query <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:mdns">8.4 mDNS <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:mdns-and-message-transfer-protocols">8.5 mDNS and Message Transfer Protocols <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:dns---dns-record-requirements">8.6 DNS - DNS Record Requirements <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:mdns-request-response">8.7 mDNS request response <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:functionality-test-cases">9 Functionality Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:use-of-the-timer-event-deprecated-by-9.11">9.1 Use of the Timer! Event (DEPRECATED by 9.11) <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-device.localagent.addcertificate">9.2 Use of Device.LocalAgent.AddCertificate() <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:upgraded-the-agents-firmware---autoactivate-enabled">9.3 Upgraded the Agent’s Firmware - Autoactivate enabled <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:upgrading-the-agents-firmware---using-timewindow-immediate">9.4 Upgrading the Agent’s Firmware - Using TimeWindow, Immediate <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:upgrading-the-agents-firmware---using-timewindow-anytime">9.5 Upgrading the Agent’s Firmware - Using TimeWindow, AnyTime <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:upgrading-the-agents-firmware---validated-firmware">9.6 Upgrading the Agent’s Firmware - Validated Firmware <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:upgrading-the-agents-firmware---download-to-active-bank">9.7 Upgrading the Agent’s Firmware - Download to Active Bank <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:upgrading-the-agents-firmware---cancelling-a-request-using-the-cancel-command">9.8 Upgrading the Agent’s Firmware - Cancelling a request using the Cancel() command <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:adding-a-new-controller---onboardrequest">9.9 Adding a New Controller - OnBoardRequest <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-the-boot-event-and-bootparameters">9.10 Use of the Boot! event and BootParameters <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-of-the-timer-event">9.11 Use of the Timer! Event <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
<li><a href="#sec:bulk-data-collection-test-cases">10 Bulk Data Collection Test Cases <span><img src="permalink.png" style="width:0.8em" /></span></a>
<ul>
<li><a href="#sec:use-bulkdata-collection-using-http-and-json">10.1 Use BulkData collection using HTTP and JSON <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-using-https-and-json">10.2 Use BulkData collection using HTTPS and JSON <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-using-http-and-csv">10.3 Use BulkData collection using HTTP and CSV <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-using-https-and-csv">10.4 Use BulkData collection using HTTPS and CSV <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-using-http-with-uri-parameters">10.5 Use BulkData collection using HTTP with URI Parameters <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-using-https-with-uri-parameters">10.6 Use BulkData collection using HTTPS with URI Parameters <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:bulkdata-collection-retry-mechanism-over-http">10.7 BulkData collection retry mechanism over HTTP <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-using-http-with-wildcard-parameter">10.8 Use BulkData collection using HTTP with wildcard parameter <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-using-http-with-object-path">10.9 Use BulkData collection using HTTP with Object Path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-push-event">10.10 Use BulkData collection Push event <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-push-event-with-wildcard-path">10.11 Use BulkData collection Push event with Wildcard path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
<li><a href="#sec:use-bulkdata-collection-push-event-with-object-path">10.12 Use BulkData collection Push event with Object path <span><img src="permalink.png" style="width:0.8em" /></span></a></li>
</ul></li>
</ul>
</nav>
<h3 class="unnumbered unlisted" id="list-of-figures">List of Figures <a href="#list-of-figures" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><a href="#fig:basic-test-setup">Basic Test Setup</a></li>
</ol>
<h3 class="unnumbered unlisted" id="list-of-tables">List of Tables <a href="#list-of-tables" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
</ol>
<h3 class="unnumbered unlisted new-page" id="sec:notice">Notice <a href="#sec:notice" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The Broadband Forum is a non-profit corporation organized to create guidelines for broadband network system development and deployment. This Test Plan is owned and copyrighted by the Broadband Forum, and portions of this Test Plan may be owned and/or copyrighted by Broadband Forum members.</p>
<h3 class="unnumbered unlisted" id="sec:intellectual-property">Intellectual Property <a href="#sec:intellectual-property" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Recipients of this document are requested to submit, with their comments, notification of any relevant patent claims or other intellectual property rights of which they may be aware that might be infringed by any implementation of this Test Plan, and to provide supporting documentation.</p>
<h3 class="unnumbered unlisted" id="sec:terms-of-use">Terms of Use <a href="#sec:terms-of-use" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Recipients of this document may use it (a) for internal review and study purposes, (b) to provide to the Broadband Forum the comments and notification requested in the preceding paragraph, and (c) if the Recipient is a Broadband Forum member, to implement the Test Plan in a product or service made commercially available. Any other use of this Test Plan is expressly prohibited without the prior written consent of the Broadband Forum.</p>
<p>THIS TEST PLAN IS BEING OFFERED WITHOUT ANY WARRANTY WHATSOEVER, AND IN PARTICULAR, ANY WARRANTY OF NONINFRINGEMENT AND ANY IMPLIED WARRANTIES ARE EXPRESSLY DISCLAIMED. ANY USE OF THIS TEST PLAN SHALL BE MADE ENTIRELY AT THE USER’S OR IMPLEMENTER’S OWN RISK, AND NEITHER THE FORUM, NOR ANY OF ITS MEMBERS OR SUBMITTERS, SHALL HAVE ANY LIABILITY WHATSOEVER TO ANY USER, IMPLEMENTER OR THIRD PARTY FOR ANY DAMAGES OF ANY NATURE WHATSOEVER, DIRECTLY OR INDIRECTLY, ARISING FROM THE USE OF THIS TEST PLAN, INCLUDING BUT NOT LIMITED TO, ANY CONSEQUENTIAL, SPECIAL, PUNITIVE, INCIDENTAL AND INDIRECT DAMAGES.</p>
<p>All copies of this Test Plan (or any portion hereof) must include the notices, legends and other provisions set forth on this page.</p>
<div class="note">
<p>© 2022, The Broadband Forum. All rights reserved. This Broadband Forum document (TP-469) specifies the Test Plan on which is based the &lt;BBF.NNN&gt; Certification Program for &lt;type of product&gt; products. Through an open selection process, the Broadband Forum entered into an agreement with one or more independent Test Agencies to offer commercial testing services against this Test Plan and to confirm results to the Broadband Forum in connection with the Forum’s delivery of &lt;BBF.NNN&gt; Certification. Offering Certification testing services against this Test Plan is reserved to the Test Agencies duly authorized by the Broadband Forum. Broadband Forum members can independently test against TP-469, but may only produce limited reports which only detail where a given product has failed a test case.</p>
<p>NOTE: The right to display a Broadband Forum Certification Logo may only be granted by the Broadband Forum, and that right is available only to Broadband Forum members that have successfully passed certification testing by a duly authorized Test Agency. Further details on the Broadband Forum Certification Programs can be found at <a href="http://www.broadband-forum.org">http://www.broadband-forum.org</a>.</p>
</div>
<div data-bbftable="bbfRevisionHistory">

</div>
<h3 class="unnumbered unlisted new-page" id="sec:bbfissue-history-1">Issue History <a href="#sec:bbfissue-history-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<div data-bbftable="uspRevisionHistory">
<table style="width:98%;">
<colgroup>
<col style="width: 17%" />
<col style="width: 81%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Issue Number</th>
<th style="text-align: left;">Changes</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;">Release 1.0</td>
<td style="text-align: left;"><ul>
<li>First release of this test plan, containing test cases for basic compliance with TR-369/USP.</li>
</ul></td>
</tr>
<tr class="even even">
<td style="text-align: left;">Release 1.0.1</td>
<td style="text-align: left;"><ul>
<li>Deprecated test 7.3</li>
<li>Added flag to the features list to indicate which features are “not-in-force” and not yet available for certification</li>
<li>Various procedure and metric fixes</li>
</ul></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">Release 1.0.2</td>
<td style="text-align: left;"><ul>
<li>Both mandatory and conditional mandatory tests can use alternate objects or parameters if available</li>
<li>Updated features and requirements</li>
<li>Altered test setup of 1.50 to include three objects</li>
<li>Fixed metrics of 1.25 to use new DeleteResp logic</li>
<li>Fixed tests 1.16 and 1.21 to use the correct error codes</li>
<li>Fixed test 1.20 to only check for at least one error</li>
<li>Fixed test 4.1 to include “OnBoardRequest()” as a conditional requirement</li>
<li>Fixed test 1.32 to use new DeleteResp logic</li>
<li>Fixed tests 1.73, 1.74, 1.75 to use new GetSupportedDM first_level_only logic</li>
<li>Fixed error code metric of test 1.8</li>
</ul></td>
</tr>
<tr class="even even">
<td style="text-align: left;">Release 1.0.3</td>
<td style="text-align: left;"><ul>
<li>The metrics of test 1.9 now do not imply order</li>
<li>Test 1.22 metric now requires “at least one” element rather than a “single” element</li>
<li>Renamed test 1.23</li>
<li>Fixed the metric of test 1.38 to include the instance identifier of the path</li>
<li>Reworded the purpose of test 1.41</li>
<li>Clarified the test setup of tests 1.66 and 1.67</li>
<li>Fixed a typo in test 6.1 metrics (ServerRetryInitialMultiplier to ServerRetryIntervalMultiplier)</li>
<li>Fixes other typographical errors</li>
</ul></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">Release 1.1</td>
<td style="text-align: left;"><ul>
<li>Adds test 1.78 Removal of subscriptions that have no associated controller</li>
<li>Adds test 1.80 GetSupportedProtocol</li>
<li>Adds language reinforcing required tests based on supported features</li>
<li>Adds test case 1.81 to test automatic unique key generation by the Agent</li>
<li>Adds negative test metrics to several Set and Delete tests to validate that operations did not occur upon error (1.7, 1.8, 1.14, 1.15, 1.20, 1.24, 1.27, 1.28, 1.31, 1.32, 1.33, 1.34, 1.35)</li>
<li>Adds section 10 for bulk data collection tests</li>
<li>Adds tests 1.82 and 1.83 to validate Get and GetInstances using expressions that match zero objects</li>
<li>Adds test 1.84 to exercise the use of search paths in Subscriptions</li>
<li>Defines deprecation for tests</li>
<li>Deprecates test 1.63 in favor of test 1.79</li>
<li>Deprecates test 9.1 in favor of test 9.11</li>
<li>Deprecates tests 2.3, 2.4, and 2.5</li>
<li>Completely deletes test 1.69</li>
<li>Updates functionality tag on test 1.71 to “supports at least one multi-instance object”</li>
<li>Clarifies the definition of an empty oper_success element in test 1.32</li>
<li>Rewrites test 2.20 to accomplish its original intent</li>
<li>Changes test 3.6 to check that an Agent does not accept TLS renegotiation</li>
<li>Changes test 2.15 and 2.16 to use “Enable” rather than “Alias” as a test parameter</li>
<li>Simplifies test 4.1</li>
<li>Various typographical fixes, some in test procedure path names</li>
<li>Normalizes all protobuf examples in test procedures</li>
<li>Fixes test 2.20 to use the correct permissions</li>
<li>Fixes test 1.47 to use the correct operator</li>
<li>Eases the requirements of test 9.7 for implementation flexibility</li>
<li>Removes the concept of “not-in-force” test cases and features</li>
<li>Updates tests 1.59, 1.84 to use allow_partial false”</li>
<li>Allows tests 1.3, 1.7, 1.8, 1.21 to use only an invalid parameter value (not an invalid parameter) and accept 7012 as an acceptable error code</li>
</ul></td>
</tr>
</tbody>
</table>
</div>
<p>Comments or questions about this Broadband Forum Test Plan should be directed to <a href="mailto:info@broadband-forum.org" class="email">info@broadband-forum.org</a>.</p>
<div data-bbflist="bbfEditors">

</div>
<h3 class="unnumbered unlisted" id="sec:editors-1">Editors <a href="#sec:editors-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<div data-bbftable="uspEditors">
<table style="width:98%;">
<colgroup>
<col style="width: 22%" />
<col style="width: 16%" />
<col style="width: 25%" />
<col style="width: 35%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Name</th>
<th style="text-align: left;">Company</th>
<th style="text-align: left;">Email</th>
<th style="text-align: left;">Role</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;">Jason Walls</td>
<td style="text-align: left;">QA Cafe, LLC</td>
<td style="text-align: left;">jason@qacafe.com</td>
<td style="text-align: left;">Editor</td>
</tr>
</tbody>
</table>
</div>
<div data-bbflist="bbfWADs">

</div>
<h3 class="unnumbered unlisted" id="sec:bbfworkarea-work-area-directors-1">Work Area Directors <a href="#sec:bbfworkarea-work-area-directors-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<div data-bbftable="uspWADs">
<table style="width:98%;">
<colgroup>
<col style="width: 22%" />
<col style="width: 16%" />
<col style="width: 25%" />
<col style="width: 35%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Name</th>
<th style="text-align: left;">Company</th>
<th style="text-align: left;">Email</th>
<th style="text-align: left;">Role</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;">Jason Walls</td>
<td style="text-align: left;">QA Cafe, LLC</td>
<td style="text-align: left;">jason@qacafe.com</td>
<td style="text-align: left;">Broadband User Services Work Area Director</td>
</tr>
<tr class="even even">
<td style="text-align: left;">John Blackford</td>
<td style="text-align: left;">CommScope</td>
<td style="text-align: left;">john.blackford@commscope.com</td>
<td style="text-align: left;">Broadband User Services Work Area Director</td>
</tr>
</tbody>
</table>
</div>
<div data-bbflist="bbfPSLs">

</div>
<div data-bbftable="uspPSLs">

</div>
<div data-bbftable="uspAcknowledgments">

</div>
<div data-bbftable="uspRevisionHistory">

</div>
<div data-bbftable="uspEditors">

</div>
<div data-bbftable="uspWADs">

</div>
<h2 id="sec:executive-summary">Executive Summary <a href="#sec:executive-summary" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>Testing is crucial to promoting the interoperability and adoption of standards. To meet this, the Broadband Forum regularly produces test suites that validate the conformance of implementations of their standards. This specification defines the test setup, test procedures, and test metrics to validate Agent and implementations of the <a href="https://usp.technology">User Services Platform (USP)</a>, published as BBF TR-369.</p>
<p>This test plan is used to validate USP Agent implementations for the <a href="https://www.broadband-forum.org/testing-and-certification-programs/bbf-369-usp-certification">BBF.369 USP Agent Certification Program</a>. Companies looking to certify their products, or to acquire certified products, can find full details on the program, approved test tools and labs, and the list of certified products <a href="https://www.broadband-forum.org/testing-and-certification-programs/bbf-369-usp-certification">here</a>.</p>
<h2 id="sec:purpose">Purpose <a href="#sec:purpose" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>This purpose of this document is to provide a definitive guide for validating the compliance of USP Agents in accordance with the specification.</p>
<h2 id="sec:scope">Scope <a href="#sec:scope" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>The tests defined below are intended to validate the specific requirements outlined in the USP specification, as well as those requirements defined in the Device:2 Data Model for USP Agents for objects, parameters, commands, and events necessary for the operation of USP.</p>
<h1 id="sec:test-setup">Test Setup <a href="#sec:test-setup" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:test-equipment">Test Equipment <a href="#sec:test-equipment" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>There are a number of components necessary to the implementation of this test suite.</p>
<p><strong>Traffic Generator</strong> - One or more traffic generators are necessary in order to transmit the required traffic to execute the test procedures. Traffic generation can be done with script-able, real implementations of DHCP servers, mDNS endpoints, and USP endpoints (for example), or can be simulated through other means. For tests that exercise the presence of multiple Controllers or agents, the traffic generators can each represent a single endpoint, or multiple endpoints, depending on its capabilities, as long as the traffic can be differentiated by the Endpoint Under Test.</p>
<p><strong>Analyzer</strong> - One or more traffic analyzers are necessary to confirm the receipt of messages and evaluate the test metrics outlined in the tests below. This analyzer may exist at the traffic generator source, in-line, or accessed through a replicated interface that will push traffic to the analyzer.</p>
<p><strong>Test Network</strong> - The tests below require IP layer connectivity between the Traffic Generator and the Endpoint Under Test (EUT). Steps SHOULD be taken to unsure that the underlying network does not interfere with the test procedures or test metrics.</p>
<h2 id="sec:test-setup-and-execution">Test Setup and Execution <a href="#sec:test-setup-and-execution" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:basic-test-setup">Basic Test Setup <a href="#sec:basic-test-setup" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<figure>
<img src="././figure-1.png" id="fig:basic-test-setup" alt="Figure 1: Basic Test Setup " /><figcaption aria-hidden="true">Figure 1: Basic Test Setup <a href="#fig:basic-test-setup" class="headerlink" title="Permalink to this figure"><img src="permalink.png" style="width:0.8em" /></a></figcaption>
</figure>
<h3 id="sec:functionality-tags">Functionality Tags <a href="#sec:functionality-tags" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>USP contains both required and optional functionality. To ensure that all different classes of device can exercise this test suite, tests are marked as “Mandatory”, “Conditional Mandatory”, or “Deprecated”. This is indicated in each individual test case under the “Functionality Tag”.</p>
<p>Tests that are “Deprecated” represent tests that were removed or replaced with newer tests.</p>
<h4 id="sec:alternate-parameters-objects-commands-and-events-in-test-procedures">Alternate parameters, objects, commands, and events in test procedures <a href="#sec:alternate-parameters-objects-commands-and-events-in-test-procedures" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h4>
<p>For tests that make use of particular parameter, object, command, event to validate the test metrics, a different subject can be substituted that meets the needs of the test. For example, if an EUT does not support the Reboot:1 profile, another synchronous operation can be substituted for tests 1.61 and 1.62.</p>
<h3 id="sec:endpoint-requirements-and-metadata-collection">Endpoint Requirements and Metadata Collection <a href="#sec:endpoint-requirements-and-metadata-collection" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<h4 id="sec:required-profiles">Required Profiles <a href="#sec:required-profiles" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h4>
<p>The Device:2 Data Model for USP Agents outlines several profiles that contain data model objects, parameters, commands, and events necessary to the operation of USP. In order to be able to perform the tests below, a USP Agent MUST implement, at minimum, the following profiles:</p>
<ul>
<li><p>LocalAgent:1</p></li>
<li><p>Subscriptions:1</p></li>
</ul>
<p>Conditional mandatory tests may require the implementation of additional profiles.</p>
<h4 id="sec:test-cases-required-by-profile-and-option-support">Test Cases Required by Profile and Option Support <a href="#sec:test-cases-required-by-profile-and-option-support" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h4>
<p>Those seeking to utilize this test plan can use the following feature IDs to specify their support for conditional mandatory test cases. Since the types of endpoints under test may vary widely in use cases and complexity, this list is meant to act as a guide to ensure that many kinds of products can achieve compliance. However, when determining which tests must be passed to achieve compliance, testers must know that:</p>
<p><strong>An Endpoint Under Test (EUT) MUST complete all Mandatory test cases, and MUST complete all Conditional Mandatory test cases for ALL features supported by the EUT (see table below).</strong></p>
<table>
<colgroup>
<col style="width: 23%" />
<col style="width: 38%" />
<col style="width: 26%" />
<col style="width: 13%" />
</colgroup>
<thead>
<tr class="header header">
<th style="text-align: left;">Feature ID</th>
<th style="text-align: left;">Feature name</th>
<th style="text-align: left;">Test Cases</th>
<th style="text-align: left;">Notes</th>
</tr>
</thead>
<tbody>
<tr class="odd odd">
<td style="text-align: left;">1</td>
<td style="text-align: left;">At least one command</td>
<td style="text-align: left;">1.61, 1.62</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">2</td>
<td style="text-align: left;">At least one command with input arguments</td>
<td style="text-align: left;">1.63</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">3</td>
<td style="text-align: left;">At least one asynchronous command</td>
<td style="text-align: left;">1.64, 1.65</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">4</td>
<td style="text-align: left;">Subscription.{i}.NotifExpiration parameter</td>
<td style="text-align: left;">1.56</td>
<td style="text-align: left;">An extension to the Subscription:1 profile</td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">5</td>
<td style="text-align: left;">Controller:1 profile</td>
<td style="text-align: left;">1.59</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">6</td>
<td style="text-align: left;">Device.LocalAgent.Subscription.{i}.TimeToLive</td>
<td style="text-align: left;">1.55</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">7</td>
<td style="text-align: left;">Controller:1 profile (writeable)</td>
<td style="text-align: left;">1.78, 9.9</td>
<td style="text-align: left;">EUT allows the creation of Device.LocalAgent.Controller.{i}. objects</td>
</tr>
<tr class="even even">
<td style="text-align: left;">8</td>
<td style="text-align: left;">Device.LocalAgent.Controller.{i}.SendOnBoardRequest()</td>
<td style="text-align: left;">1.60, 4.1, 9.9</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">9</td>
<td style="text-align: left;">Device.ScheduleTimer()</td>
<td style="text-align: left;">1.63, 1.79, 9.1</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">10</td>
<td style="text-align: left;">Reboot:1 profile</td>
<td style="text-align: left;">1.61, 1.62, 9.10</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">11</td>
<td style="text-align: left;">TraceRoute:1 profile</td>
<td style="text-align: left;">1.64, 1.65</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">12</td>
<td style="text-align: left;">ControllerTrust:1 profile</td>
<td style="text-align: left;">2.9, 2.10</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">13</td>
<td style="text-align: left;">ControllerTrust:1 profile (writeable)</td>
<td style="text-align: left;">2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20, 2.21, 2.22</td>
<td style="text-align: left;">Additionally supports at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.</td>
</tr>
<tr class="even even">
<td style="text-align: left;">14</td>
<td style="text-align: left;">Self-signed controller certificates</td>
<td style="text-align: left;">TBD</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">15</td>
<td style="text-align: left;">TLS at the MTP Layer</td>
<td style="text-align: left;">4.1</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">16</td>
<td style="text-align: left;">CoAP MTP</td>
<td style="text-align: left;">5.*, 8.5</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">17</td>
<td style="text-align: left;">STOMP MTP</td>
<td style="text-align: left;">6.*</td>
<td style="text-align: left;">Excludes 6.8 unless option 18 is supported</td>
</tr>
<tr class="even even">
<td style="text-align: left;">18</td>
<td style="text-align: left;">STOMPHeartbeat:1 profile</td>
<td style="text-align: left;">6.8</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">19</td>
<td style="text-align: left;">WebSocket MTP</td>
<td style="text-align: left;">7.*</td>
<td style="text-align: left;">Excludes 7.3 unless option 20 is supported</td>
</tr>
<tr class="even even">
<td style="text-align: left;">20</td>
<td style="text-align: left;">TR-369 requirement R-WS.6</td>
<td style="text-align: left;">7.3</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">21</td>
<td style="text-align: left;">Discovery via DHCP Options</td>
<td style="text-align: left;">8.1, 8.2, 8.3</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">22</td>
<td style="text-align: left;">Discovery via mDNS</td>
<td style="text-align: left;">8.4, 8.5, 8.6, 8.7</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">23</td>
<td style="text-align: left;">Secure Message Exchange (TLS for USP Record Integrity)</td>
<td style="text-align: left;">3.2, 3.3, 3.4, 3.5, 3.6, 3.7</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">24</td>
<td style="text-align: left;">USP session context</td>
<td style="text-align: left;">2.6, 2.7, 2.8, 3.8, 3.9, 3.10, 3.11, 3.12, 3.13, 3.14, 3.15</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">25</td>
<td style="text-align: left;">Device.LocalAgent.AddCertificate()</td>
<td style="text-align: left;">9.2</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">26</td>
<td style="text-align: left;">Firmware:1 profile</td>
<td style="text-align: left;">9.3, 9.5, 9.6, 9.7</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">27</td>
<td style="text-align: left;">Firmware:1 profile (Activate)</td>
<td style="text-align: left;">9.4, 9.5</td>
<td style="text-align: left;">Supports Firmware:1 profile and additionally supports the Activate() operation</td>
</tr>
<tr class="even even">
<td style="text-align: left;">28</td>
<td style="text-align: left;">Device.LocalAgent.Request.{i}.Cancel()</td>
<td style="text-align: left;">9.8</td>
<td style="text-align: left;">Applies only if option 26 is supported</td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">29</td>
<td style="text-align: left;">UntrustedRole disabled</td>
<td style="text-align: left;">TBD</td>
<td style="text-align: left;">The use of UntrustedRole must be either unsupported, or capable of being disabled, to run this test</td>
</tr>
<tr class="even even">
<td style="text-align: left;">30</td>
<td style="text-align: left;">Device.DeviceInfo.BootFirmwareImage</td>
<td style="text-align: left;">9.10</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">31</td>
<td style="text-align: left;">The product supports least one nested multi-instance object</td>
<td style="text-align: left;">1.10, 1.71</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">32</td>
<td style="text-align: left;">HTTP bulk data collection with JSON encoding</td>
<td style="text-align: left;">10.1, 10.2, 10.5, 10.6, 10.7, 10.8, 10.9</td>
<td style="text-align: left;"></td>
</tr>
<tr class="odd odd">
<td style="text-align: left;">33</td>
<td style="text-align: left;">HTTP bulk data collection with CSV encoding</td>
<td style="text-align: left;">10.3, 10.4, 10.5, 10.6, 10.7, 10.8, 10.9</td>
<td style="text-align: left;"></td>
</tr>
<tr class="even even">
<td style="text-align: left;">34</td>
<td style="text-align: left;">Bulk data collection via the Push! Event</td>
<td style="text-align: left;">10.10, 10.11, 10.12</td>
<td style="text-align: left;"></td>
</tr>
</tbody>
</table>
<h4 id="sec:elements-specified-in-the-test-procedure">Elements Specified in the Test Procedure <a href="#sec:elements-specified-in-the-test-procedure" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h4>
<p>Many of the mandatory and conditional mandatory tests specify the objects, parameters, or operations to be used for the test. If the specific elements are not supported by the EUT, other elements that will satisfy the test criteria MAY be used instead. If so, the test report MUST include the alternate elements used.</p>
<h4 id="sec:required-eut-information-and-resources">Required EUT Information and Resources <a href="#sec:required-eut-information-and-resources" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h4>
<p>In order to be able to perform the tests and create a report of the results, the following must be provided concerning the Endpoint Under Test:</p>
<ol>
<li>The software and/or firmware version of the EUT.</li>
<li>The number of firmware banks available if the Firmware:1 profile is supported.</li>
<li>A list of the feature IDs supported.</li>
<li>If the service elements specified in the tests are not supported, provide a list of alternate elements used in the testing.</li>
</ol>
<h3 id="sec:clean-up-procedures">Clean-Up Procedures <a href="#sec:clean-up-procedures" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>A number of tests that make changes to the EUT have procedures that are not part of the validation portion of the test case. These procedures are intended to “clean up” any changes that were made during the test to ensure that the EUT is in a relatively known state from one test case to the next. The most obvious example is using the Delete message to remove any objects that were added as part of the procedure, but the clean-up procedure may include any number of steps.</p>
<h2 id="sec:universal-test-metrics">Universal Test Metrics <a href="#sec:universal-test-metrics" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>Due to the nature of performative testing of protocol messages, certain requirements in the specification are effectively tested every time. Writing additional test cases for these metrics is unnecessary, but the requirements must still be met by endpoint implementations.</p>
<ol>
<li><p>The Endpoint ID of the Endpoint Under Test is valid (ARC.3, ARC.4, ARC.5, and the requirements outlined in the <a href="http://usp.technology/specification/architecture/#endpoint_identifier">authority-scheme table</a>).</p></li>
<li><p>The USP records and USP messages of the Endpoint Under Test are valid according to the usp-record.proto and usp-msg.proto schemas (ENC.0, ENC.1).</p></li>
<li><p>The Path Names and Search Paths used in messages sent by the Endpoint Under Test are valid according to <a href="http://usp.technology/specification/architecture/#data_model_path_grammar">Data Model Path Grammar</a> and TR-106 (ARC.7).</p></li>
<li><p>Path Names in messages originating from the EUT use instance number addressing (R-MSG.3).</p></li>
</ol>
<h2 id="sec:notes-about-test-case-descriptions">Notes about test case descriptions <a href="#sec:notes-about-test-case-descriptions" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>Each of the test cases below have the following sections:</p>
<p><strong>Purpose</strong> - The purpose describes the reasoning for the test case, based on the normative requirements defined in USP.</p>
<p><strong>Functionality Tag</strong> - The functionality tag indicates whether the test is mandatory or conditional mandatory. If it is the latter, this section will list any additional Device:2 profiles necessary to the performance of the test case.</p>
<p><strong>Test Setup</strong> - The test setup section indicates any special prior conditions that must be configured before performing the test.</p>
<p><strong>Test Procedure</strong> - The procedure indicates the steps, in order, taken to perform the test.</p>
<p><strong>Test Metrics</strong> - The metrics indicate the required behavior that must be observed to consider the test passed.</p>
<h3 id="sec:use-of-examples">Use of examples <a href="#sec:use-of-examples" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The test setup, procedure, and metrics in each test case may contain examples of the data to be sent to or received from the EUT. In these examples, elements that are to be filled with a known value dependent on the protocol’s behavior are indicated with greater-than/less-than brackets (&lt;for example&gt;), to indicate a variable. These examples should not be taken literally.</p>
<h1 id="sec:messages-and-path-names">1 Messages and Path Names <a href="#sec:messages-and-path-names" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:add-message-with-allow-partial-false-single-object-required-parameters-succeed">1.1 Add message with allow partial false, single object, required parameters succeed <a href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-succeed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-1">Purpose <a href="#sec:purpose-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to false, and all required parameters to be set upon Object Creation succeed.</p>
<h3 id="sec:functionality-tag">Functionality Tag <a href="#sec:functionality-tag" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-1">Test Setup <a href="#sec:test-setup-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure">Test Procedure <a href="#sec:test-procedure" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add1&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
       }
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp</p></li>
</ol>
<h3 id="sec:test-metrics">Test Metrics <a href="#sec:test-metrics" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends an AddResp.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains no parameter errors and 3 elements in the unique key map: Alias, Recipient, and ID. Alternatively, the OperationSuccess contains 2 elements in the unique key map if the Alias parameter is not supported: Recipient, and ID.</p></li>
<li><p>The EUT creates the Subscription object.</p></li>
<li><p>The Subscription object’s values match the values set in the param_settings element.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-true-single-object-required-parameters-succeed">1.2 Add message with allow partial true, single object, required parameters succeed <a href="#sec:add-message-with-allow-partial-true-single-object-required-parameters-succeed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-2">Purpose <a href="#sec:purpose-2" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to true, and all required parameters to be set upon Object Creation succeed.</p>
<h3 id="sec:functionality-tag-1">Functionality Tag <a href="#sec:functionality-tag-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-2">Test Setup <a href="#sec:test-setup-2" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-1">Test Procedure <a href="#sec:test-procedure-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: true
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add2&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp</p></li>
</ol>
<h3 id="sec:test-metrics-1">Test Metrics <a href="#sec:test-metrics-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s AddResp is valid.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an OperationStatus of OperationSuccess. The OperationSuccess contains no parameter errors and 3 elements in the unique key map: Alias, Recipient, and ID. Alternatively, the OperationSuccess contains 2 elements in the unique key map if the Alias parameter is not supported: Recipient, and ID.</p></li>
<li><p>The EUT creates the Subscription object.</p></li>
<li><p>The Subscription object’s values match the values set in the param_settings element.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-false-single-object-required-parameters-fail">1.3 Add message with allow partial false, single object, required parameters fail <a href="#sec:add-message-with-allow-partial-false-single-object-required-parameters-fail" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-3">Purpose <a href="#sec:purpose-3" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to false, and at least one required parameter fails, and only a single object is set.</p>
<h3 id="sec:functionality-tag-2">Functionality Tag <a href="#sec:functionality-tag-2" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-3">Test Setup <a href="#sec:test-setup-3" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-2">Test Procedure <a href="#sec:test-procedure-2" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;InvalidValue&#39;
           required: true
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add3&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
</ol>
<h3 id="sec:test-metrics-2">Test Metrics <a href="#sec:test-metrics-2" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an err_code of 7004, ‘Invalid Arguments’, with the param_errs element containing a single error with a param_path that indicates the Enable parameter, and an err_code of ‘7011’ (Invalid Type) or ‘7012’ (Invalid Value).</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-false-single-invalid-object">1.4 Add message with allow partial false, single invalid object <a href="#sec:add-message-with-allow-partial-false-single-invalid-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-4">Purpose <a href="#sec:purpose-4" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to false, and a single invalid object is set.</p>
<h3 id="sec:functionality-tag-3">Functionality Tag <a href="#sec:functionality-tag-3" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-4">Test Setup <a href="#sec:test-setup-4" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-3">Test Procedure <a href="#sec:test-procedure-3" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.InvalidObject.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add3&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
</ol>
<h3 id="sec:test-metrics-3">Test Metrics <a href="#sec:test-metrics-3" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an err_code of 7004, ‘Invalid Arguments’, with the param_errs element containing a single error with a param_path of ‘Device.LocalAgent.InvalidObject.’, and an err_code of 7026, ‘Invalid Path’.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-false-multiple-objects">1.5 Add message with allow partial false, multiple objects <a href="#sec:add-message-with-allow-partial-false-multiple-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-5">Purpose <a href="#sec:purpose-5" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to false, multiple objects are attempted, and all required parameters to be set upon Object Creation succeed.</p>
<h3 id="sec:functionality-tag-4">Functionality Tag <a href="#sec:functionality-tag-4" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-5">Test Setup <a href="#sec:test-setup-5" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-4">Test Procedure <a href="#sec:test-procedure-4" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add41&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add42&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;}
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.EndpointID&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 1&gt;.&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 2&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following structure:</p></li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
  }
  body {
    request {
      delete {
        allow_partial: false
        obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 1&gt;.&#39;
        obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 2&gt;.&#39;
      }
    }
  }</code></pre>
<ol>
<li>Allow the EUT to send a DeleteResp.</li>
</ol>
<h3 id="sec:test-metrics-4">Test Metrics <a href="#sec:test-metrics-4" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s AddResp is valid.</p></li>
<li><p>The AddResp contains two CreatedObjectResults that each have an OperationStatus of OperationSuccess. The OperationSuccess elements contains no parameter errors and 3 elements in the unique key map: Alias, Recipient, and ID. Alternatively, the OperationSuccess contains 2 elements in the unique key map if the Alias parameter is not supported: Recipient, and ID.</p></li>
<li><p>The EUT creates the Subscription objects.</p></li>
<li><p>The first Subscription object’s values match the values set in the param_settings element.</p></li>
<li><p>The second Subscription object’s values match the values set in the param_settings element.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-false-multiple-objects-with-an-invalid-object">1.6 Add message with allow partial false, multiple objects with an invalid object <a href="#sec:add-message-with-allow-partial-false-multiple-objects-with-an-invalid-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-6">Purpose <a href="#sec:purpose-6" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to false, multiple objects are attempted, and one of the objects are invalid.</p>
<h3 id="sec:functionality-tag-5">Functionality Tag <a href="#sec:functionality-tag-5" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-6">Test Setup <a href="#sec:test-setup-6" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-5">Test Procedure <a href="#sec:test-procedure-5" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add51&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.InvalidObject.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add52&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.EndpointID&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
</ol>
<h3 id="sec:test-metrics-5">Test Metrics <a href="#sec:test-metrics-5" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an err_code of 7004, ‘Invalid Arguments’, with the param_errs element containing a single error with a param_path of ‘Device.LocalAgent.InvalidObject.’, and an err_code of 7026, ‘Invalid Path’.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.7 Add message with allow partial false, multiple objects, required parameters fail in single object <a href="#sec:add-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-7">Purpose <a href="#sec:purpose-7" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to false, and at least one required parameter fails in one of multiple objects.</p>
<h3 id="sec:functionality-tag-6">Functionality Tag <a href="#sec:functionality-tag-6" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-7">Test Setup <a href="#sec:test-setup-7" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-6">Test Procedure <a href="#sec:test-procedure-6" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;InvalidValue&#39;
           required: true
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add61&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;true&#39;
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add62&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with the request path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-6">Test Metrics <a href="#sec:test-metrics-6" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an Error message.</p></li>
<li><p>The Error message contains an err_code of 7004, ‘Invalid arguments’, with the param_errs element containing a single error with a param_path that indicates the Enable parameter, and an err_code of ‘7011’ (Invalid Type) or ‘7012’ (Invalid Value).</p></li>
<li><p>The GetResp from the EUT does not contain a Subscription instance with ID <code>add61</code> or <code>add62</code>.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-true-required-parameters-fail-invalid-type-single-object">1.8 Add message with allow partial true, required parameters fail, invalid type, single object <a href="#sec:add-message-with-allow-partial-true-required-parameters-fail-invalid-type-single-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-8">Purpose <a href="#sec:purpose-8" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to true, and at least one required parameter fails (with an invalid value) in a single object.</p>
<h3 id="sec:functionality-tag-7">Functionality Tag <a href="#sec:functionality-tag-7" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-8">Test Setup <a href="#sec:test-setup-8" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-7">Test Procedure <a href="#sec:test-procedure-7" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: true
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
           param: &#39;Enable&#39;
           value: &#39;InvalidValue&#39;
           required: true
         }
        param_settings {
           param: &#39;ID&#39;
           value: &#39;add7&#39;
         }
        param_settings {
           param: &#39;NotifType&#39;
           value: &#39;ValueChange&#39;
         }
        param_settings {
           param: &#39;ReferenceList&#39;
           value: &#39;Device.LocalAgent.SoftwareVersion&#39;
           required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Send a Get message to the EUT with the request path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-7">Test Metrics <a href="#sec:test-metrics-7" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp message.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an OperationStatus that is an element of type OperationFailure. The OperationFailure element contains an err_code of ‘7011’ (Invalid Type) or ‘7012’ (Invalid Value).</p></li>
<li><p>The GetResp from the EUT does not contain a Subscription instance with ID <code>add7</code>.</p></li>
</ol>
<h2 id="sec:add-message-with-allow-partial-true-required-parameters-fail-multiple-objects">1.9 Add message with allow partial true, required parameters fail, multiple objects <a href="#sec:add-message-with-allow-partial-true-required-parameters-fail-multiple-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-9">Purpose <a href="#sec:purpose-9" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the allow_partial element is set to true, and at least one required parameter fails in one of multiple objects.</p>
<h3 id="sec:functionality-tag-8">Functionality Tag <a href="#sec:functionality-tag-8" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-9">Test Setup <a href="#sec:test-setup-9" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-8">Test Procedure <a href="#sec:test-procedure-8" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: true
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;add81&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.SoftwareVersion&#39;
          }
        }
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;add81&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.SoftwareVersion&#39;
          }
        param_settings {
            param: &#39;InvalidParameter&#39;
            value: &#39;IrrelevantValue&#39;
            required: true
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-8">Test Metrics <a href="#sec:test-metrics-8" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp message.</p></li>
<li><p>The AddResp contains two CreatedObjectResults.</p>
<ol>
<li><p>One CreateObjectResult is an element of type OperationSuccess. The OperationSuccess elements contains no parameter errors and 3 elements in the unique key map: Alias, Recipient, and ID. Alternatively, the OperationSuccess contains 2 elements in the unique key map if the Alias parameter is not supported: Recipient, and ID.</p></li>
<li><p>The other CreateObjectResult is an element of type OperationFailure. The OperationFailure element contains an err_code of ‘7010’ (‘Unsupported Parameter’), ‘7017’ (‘Object could not be created’), or ‘7026’ (‘Invalid Path’).</p></li>
</ol></li>
<li><p>The EUT creates the first Subscription object, and does not create the second Subscription object.</p></li>
<li><p>The Subscription object’s values match the values set in the param_settings element.</p></li>
</ol>
<h2 id="sec:add-message-with-unique-key-addressing-in-path">1.10 Add message with unique key addressing in path <a href="#sec:add-message-with-unique-key-addressing-in-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-10">Purpose <a href="#sec:purpose-10" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles an Add message when the Controller uses unique key addressing.</p>
<h3 id="sec:functionality-tag-9">Functionality Tag <a href="#sec:functionality-tag-9" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Product supports at least one nested multi-instance object)</p>
<h3 id="sec:test-setup-10">Test Setup <a href="#sec:test-setup-10" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-9">Test Procedure <a href="#sec:test-procedure-9" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Controller.[EndpointID==&quot;&lt; EndpointID&gt;&quot;&amp;&amp;Alias==&quot;&lt;Alias if supported&gt;&quot;].BootParameter.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ParameterName&#39;
            value: &#39;Device.LocalAgent.SoftwareVersion&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifier of the created object as reported by the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-9">Test Metrics <a href="#sec:test-metrics-9" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends an AddResp.</p></li>
<li><p>The AddResp contains a single CreatedObjectResult that has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains no parameter errors and 2 elements in the unique key map: Alias and ParameterName. Alternatively, the OperationSuccess contains one element in the unique key map if the Alias parameter is not supported: ParameterName.</p></li>
<li><p>The EUT creates the BootParameter object.</p></li>
<li><p>The BootParameter object’s values match the values set in the param_settings element.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-false-required-parameters-pass">1.11 Set message with allow partial false, required parameters pass <a href="#sec:set-message-with-allow-partial-false-required-parameters-pass" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-11">Purpose <a href="#sec:purpose-11" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the allow_partial element is set to false, and all required parameters to be updated succeed.</p>
<h3 id="sec:functionality-tag-10">Functionality Tag <a href="#sec:functionality-tag-10" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-11">Test Setup <a href="#sec:test-setup-11" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-10">Test Procedure <a href="#sec:test-procedure-10" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-10">Test Metrics <a href="#sec:test-metrics-10" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult that has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains a single UpdateInstanceResult, with the affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The retrieved value matches the value set in the param_settings element.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-true-required-parameters-pass">1.12 Set message with allow partial true, required parameters pass <a href="#sec:set-message-with-allow-partial-true-required-parameters-pass" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-12">Purpose <a href="#sec:purpose-12" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the allow_partial element is set to true, and all required parameters to be updated succeed.</p>
<h3 id="sec:functionality-tag-11">Functionality Tag <a href="#sec:functionality-tag-11" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-12">Test Setup <a href="#sec:test-setup-12" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-11">Test Procedure <a href="#sec:test-procedure-11" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
  body {
    request {
      get {
        param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
      }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-11">Test Metrics <a href="#sec:test-metrics-11" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult that has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains a single UpdateInstanceResult, with the affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The retrieved value matches the value set in the param_settings element.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-false-multiple-objects">1.13 Set message with allow partial false, multiple objects <a href="#sec:set-message-with-allow-partial-false-multiple-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-13">Purpose <a href="#sec:purpose-13" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the allow_partial element is set to false, and all required parameters to be updated succeed.</p>
<h3 id="sec:functionality-tag-12">Functionality Tag <a href="#sec:functionality-tag-12" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-13">Test Setup <a href="#sec:test-setup-13" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT, and the instance identifiers are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-12">Test Procedure <a href="#sec:test-procedure-12" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-12">Test Metrics <a href="#sec:test-metrics-12" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains two UpdatedObjectResults that each have an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains a single UpdateInstanceResult, with the affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The retrieved value matches the value set in the param_settings element for each object.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-false-required-parameters-fail">1.14 Set message with allow partial false, required parameters fail <a href="#sec:set-message-with-allow-partial-false-required-parameters-fail" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-14">Purpose <a href="#sec:purpose-14" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the allow_partial element is set to false, and a required parameter fails.</p>
<h3 id="sec:functionality-tag-13">Functionality Tag <a href="#sec:functionality-tag-13" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-14">Test Setup <a href="#sec:test-setup-14" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-13">Test Procedure <a href="#sec:test-procedure-13" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Error.</p></li>
<li><p>Send a Get message to the EUT with a request path of <code>Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.</code>.</p></li>
</ol>
<h3 id="sec:test-metrics-13">Test Metrics <a href="#sec:test-metrics-13" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends an Error.</p></li>
<li><p>The Error contains err_code ‘7004’, ‘Invalid Arguments’, and a single ParamError element. The ParamError element contains a param_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.InvalidParameter’ and an err_code of ‘7010’, ‘Unsupported Parameter’.</p></li>
<li><p>The GetResp contains a single Subscription instance that does not include a <code>InvalidParameter</code> parameter.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object">1.15 Set message with allow partial false, multiple objects, required parameters fail in single object <a href="#sec:set-message-with-allow-partial-false-multiple-objects-required-parameters-fail-in-single-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-15">Purpose <a href="#sec:purpose-15" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the allow_partial element is set to false, and required parameters in one of multiple objects fail.</p>
<h3 id="sec:functionality-tag-14">Functionality Tag <a href="#sec:functionality-tag-14" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-15">Test Setup <a href="#sec:test-setup-15" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT, and the instance identifiers are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-14">Test Procedure <a href="#sec:test-procedure-14" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
         }
      }
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with a requested path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-14">Test Metrics <a href="#sec:test-metrics-14" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends an Error.</p></li>
<li><p>The Error contains err_code ‘7004’, ‘Invalid Arguments’, and a single ParamError element. The ParamError element contains a param_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.InvalidParameter’ and an err_code of ‘7010’, ‘Unsupported Parameter’.</p></li>
<li><p>The GetResp contains at least two Subscription instances, neither of which contain a <code>InvalidParameter</code> parameter and the first instance from the test setup does not have an updated <code>NotifRetry</code> value.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-true-required-parameter-fails-multiple-objects">1.16 Set message with allow partial true, required parameter fails, multiple objects <a href="#sec:set-message-with-allow-partial-true-required-parameter-fails-multiple-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-16">Purpose <a href="#sec:purpose-16" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the allow_partial element is set to true, and a required parameter on one of multiple objects fails.</p>
<h3 id="sec:functionality-tag-15">Functionality Tag <a href="#sec:functionality-tag-15" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-16">Test Setup <a href="#sec:test-setup-16" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT, and the instance identifiers are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-15">Test Procedure <a href="#sec:test-procedure-15" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
         }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p></li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre>
<ol>
<li>Allow the EUT to send a GetResp.</li>
</ol>
<h3 id="sec:test-metrics-15">Test Metrics <a href="#sec:test-metrics-15" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains two UpdatedObjectResults.</p>
<ol>
<li><p>The first UpdatedObjectResult has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains a single UpdatedInstanceResult, with the affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The second UpdatedObjectResult has an OperationStatus that is an element of type OperationFailure. The OperationFailure contains an err_code of ‘7021’, ‘Required parameter failed’, and a single UpdatedInstanceFailure element. The UpdatedInstanceFailure has an affected_path with a value of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a single ParameterError element.</p></li>
<li><p>The ParameterError has a param element with a value of ‘NotifRetry’, an err_code of ‘7010’, ‘Unsupported Parameter’</p></li>
</ol></li>
<li><p>The retrieved value matches the value set in the param_settings element for the first object.</p></li>
</ol>
<h2 id="sec:set-message-with-allow-partial-true-non-required-parameter-fails-multiple-parameters">1.17 Set message with allow partial true, non-required parameter fails, multiple parameters <a href="#sec:set-message-with-allow-partial-true-non-required-parameter-fails-multiple-parameters" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-17">Purpose <a href="#sec:purpose-17" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the allow_partial element is set to true, and one of multiple non-required parameters fail.</p>
<h3 id="sec:functionality-tag-16">Functionality Tag <a href="#sec:functionality-tag-16" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-17">Test Setup <a href="#sec:test-setup-17" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-16">Test Procedure <a href="#sec:test-procedure-16" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
       }
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
       }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-16">Test Metrics <a href="#sec:test-metrics-16" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult with an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains a single UpdatedInstanceResult element.</p>
<ol>
<li><p>The UpdatedInstanceResult affected_path is equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’.</p></li>
<li><p>The UpdatedInstanceResult has a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The UpdatedInstanceResult has a single ParameterError element, with the ‘param’ field set to ‘InvalidParameter’, and an err_code of ‘7010’, ‘Unsupported Parameter’.</p></li>
</ol></li>
<li><p>The retrieved value of NotifRetry matches the value set in the param_settings element.</p></li>
</ol>
<h2 id="sec:set-message-with-unique-key-addressing-in-path">1.18 Set message with unique key addressing in path <a href="#sec:set-message-with-unique-key-addressing-in-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-18">Purpose <a href="#sec:purpose-18" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the Controller uses unique key addressing.</p>
<h3 id="sec:functionality-tag-17">Functionality Tag <a href="#sec:functionality-tag-17" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-18">Test Setup <a href="#sec:test-setup-18" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the unique keys and their values are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-17">Test Procedure <a href="#sec:test-procedure-17" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {

    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&lt;unique key instance identifier from test setup&gt;.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p></li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre>
<ol>
<li>Allow the EUT to send a GetResp.</li>
</ol>
<h3 id="sec:test-metrics-17">Test Metrics <a href="#sec:test-metrics-17" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains a single UpdatedObjectResult that has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains a single UpdateInstanceResult, with the affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The retrieved value matches the value set in the param_settings element.</p></li>
</ol>
<h2 id="sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-pass">1.19 Set message with wildcard search path, allow partial false, required parameters pass <a href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-pass" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-19">Purpose <a href="#sec:purpose-19" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the Controller uses a wildcard search path and the requested updates succeed.</p>
<h3 id="sec:functionality-tag-18">Functionality Tag <a href="#sec:functionality-tag-18" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-19">Test Setup <a href="#sec:test-setup-19" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-18">Test Procedure <a href="#sec:test-procedure-18" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.*.&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier from test setup&gt;.NotifRetry&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-18">Test Metrics <a href="#sec:test-metrics-18" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains an UpdatedObjectResults element that has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains at least two UpdateInstanceResults, each with the affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’ of the respective instance, and a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The retrieved value matches the value set in the param_settings element for each object.</p></li>
</ol>
<h2 id="sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-fail">1.20 Set message with wildcard search path, allow partial false, required parameters fail <a href="#sec:set-message-with-wildcard-search-path-allow-partial-false-required-parameters-fail" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-20">Purpose <a href="#sec:purpose-20" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the Controller uses a wildcard search path, allow_partial element is set to false, and required parameters multiple objects fail.</p>
<h3 id="sec:functionality-tag-19">Functionality Tag <a href="#sec:functionality-tag-19" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-20">Test Setup <a href="#sec:test-setup-20" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-19">Test Procedure <a href="#sec:test-procedure-19" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {

    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.*.&#39;
        param_settings {
         param: &#39;InvalidParameter&#39;
         value: &#39;IrrelevantValue&#39;
         required: true
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an Error.</p></li>
<li><p>Send a Get message to the EUT with a requested path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-19">Test Metrics <a href="#sec:test-metrics-19" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends an Error.</p></li>
<li><p>The Error contains err_code ‘7004’, ‘Invalid Arguments’, and at least two ParamError elements. The ParamError elements contains a param_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier of relevant object&gt;.InvalidParameter’ and an err_code of ‘7010’, ‘Unsupported Parameter’.</p></li>
<li><p>In the GetResp there are no Subscription instances with a <code>InvalidParameter</code> parameter.</p></li>
</ol>
<h2 id="sec:set-message-with-wildcard-search-path-allow-partial-true-required-parameters-fail">1.21 Set message with wildcard search path, allow partial true, required parameters fail <a href="#sec:set-message-with-wildcard-search-path-allow-partial-true-required-parameters-fail" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-21">Purpose <a href="#sec:purpose-21" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the Controller uses a wildcard search path, the allow_partial element is set to true, and a required parameter on multiple objects fails.</p>
<h3 id="sec:functionality-tag-20">Functionality Tag <a href="#sec:functionality-tag-20" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-21">Test Setup <a href="#sec:test-setup-21" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-20">Test Procedure <a href="#sec:test-procedure-20" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}

body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.*.&#39;
        param_settings {
         param: &#39;Enable&#39;
         value: &#39;InvalidValue&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-20">Test Metrics <a href="#sec:test-metrics-20" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains an UpdatedObjectResults element.</p></li>
<li><p>The UpdatedObjectResults has an OperationStatus that is an element of type OperationFailure. The OperationFailure contains an err_code of ‘7021’, ‘Required Parameter Failed’, and at least two UpdatedInstanceFailure elements. The UpdatedInstanceFailures each have an affected_path with a value of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’ for the respective failed instance, and a single ParameterError element. The ParameterError has a param element that indicates the Enable parameter, and an err_code of ‘7011’ (Invalid Type), or ‘7012’ (Invalid Value).</p></li>
</ol>
<h2 id="sec:set-message-with-search-expression-search-path">1.22 Set message with search expression search path <a href="#sec:set-message-with-search-expression-search-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-22">Purpose <a href="#sec:purpose-22" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the Controller uses a search path.</p>
<h3 id="sec:functionality-tag-21">Functionality Tag <a href="#sec:functionality-tag-21" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-22">Test Setup <a href="#sec:test-setup-22" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT with a value for the NotifExpiration that is greater than 0.</p></li>
</ol>
<h3 id="sec:test-procedure-21">Test Procedure <a href="#sec:test-procedure-21" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.[NotifExpiration&gt;0].&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup&gt;.NotifRetry&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-21">Test Metrics <a href="#sec:test-metrics-21" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains at least one UpdatedObjectResult that has an OperationStatus that is an element of type OperationSuccess. The OperationSuccess contains a single UpdateInstanceResult, with the affected_path equal to ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’, and a single entry in the updated_params map containing ‘NotifRetry’ as the key.</p></li>
<li><p>The retrieved value matches the value set in the param_settings element.</p></li>
</ol>
<h2 id="sec:set-message-with-path-that-matches-no-objects">1.23 Set message with path that matches no objects <a href="#sec:set-message-with-path-that-matches-no-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-23">Purpose <a href="#sec:purpose-23" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Set message when the requested path does not match any objects.</p>
<h3 id="sec:functionality-tag-22">Functionality Tag <a href="#sec:functionality-tag-22" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-23">Test Setup <a href="#sec:test-setup-23" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-22">Test Procedure <a href="#sec:test-procedure-22" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: true
      update_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.[Recipient==&quot;InvalidValue&quot;].&#39;
        param_settings {
         param: &#39;NotifRetry&#39;
         value: &#39;&lt;Valid Value&gt;&#39;
         required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a SetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-22">Test Metrics <a href="#sec:test-metrics-22" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a SetResp.</p></li>
<li><p>The SetResp contains one UpdatedObjectResult. UpdatedObjectResult have an OperationStatus that is an element of type OperationFailure. The OperationFailure contains an err_code of ‘7016’, ‘Object does not exist’.</p></li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-false-valid-object-instance">1.24 Delete message with allow partial false, valid object instance <a href="#sec:delete-message-with-allow-partial-false-valid-object-instance" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-24">Purpose <a href="#sec:purpose-24" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to false, and the object to be deleted is valid.</p>
<h3 id="sec:functionality-tag-23">Functionality Tag <a href="#sec:functionality-tag-23" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-24">Test Setup <a href="#sec:test-setup-24" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT, and the instance identifiers are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-23">Test Procedure <a href="#sec:test-procedure-23" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-23">Test Metrics <a href="#sec:test-metrics-23" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single deleted_obj_response with a requested_path equal to ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’ and an oper_success element, with one affected_path element equal to the path name of the Deleted object.</p></li>
<li><p>The GetResp does not contain the Subscription instance that was deleted.</p></li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-false-object-instance-doesnt-exist">1.25 Delete message with allow partial false, object instance doesn’t exist <a href="#sec:delete-message-with-allow-partial-false-object-instance-doesnt-exist" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-25">Purpose <a href="#sec:purpose-25" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to false, and the object instance to be deleted does not exist.</p>
<h3 id="sec:functionality-tag-24">Functionality Tag <a href="#sec:functionality-tag-24" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-25">Test Setup <a href="#sec:test-setup-25" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned any existing Subscription objects and their instance identifiers.</p></li>
</ol>
<h3 id="sec:test-procedure-24">Test Procedure <a href="#sec:test-procedure-24" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;non-existant instance identifier&gt;.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-24">Test Metrics <a href="#sec:test-metrics-24" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a DeleteResp containing an empty oper_success element.</li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-false-invalid-object">1.26 Delete message with allow partial false, invalid object <a href="#sec:delete-message-with-allow-partial-false-invalid-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-26">Purpose <a href="#sec:purpose-26" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to false, and the object to be deleted is invalid.</p>
<h3 id="sec:functionality-tag-25">Functionality Tag <a href="#sec:functionality-tag-25" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-26">Test Setup <a href="#sec:test-setup-26" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-25">Test Procedure <a href="#sec:test-procedure-25" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
 }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
</ol>
<h3 id="sec:test-metrics-25">Test Metrics <a href="#sec:test-metrics-25" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends an Error message.</p></li>
<li><p>The Error contains an err_code of 7004, ‘Invalid arguments’, with the param_errs element containing a single error with a param_path of ‘Device.LocalAgent.InvalidObject.’, and an err_code of 7026, ‘InvalidPath’.</p></li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-false-multiple-objects">1.27 Delete message with allow partial false, multiple objects <a href="#sec:delete-message-with-allow-partial-false-multiple-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-27">Purpose <a href="#sec:purpose-27" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to false, with multiple valid objects.</p>
<h3 id="sec:functionality-tag-26">Functionality Tag <a href="#sec:functionality-tag-26" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-27">Test Setup <a href="#sec:test-setup-27" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT, and the instance identifiers are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-26">Test Procedure <a href="#sec:test-procedure-26" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;first instance identifier&gt;.&#39;
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;second instance identifier&gt;.&#39;
     }
   }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-26">Test Metrics <a href="#sec:test-metrics-26" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains two deleted_obj_results, each with a requested_path equal to the obj_paths of the Delete message, and an oper_success element containing an affected_path element equal to the path name of the deleted object.</p></li>
<li><p>The GetResp does not contain the deleted Subscription objects.</p></li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-false-multiple-objects-invalid-object">1.28 Delete message with allow partial false, multiple objects, invalid object <a href="#sec:delete-message-with-allow-partial-false-multiple-objects-invalid-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-28">Purpose <a href="#sec:purpose-28" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to false, and one of the objects to be deleted is invalid.</p>
<h3 id="sec:functionality-tag-27">Functionality Tag <a href="#sec:functionality-tag-27" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-28">Test Setup <a href="#sec:test-setup-28" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-27">Test Procedure <a href="#sec:test-procedure-27" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: false
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier.&gt;&#39;
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send an Error message.</p></li>
<li><p>Send a Get message to the EUT with a request path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-27">Test Metrics <a href="#sec:test-metrics-27" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends an Error message.</p></li>
<li><p>The Error contains an err_code of 7004, ‘Invalid arguments’, with the param_errs element containing a single error with a param_path of ‘Device.LocalAgent.InvalidObject.’, and an err_code of 7026, ‘InvalidPath’.</p></li>
<li><p>The GetResp contains the Subscription that was not deleted by step 1.</p></li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-true-object-instance-doesnt-exist">1.29 Delete message with allow partial true, object instance doesn’t exist <a href="#sec:delete-message-with-allow-partial-true-object-instance-doesnt-exist" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-29">Purpose <a href="#sec:purpose-29" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to true, and the object instance to be deleted does not exist.</p>
<h3 id="sec:functionality-tag-28">Functionality Tag <a href="#sec:functionality-tag-28" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-29">Test Setup <a href="#sec:test-setup-29" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-28">Test Procedure <a href="#sec:test-procedure-28" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: true
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;invalid instance identifier&gt;.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-28">Test Metrics <a href="#sec:test-metrics-28" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a DeleteResponse containing an empty oper_success element (i.e., <code>oper_success{}</code>).</li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-true-invalid-object">1.30 Delete message with allow partial true, invalid object <a href="#sec:delete-message-with-allow-partial-true-invalid-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-30">Purpose <a href="#sec:purpose-30" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to true, and the object is not valid in the Agent’s supported data model.</p>
<h3 id="sec:functionality-tag-29">Functionality Tag <a href="#sec:functionality-tag-29" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-30">Test Setup <a href="#sec:test-setup-30" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-29">Test Procedure <a href="#sec:test-procedure-29" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
 }
 body {
   request {
     delete {
       allow_partial: true
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-29">Test Metrics <a href="#sec:test-metrics-29" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single deleted_obj_result message with a requested_path of ‘Device.LocalAgent.InvalidObject.’ and an oper_failure element, with err_code ‘7026’, ‘Invalid Path’.</p></li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-true-multiple-objects-invalid-object">1.31 Delete message with allow partial true, multiple objects, invalid object <a href="#sec:delete-message-with-allow-partial-true-multiple-objects-invalid-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-31">Purpose <a href="#sec:purpose-31" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to true, and one of multiple objects is invalid.</p>
<h3 id="sec:functionality-tag-30">Functionality Tag <a href="#sec:functionality-tag-30" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-31">Test Setup <a href="#sec:test-setup-31" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-30">Test Procedure <a href="#sec:test-procedure-30" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code> header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
 body {
   request {
     delete {
       allow_partial: true
       obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
       obj_paths: &#39;Device.LocalAgent.InvalidObject.&#39;
     }
   }
 }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-30">Test Metrics <a href="#sec:test-metrics-30" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains two deleted_obj_results elements, one with an oper_success element, containing an affected_path element with the value Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and the other with an oper_failure element containing an err_code of ‘7026’, ‘InvalidPath’.</p></li>
<li><p>The GetResp does not contain the Subscription instance deleted in step 1.</p></li>
</ol>
<h2 id="sec:delete-message-with-allow-partial-true-multiple-objects-object-doesnt-exist">1.32 Delete message with allow partial true, multiple objects, object doesn’t exist <a href="#sec:delete-message-with-allow-partial-true-multiple-objects-object-doesnt-exist" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-32">Purpose <a href="#sec:purpose-32" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the allow_partial element is set to true, and one of multiple objects does not exist in the Agent’s instantiated data model.</p>
<h3 id="sec:functionality-tag-31">Functionality Tag <a href="#sec:functionality-tag-31" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-32">Test Setup <a href="#sec:test-setup-32" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-31">Test Procedure <a href="#sec:test-procedure-31" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
   msg_id: &#39;&lt;msg_id&gt;&#39;
   msg_type: DELETE
  }
body {
  request {
    delete {
      allow_partial: true
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;invalid instance identifier&gt;.&#39;
      }
     }
    }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of Device.LocalAgent.Subscription.</p></li>
</ol>
<h3 id="sec:test-metrics-31">Test Metrics <a href="#sec:test-metrics-31" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains two deleted_obj_results elements. One contains an oper_success element with an affected_paths element listing ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’. The second contains an empty oper_success element (i.e., <code>oper_success{}</code>).</p></li>
<li><p>The GetResp does not contain the Subscription instance deleted in step 1.</p></li>
</ol>
<h2 id="sec:delete-message-with-unique-key-addressing">1.33 Delete message with unique key addressing <a href="#sec:delete-message-with-unique-key-addressing" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-33">Purpose <a href="#sec:purpose-33" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the Controller uses unique key addressing.</p>
<h3 id="sec:functionality-tag-32">Functionality Tag <a href="#sec:functionality-tag-32" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-33">Test Setup <a href="#sec:test-setup-33" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Obtain the unique key values of the Device.LocalAgent. object that correlates with the that equates to the source of the test USP messages.</p></li>
<li><p>Ensure that at least one Device.LocalAgent.Controller.{i}.BootParameter. object exists on the EUT, and the instance identifier of the object is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-32">Test Procedure <a href="#sec:test-procedure-32" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.[EndpointID==&quot;&lt; EndpointID&gt;&quot;&amp;&amp;Alias==&quot;&lt;Alias if supported&gt;&quot;].BootParameter.&lt;instance identifier&gt;.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of <code>Device.LocalAgent.Controller.&lt;instance ID&gt;.BootParameter.</code></p></li>
</ol>
<h3 id="sec:test-metrics-32">Test Metrics <a href="#sec:test-metrics-32" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single deleted_obj_result with a requested path equal to the path specified in the obj_path of the Delete message, containing an oper_success element, with one affected_path element equal to the path name of the Deleted object.</p></li>
<li><p>The affected_path element uses instance number addressing.</p></li>
<li><p>The GetResp does not contain the BootParameter deleted in step 1.</p></li>
</ol>
<h2 id="sec:delete-message-with-wildcard-search-path-valid-objects">1.34 Delete message with wildcard search path, valid objects <a href="#sec:delete-message-with-wildcard-search-path-valid-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-34">Purpose <a href="#sec:purpose-34" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the Controller uses a wildcard search to delete multiple valid objects.</p>
<h3 id="sec:functionality-tag-33">Functionality Tag <a href="#sec:functionality-tag-33" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-34">Test Setup <a href="#sec:test-setup-34" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-33">Test Procedure <a href="#sec:test-procedure-33" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.*.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of <code>Device.LocalAgent.Subscription.</code></p></li>
</ol>
<h3 id="sec:test-metrics-33">Test Metrics <a href="#sec:test-metrics-33" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single deleted_obj_result with a requested path equal to ‘Device.LocalAgent.Subscription.*.’ and an oper_success element with one or more affected_path elements equal to the path names of the Deleted objects.</p></li>
<li><p>The GetResp does not contain any of the Subscription instances deleted in step 1.</p></li>
</ol>
<h2 id="sec:delete-message-with-search-expression-search-path">1.35 Delete message with search expression search path <a href="#sec:delete-message-with-search-expression-search-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-35">Purpose <a href="#sec:purpose-35" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT properly handles a Delete message when the Controller uses a search expression to delete one or more valid objects.</p>
<h3 id="sec:functionality-tag-34">Functionality Tag <a href="#sec:functionality-tag-34" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-35">Test Setup <a href="#sec:test-setup-35" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the instance identifier of the Controller object that represents the traffic generator is known by the traffic generator.</p></li>
<li><p>Ensure that at least two Device.LocalAgent.Controller.&lt;instance identifier&gt;.BootParameter. objects exist on the EUT. At least one of these BootParameter objects has a value of ‘false’ for its ‘Enable’ parameter, and at least one of these BootParameter objects has a value of ‘true’ for its ‘Enable’ parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-34">Test Procedure <a href="#sec:test-procedure-34" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.BootParameter.[Enable==true].&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with a requested path of <code>Device.LocalAgent.Controller.&lt;instance ID&gt;.BootParameter.</code></p></li>
</ol>
<h3 id="sec:test-metrics-34">Test Metrics <a href="#sec:test-metrics-34" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a DeleteResp.</p></li>
<li><p>The DeleteResp contains a single deleted_obj_results element, with a requested path equal to ‘Device.LocalAgent.Controller.&lt;instance identifier&gt;.BootParameter.[Enable==true]’ and an oper_success element with the affected_path elements equal to the path names of the successfully Deleted objects.</p></li>
<li><p>The BootParameter whose Enable parameter was equal to ‘false’ was not deleted.</p></li>
<li><p>The GetResp does not contain any BootParameter instances where <code>Enable==true</code>.</p></li>
</ol>
<h2 id="sec:get-message-with-full-parameter-path">1.36 Get message with full parameter path <a href="#sec:get-message-with-full-parameter-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-36">Purpose <a href="#sec:purpose-36" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when a single full parameter path is specified.</p>
<h3 id="sec:functionality-tag-35">Functionality Tag <a href="#sec:functionality-tag-35" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-36">Test Setup <a href="#sec:test-setup-36" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-35">Test Procedure <a href="#sec:test-procedure-35" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.EndpointID&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-35">Test Metrics <a href="#sec:test-metrics-35" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, and contains a single resolved_path_results element. The resolved_path_results element contains a requested_path equal to ‘Device.LocalAgent.EndpointID’, a single resolved_path equal to ‘Device.LocalAgent.’, and a single result_params element with a key of ‘EndpointID’ and a value equal to the EUT’s EndpointID.</p></li>
</ol>
<h2 id="sec:get-message-with-multiple-full-parameter-paths-same-object">1.37 Get message with multiple full parameter paths, same object <a href="#sec:get-message-with-multiple-full-parameter-paths-same-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-37">Purpose <a href="#sec:purpose-37" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when multiple full parameter paths are specified within the same object.</p>
<h3 id="sec:functionality-tag-36">Functionality Tag <a href="#sec:functionality-tag-36" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-37">Test Setup <a href="#sec:test-setup-37" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-36">Test Procedure <a href="#sec:test-procedure-36" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.EndpointID&#39;
      param_paths: &#39;Device.LocalAgent.SoftwareVersion&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-36">Test Metrics <a href="#sec:test-metrics-36" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains two req_path_results elements. The requested_path_results have no errors. Each contains a single resolved_path_results element. One resolved_path_result element contains a requested_path equal to ‘Device.LocalAgent.EndpointID’, a single resolved_path equal to ‘Device.LocalAgent.’, and a single result_params element with a key of ‘EndpointID’ and a value equal to the EUT’s EndpointID. The other resolved_path_result element contains a requested_path equal to ‘Device.LocalAgent.SoftwareVersion’, a single resolved_path equal to ‘Device.LocalAgent.’, and a single result_params element with a key of ‘SoftwareVersion’ with a valid value.</p></li>
</ol>
<h2 id="sec:get-message-with-multiple-full-parameter-paths-different-objects">1.38 Get message with multiple full parameter paths, different objects <a href="#sec:get-message-with-multiple-full-parameter-paths-different-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-38">Purpose <a href="#sec:purpose-38" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when multiple full parameter paths are specified within multiple objects.</p>
<h3 id="sec:functionality-tag-37">Functionality Tag <a href="#sec:functionality-tag-37" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-38">Test Setup <a href="#sec:test-setup-38" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and its instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-37">Test Procedure <a href="#sec:test-procedure-37" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.EndpointID&#39;
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.Enable&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-37">Test Metrics <a href="#sec:test-metrics-37" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains two req_path_results elements. The requested_path_results have no errors. Each contains a single resolved_path_results element. One resolved_path_result element contains a requested_path equal to ‘Device.LocalAgent.EndpointID’, a single resolved_path equal to ‘Device.LocalAgent.’, and a single result_params element with a key of ‘EndpointID’ and a value equal to the EUT’s EndpointID. The other resolved_path_result element contains a requested_path equal to ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.Enable’, a single resolved_path equal to ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a single result_params element with a key of ‘Enable’ with a valid value.</p></li>
</ol>
<h2 id="sec:get-message-with-object-path">1.39 Get message with object path <a href="#sec:get-message-with-object-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-39">Purpose <a href="#sec:purpose-39" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when an object path is specified.</p>
<h3 id="sec:functionality-tag-38">Functionality Tag <a href="#sec:functionality-tag-38" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-39">Test Setup <a href="#sec:test-setup-39" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-38">Test Procedure <a href="#sec:test-procedure-38" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-38">Test Metrics <a href="#sec:test-metrics-38" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.’, and a set of resolved_path_results elements. One contains a resolved_path of ‘Device.LocalAgent.’, and a number result_params elements contain keys and values of the parameters of ‘Device.LocalAgent.’. Additional resolved_path_results exist for each of the sub-objects of Device.LocalAgent., with result_params containing the keys and values of each sub-object’s parameters.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
</ol>
<h2 id="sec:get-message-with-object-instance-path">1.40 Get message with object instance path <a href="#sec:get-message-with-object-instance-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-40">Purpose <a href="#sec:purpose-40" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when a path to an object instance is specified.</p>
<h3 id="sec:functionality-tag-39">Functionality Tag <a href="#sec:functionality-tag-39" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-40">Test Setup <a href="#sec:test-setup-40" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and its instance identifier is known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-39">Test Procedure <a href="#sec:test-procedure-39" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-39">Test Metrics <a href="#sec:test-metrics-39" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a single resolved_path_results element, with a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a series of result_params elements containing the keys and values of the parameters of the instance.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
</ol>
<h2 id="sec:get-message-with-invalid-parameter">1.41 Get message with invalid parameter <a href="#sec:get-message-with-invalid-parameter" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-41">Purpose <a href="#sec:purpose-41" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Agent can properly handle a Get message when a single invalid parameter is requested.</p>
<h3 id="sec:functionality-tag-40">Functionality Tag <a href="#sec:functionality-tag-40" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-41">Test Setup <a href="#sec:test-setup-41" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-40">Test Procedure <a href="#sec:test-procedure-40" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.InvalidParameter&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-40">Test Metrics <a href="#sec:test-metrics-40" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has a requested_path equal to ‘Device.LocalAgent.InvalidParameter’, and an err_code of ‘7026’, ‘Invalid Path’.</p></li>
</ol>
<h2 id="sec:get-message-with-invalid-parameter-and-valid-parameter">1.42 Get message with invalid parameter and valid parameter <a href="#sec:get-message-with-invalid-parameter-and-valid-parameter" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-42">Purpose <a href="#sec:purpose-42" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when both a valid and invalid parameter are requested.</p>
<h3 id="sec:functionality-tag-41">Functionality Tag <a href="#sec:functionality-tag-41" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-42">Test Setup <a href="#sec:test-setup-42" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-41">Test Procedure <a href="#sec:test-procedure-41" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
       param_paths: &#39;Device.LocalAgent.EndpointID&#39;
       param_paths: &#39;Device.LocalAgent.InvalidParameter&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-41">Test Metrics <a href="#sec:test-metrics-41" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains two req_path_results elements. One requested_path_results has no errors, and contains a single resolved_path_results element. The resolved_path_results element contains a requested_path equal to ‘Device.LocalAgent.EndpointID’, a single resolved_path equal to ‘Device.LocalAgent.’, and a single result_params element with a key of ‘EndpointID’ and a value equal to the EUT’s EndpointID. The other requested_path_results has a requested_path equal to ‘Device.LocalAgent.InvalidParameter’, and an err_code of ‘7026’, ‘Invalid Path’.</p></li>
</ol>
<h2 id="sec:get-message-using-unique-key-addressing">1.43 Get message using unique key addressing <a href="#sec:get-message-using-unique-key-addressing" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-43">Purpose <a href="#sec:purpose-43" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses unique key addressing.</p>
<h3 id="sec:functionality-tag-42">Functionality Tag <a href="#sec:functionality-tag-42" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-43">Test Setup <a href="#sec:test-setup-43" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the unique keys and their values are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-42">Test Procedure <a href="#sec:test-procedure-42" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&lt;unique key identifier&gt;.Enable&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-42">Test Metrics <a href="#sec:test-metrics-42" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.&lt;unique key identifier&gt;.Enable’, and a single resolved_path_results element, with a resolved_path of ‘Device.LocalAgent.&lt;instance identifier&gt;.Subscription.’, and a result_params element contain with a key of ‘Enable’ and a valid value.</p></li>
</ol>
<h2 id="sec:get-message-using-wildcard-search-path-on-full-parameter">1.44 Get message using wildcard search path on full parameter <a href="#sec:get-message-using-wildcard-search-path-on-full-parameter" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-44">Purpose <a href="#sec:purpose-44" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a wildcard to retrieve a single parameter from multiple objects.</p>
<h3 id="sec:functionality-tag-43">Functionality Tag <a href="#sec:functionality-tag-43" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-44">Test Setup <a href="#sec:test-setup-44" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-43">Test Procedure <a href="#sec:test-procedure-43" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.*.Enable&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-43">Test Metrics <a href="#sec:test-metrics-43" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.*.Enable’, and at least two resolved_path_results elements, each with a resolved_path of ‘Device.LocalAgent.Subscription.’, and a result_params element contain with a key of ‘Enable’ and a valid value.</p></li>
</ol>
<h2 id="sec:get-message-using-wildcard-search-path-on-object-path">1.45 Get message using wildcard search path on object path <a href="#sec:get-message-using-wildcard-search-path-on-object-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-45">Purpose <a href="#sec:purpose-45" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a wildcard to retrieve all parameters from multiple object instances.</p>
<h3 id="sec:functionality-tag-44">Functionality Tag <a href="#sec:functionality-tag-44" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-45">Test Setup <a href="#sec:test-setup-45" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-44">Test Procedure <a href="#sec:test-procedure-44" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.*.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-44">Test Metrics <a href="#sec:test-metrics-44" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.*.’, and a set of resolved_path_results elements. Each contains a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a number of result_params elements containing keys and values of the parameters of each Subscription object.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
</ol>
<h2 id="sec:get-message-using-search-expression-search-path-equivalence">1.46 Get message using search expression search path (equivalence) <a href="#sec:get-message-using-search-expression-search-path-equivalence" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-46">Purpose <a href="#sec:purpose-46" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a search path to retrieve objects that that parameters that match a particular value.</p>
<h3 id="sec:functionality-tag-45">Functionality Tag <a href="#sec:functionality-tag-45" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-46">Test Setup <a href="#sec:test-setup-46" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT. At least one of these Subscription objects should have a value of ‘true’ for its Enable parameter, and at least one should have a value of ‘false’ for its Enable parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-45">Test Procedure <a href="#sec:test-procedure-45" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[Enable==true].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-45">Test Metrics <a href="#sec:test-metrics-45" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[Enable==true].’, and a set of resolved_path_results elements. Each contains a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a number of result_params elements containing keys and values of the parameters of each Subscription object where the Enable parameter is ‘true’.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects whose Enable parameter is ‘false’.</p></li>
</ol>
<h2 id="sec:get-message-using-search-expression-search-path-non-equivalence">1.47 Get message using search expression search path (non-equivalence) <a href="#sec:get-message-using-search-expression-search-path-non-equivalence" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-47">Purpose <a href="#sec:purpose-47" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a search path that does not match a particular value.</p>
<h3 id="sec:functionality-tag-46">Functionality Tag <a href="#sec:functionality-tag-46" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-47">Test Setup <a href="#sec:test-setup-47" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT. At least one of these Subscription objects should have a value of ‘true’ for its Enable parameter, and at least one should have a value of ‘false’ for its Enable parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-46">Test Procedure <a href="#sec:test-procedure-46" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[Enable!=true].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-46">Test Metrics <a href="#sec:test-metrics-46" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[Enable==true].’, and a set of resolved_path_results elements. Each contains a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a number of result_params elements containing keys and values of the parameters of each Subscription object where the Enable parameter is ‘true’.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects whose Enable parameter is ‘false’.</p></li>
</ol>
<h2 id="sec:get-message-using-search-expression-search-path-exclusive-greater-comparison">1.48 Get message using search expression search path (exclusive greater comparison) <a href="#sec:get-message-using-search-expression-search-path-exclusive-greater-comparison" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-48">Purpose <a href="#sec:purpose-48" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a search path to retrieve objects that that parameters that are greater than a particular value.</p>
<h3 id="sec:functionality-tag-47">Functionality Tag <a href="#sec:functionality-tag-47" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-48">Test Setup <a href="#sec:test-setup-48" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT. At least one of these Subscription objects should have a value of ‘10’ for its NotifExpiration parameter, and at least one with a value of ‘20’ for its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-47">Test Procedure <a href="#sec:test-procedure-47" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&gt;10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-47">Test Metrics <a href="#sec:test-metrics-47" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[NotifExpiration&gt;10].’, and a set of resolved_path_results elements. Each contains a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a number of result_params elements containing keys and values of the parameters of each Subscription object where the NotifExpiration parameter is greater than 10.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects whose NotifExpiration parameter is equal to or less than 10.</p></li>
</ol>
<h2 id="sec:get-message-using-search-expression-search-path-exclusive-lesser-comparison">1.49 Get message using search expression search path (exclusive lesser comparison) <a href="#sec:get-message-using-search-expression-search-path-exclusive-lesser-comparison" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-49">Purpose <a href="#sec:purpose-49" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a search path to retrieve objects that that parameters that are less than a particular value.</p>
<h3 id="sec:functionality-tag-48">Functionality Tag <a href="#sec:functionality-tag-48" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-49">Test Setup <a href="#sec:test-setup-49" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least two Subscription objects exist on the EUT. At least one of these Subscription objects should have a value of ‘10’ for its NotifExpiration parameter, and at least one with a value of ‘5’ for its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-48">Test Procedure <a href="#sec:test-procedure-48" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&lt;10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-48">Test Metrics <a href="#sec:test-metrics-48" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[NotifExpiration&lt;10].’, and a set of resolved_path_results elements. Each contains a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a number result_params elements contain keys and values of the parameters of each Subscription object where the NotifExpiration parameter is less than 10.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects whose NotifExpiration parameter is equal to or greater than 10.</p></li>
</ol>
<h2 id="sec:get-message-using-search-expression-search-path-inclusive-greater-comparison">1.50 Get message using search expression search path (inclusive greater comparison) <a href="#sec:get-message-using-search-expression-search-path-inclusive-greater-comparison" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-50">Purpose <a href="#sec:purpose-50" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a search path to retrieve objects that that parameters that are greater than or equal to a particular value.</p>
<h3 id="sec:functionality-tag-49">Functionality Tag <a href="#sec:functionality-tag-49" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-50">Test Setup <a href="#sec:test-setup-50" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least three Subscription objects exist on the EUT. At least one of these Subscription objects should have a value of ‘10’ for its NotifExpiration parameter, at least one with a value of ‘20’ for its NotifExpiration parameter, and at least one with a value of ‘5’ for its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-49">Test Procedure <a href="#sec:test-procedure-49" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&gt;=10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-49">Test Metrics <a href="#sec:test-metrics-49" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[NotifExpiration&gt;=10].’, and a set of resolved_path_results elements. Each contains a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a number of result_params elements containing keys and values of the parameters of each Subscription object where the NotifExpiration parameter is greater than or equal to 10.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects whose NotifExpiration parameter is less than 10.</p></li>
</ol>
<h2 id="sec:get-message-using-search-expression-search-path-inclusive-lesser-comparison">1.51 Get message using search expression search path (inclusive lesser comparison) <a href="#sec:get-message-using-search-expression-search-path-inclusive-lesser-comparison" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-51">Purpose <a href="#sec:purpose-51" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can retrieve the values of parameters in the Agent’s Instantiated Data Model when the requested path uses a search path to retrieve objects that that parameters that are less than or equal to a particular value.</p>
<h3 id="sec:functionality-tag-50">Functionality Tag <a href="#sec:functionality-tag-50" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-51">Test Setup <a href="#sec:test-setup-51" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least three Subscription objects exist on the EUT. At least one of these Subscription objects should have a value of ‘10’ for its NotifExpiration parameter, at least one with a value of ‘20’ for its NotifExpiration parameter, and at least one with a value of ‘5’ for its NotifExpiration parameter.</p></li>
</ol>
<h3 id="sec:test-procedure-50">Test Procedure <a href="#sec:test-procedure-50" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.[NotifExpiration&lt;=10].&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-50">Test Metrics <a href="#sec:test-metrics-50" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[NotifExpiration&lt;=10].’, and a set of resolved_path_results elements. Each contains a resolved_path of ‘Device.LocalAgent.Subscription.&lt;instance identifier&gt;.’, and a number of result_params elements containing keys and values of the parameters of each Subscription object where the NotifExpiration parameter is less than or equal to 10.</p></li>
<li><p>The keys of all result_params elements are relative paths.</p></li>
<li><p>The EUT does not return any parameters from Subscription objects whose NotifExpiration parameter is greater than 10.</p></li>
</ol>
<h2 id="sec:notify---subscription-creation-using-value-change">1.52 Notify - Subscription creation using Value Change <a href="#sec:notify---subscription-creation-using-value-change" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-52">Purpose <a href="#sec:purpose-52" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will create and acknowledge Subscriptions requested by the , and notifies the when the conditions of the subscription are triggered. This test uses the ValueChange event to exercise these functions, validating the behavior of ValueChange in the process.</p>
<h3 id="sec:functionality-tag-51">Functionality Tag <a href="#sec:functionality-tag-51" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-52">Test Setup <a href="#sec:test-setup-52" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance identifier of the Device.LocalAgent.Controller. object that represents the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode to an arbitrary value that is not ‘TestValue52’.</p></li>
</ol>
<h3 id="sec:test-procedure-51">Test Procedure <a href="#sec:test-procedure-51" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify52&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue52&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-51">Test Metrics <a href="#sec:test-metrics-51" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful AddResp.</p></li>
<li><p>The EUT sends a Notify message with a subscription_id field equal to ‘Notify52’, and an event element of value_change with a param_path of ‘Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode’ and a param_value of ‘TestValue52’.</p></li>
</ol>
<h2 id="sec:notify---subscription-deletion-using-value-change">1.53 Notify - Subscription Deletion Using Value Change <a href="#sec:notify---subscription-deletion-using-value-change" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-53">Purpose <a href="#sec:purpose-53" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will remove and terminate a Subscription when the Controller uses the Delete message.</p>
<h3 id="sec:functionality-tag-52">Functionality Tag <a href="#sec:functionality-tag-52" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-53">Test Setup <a href="#sec:test-setup-53" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance identifier of the Device.LocalAgent.Controller. object that represents the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode to an arbitrary value that is not ‘TestValue53’.</p></li>
</ol>
<h3 id="sec:test-procedure-52">Test Procedure <a href="#sec:test-procedure-52" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify53&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp, and store the instance identifier of the Subscription object.</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue53&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
<li><p>Send a Delete message with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier&gt;.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
<li><p>Repeat step 3, changing the value of ProvisioningCode to ‘notify53-2’.</p></li>
<li><p>Wait 20 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-52">Test Metrics <a href="#sec:test-metrics-52" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful DeleteResp.</p></li>
<li><p>The EUT does not send a Notify message based on the activity in the ProvisioningCode parameter.</p></li>
</ol>
<h2 id="sec:notification-retry-using-value-change">1.54 Notification Retry using Value Change <a href="#sec:notification-retry-using-value-change" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-54">Purpose <a href="#sec:purpose-54" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will attempt to resend Notify messages when the NotifRetry parameter in a Subscription object is set to true and the Controller does not send a NotifyResp.</p>
<h3 id="sec:functionality-tag-53">Functionality Tag <a href="#sec:functionality-tag-53" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-54">Test Setup <a href="#sec:test-setup-54" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance identifier of the Device.LocalAgent.Controller. object that represents the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode to an arbitrary value that is not ‘TestValue54’.</p></li>
<li><p>Ensure that the Device.LocalAgent.Controller.&lt;instance identifier&gt;.USPNotifRetryMinimumWaitInterval is set to its default value (5).</p></li>
</ol>
<h3 id="sec:test-procedure-53">Test Procedure <a href="#sec:test-procedure-53" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify54&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue54&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 10 seconds to allow the EUT to send a Notify message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 20 seconds to allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-53">Test Metrics <a href="#sec:test-metrics-53" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT retries the Notify message.</p></li>
<li><p>The first retry occurs within 5-10 seconds. The second retry occurs within 10-20 seconds.</p></li>
</ol>
<h2 id="sec:subscription-expiration-using-value-change">1.55 Subscription Expiration using Value Change <a href="#sec:subscription-expiration-using-value-change" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-55">Purpose <a href="#sec:purpose-55" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent removes a Subscription from the Subscription table after its TimeToLive has expired.</p>
<h3 id="sec:functionality-tag-54">Functionality Tag <a href="#sec:functionality-tag-54" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditionally Mandatory (Supports TimeToLive in Device.LocalAgent.Subscription.)</p>
<h3 id="sec:test-setup-55">Test Setup <a href="#sec:test-setup-55" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance identifier of the Device.LocalAgent.Controller. object that represents the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode to an arbitrary value that is not ‘TestValue55’.</p></li>
</ol>
<h3 id="sec:test-procedure-54">Test Procedure <a href="#sec:test-procedure-54" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify55&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;TimeToLive&#39;
            value: &#39;20&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue55&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
<li><p>Wait 20 seconds.</p></li>
<li><p>Send a GetInstances message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
      msg_id: &#39;&lt;msg_id&gt;&#39;
      msg_type: GET_INSTANCES
    }
body {
      request {
        get_instances {
          obj_paths: &#39;Device.LocalAgent.Subscription.&#39;
        }
      }
    }</code></pre></li>
<li><p>Allow the EUT to send a GetInstancesResponse.</p></li>
<li><p>Repeat step 3 with a value of ‘TestValue55-2’.</p></li>
<li><p>Wait 10 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-54">Test Metrics <a href="#sec:test-metrics-54" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a Notify message after step 3.</p></li>
<li><p>The GetInstancesReponse does not list the instance of the Subscription object created in step 1.</p></li>
<li><p>The EUT does not send a Notify message after step 9.</p></li>
</ol>
<h2 id="sec:notification-retry-expiration-using-value-change">1.56 Notification Retry Expiration using Value Change <a href="#sec:notification-retry-expiration-using-value-change" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-56">Purpose <a href="#sec:purpose-56" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will cease attempts to retry Notify messages after an amount of time specified in value of the NotifExpiration parameter in the Subscription object has passed.</p>
<h3 id="sec:functionality-tag-55">Functionality Tag <a href="#sec:functionality-tag-55" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Subscription.{i}.NotifExpiration parameter).</p>
<h3 id="sec:test-setup-56">Test Setup <a href="#sec:test-setup-56" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the traffic generator has learned the instance identifier of the Device.LocalAgent.Controller. object that represents the Controller simulated by the traffic generator.</p></li>
<li><p>Set the Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode to an arbitrary value that is not ‘TestValue56’.</p></li>
<li><p>Ensure that the Device.LocalAgent.Controller.&lt;instance identifier&gt;.USPNotifRetryMinimumWaitInterval is set to its default value (5).</p></li>
</ol>
<h3 id="sec:test-procedure-55">Test Procedure <a href="#sec:test-procedure-55" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify56&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;NotifExpiration&#39;
            value: &#39;20&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
      allow_partial: false
      update_objs {
        obj_path: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.&#39;
        param_settings {
          param: &#39;ProvisioningCode&#39;
          value: &#39;TestValue56&#39;
          required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 10 seconds to allow the EUT to send a Notify message.</p></li>
<li><p>Do not send a NotifyResp to the EUT.</p></li>
<li><p>Wait 20 seconds to allow the EUT to send a Notify message.</p></li>
<li><p>Do not send a Notify Response to the EUT.</p></li>
<li><p>Wait 30 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-55">Test Metrics <a href="#sec:test-metrics-55" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT retries the Notify message within 20 seconds.</p></li>
<li><p>The EUT does not retry the Notify message after 20 seconds.</p></li>
</ol>
<h2 id="sec:objectcreation-notification">1.57 ObjectCreation Notification <a href="#sec:objectcreation-notification" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-57">Purpose <a href="#sec:purpose-57" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a Notify message to the Controller when the Controller is Subscribed to the ObjectCreation event.</p>
<h3 id="sec:functionality-tag-56">Functionality Tag <a href="#sec:functionality-tag-56" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-57">Test Setup <a href="#sec:test-setup-57" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-56">Test Procedure <a href="#sec:test-procedure-56" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify57&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ObjectCreation&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Subscription.&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify57-2&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ValueChange&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Controller.&lt;instance identifier&gt;.ProvisioningCode&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-56">Test Metrics <a href="#sec:test-metrics-56" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful AddResp.</p></li>
<li><p>The EUT sends a Notify message with a subscription_id field equal to ‘Notify57’, and an event element of obj_creation with a obj_path of ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’ and a map element of unique_keys with values of ‘ID, ’Notify57-2’ and ‘Recipient, Device.LocalAgent.Controller.&lt;instance identifier&gt;.’.</p></li>
</ol>
<h2 id="sec:objectdeletion-notification">1.58 ObjectDeletion Notification <a href="#sec:objectdeletion-notification" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-58">Purpose <a href="#sec:purpose-58" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a Notify message to the Controller when the Controller is Subscribed to the ObjectDeletion event.</p>
<h3 id="sec:functionality-tag-57">Functionality Tag <a href="#sec:functionality-tag-57" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-58">Test Setup <a href="#sec:test-setup-58" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that at least one Subscription object exists on the EUT, and the unique keys and their values are known by the traffic generator.</p></li>
</ol>
<h3 id="sec:test-procedure-57">Test Procedure <a href="#sec:test-procedure-57" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &#39;Device.LocalAgent.Subscription.&#39;
        param_settings {
            param: &#39;Enable&#39;
            value: &#39;true&#39;
          }
        param_settings {
            param: &#39;ID&#39;
            value: &#39;notify58&#39;
          }
        param_settings {
            param: &#39;NotifType&#39;
            value: &#39;ObjectDeletion&#39;
          }
        param_settings {
            param: &#39;ReferenceList&#39;
            value: &#39;Device.LocalAgent.Subscription.&#39;
            required: true
          }
        param_settings {
            param: &#39;NotifRetry&#39;
            value: &#39;true&#39;
          }
        }
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier from test setup 2&gt;.&#39;
      }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp</p></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-57">Test Metrics <a href="#sec:test-metrics-57" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a successful AddResp.</p></li>
<li><p>The EUT sends a Notify message with a subscription_id field equal to ‘Notify58’, and an event element of obj_deletion with a obj_path of ‘Device.LocalAgent.Subscription.&lt;instance number&gt;.’</p></li>
</ol>
<h2 id="sec:event-notification-using-periodic">1.59 Event Notification using Periodic! <a href="#sec:event-notification-using-periodic" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-59">Purpose <a href="#sec:purpose-59" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a Notify message to the Controller when the Controller is Subscribed to an Event notification that correlates with an event defined in its supported data model.</p>
<h3 id="sec:functionality-tag-58">Functionality Tag <a href="#sec:functionality-tag-58" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Controller:1 profile and Device.LocalAgent.Controller.{i}.PeriodicNotifTime parameter)</p>
<h3 id="sec:test-setup-59">Test Setup <a href="#sec:test-setup-59" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-58">Test Procedure <a href="#sec:test-procedure-58" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
          allow_partial: false
            update_objs {
                obj_path: &#39;Device.LocalAgent.Controller.&lt;Controller ID&gt;.&#39;
                param_settings {
                    param: &#39;PeriodicNotifInterval&#39;
                    value: &#39;60&#39;
                }
                param_settings {
                    param: &#39;PeriodicNotifTime&#39;
                    value: &#39;2019-01-01T00:00:00Z&#39;
                }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
          allow_partial: false
          create_objs {
              obj_path: &#39;Device.LocalAgent.Subscription.&#39;
              param_settings {
                      param: &#39;Enable&#39;
                      value: &#39;true&#39;
                  }
              param_settings {
                      param: &#39;ID&#39;
                      value: &#39;sub-103&#39;
                  }
              param_settings {
                      param: &#39;NotifType&#39;
                      value: &#39;Event&#39;
                  }
              param_settings {
                      param: &#39;ReferenceList&#39;
                      value: &#39;Device.LocalAgent.Periodic!&#39;
                  }
              }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notification from the EUT.</p></li>
<li><p>Wait for a Notification from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-58">Test Metrics <a href="#sec:test-metrics-58" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a SetResponse with an oper_success after step 1.</li>
<li>The EUT sends an AddResponse with an oper_success after step 2.</li>
<li>The EUT sends a Notification with an Periodic! event element.</li>
<li>A second Periodic event is sent by the EUT 60 (+/- 4) seconds after the first.</li>
</ol>
<h2 id="sec:onboardrequest-notification">1.60 OnBoardRequest Notification <a href="#sec:onboardrequest-notification" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-60">Purpose <a href="#sec:purpose-60" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will send a Notify message to the Controller when the Controller initiates a SendOnBoardRequest() operation.</p>
<h3 id="sec:functionality-tag-59">Functionality Tag <a href="#sec:functionality-tag-59" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.LocalAgent.Controller.{i}.SendOnBoardRequest() command)</p>
<h3 id="sec:test-setup-60">Test Setup <a href="#sec:test-setup-60" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-59">Test Procedure <a href="#sec:test-procedure-59" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
    operate {
      command: &#39;Device.LocalAgent.Controller.&lt;instance identifier of traffic generator&gt;.SendOnBoardRequest()&#39;
      command_key: &#39;test60&#39;
      send_resp: false
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
<li><p>Send a NotifyResp to the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-59">Test Metrics <a href="#sec:test-metrics-59" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message with (at minimum) a subscription_id field equal to ‘Notify60’, and an event element of on_board_req with a obj_path of ‘Device.LocalAgent.Controller.&lt;instance identifier of traffic generator&gt;.’, and appropriate values for the oui, product_class, serial_number, and agent_supported_protocol_versions fields.</li>
</ol>
<h2 id="sec:operate-message-using-reboot-with-send_resp-true">1.61 Operate message using Reboot() with send_resp true <a href="#sec:operate-message-using-reboot-with-send_resp-true" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-61">Purpose <a href="#sec:purpose-61" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process an Operate message using the Reboot() operation as a trigger when send_resp is true.</p>
<h3 id="sec:functionality-tag-60">Functionality Tag <a href="#sec:functionality-tag-60" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Reboot:1 or any other command)</p>
<h3 id="sec:test-setup-61">Test Setup <a href="#sec:test-setup-61" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-60">Test Procedure <a href="#sec:test-procedure-60" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send an Operate message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
    operate {
      command: &#39;Device.Reboot()&#39;
      command_key: &#39;test61&#39;
      send_resp: true
    }
  }
}</code></pre>
<ol>
<li><p>Allow the EUT to send an OperateResp</p></li>
<li><p>Allow the EUT to reboot.</p></li>
</ol>
<h3 id="sec:test-metrics-60">Test Metrics <a href="#sec:test-metrics-60" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an OperateResp message with a single operation_results element containing an executed_command of ‘Device.Reboot()’ and a req_output_args element containing an empty output_args element.</p></li>
<li><p>The EUT reboots and resumes connectivity with the test system.</p></li>
</ol>
<h2 id="sec:operate-message-using-reboot-with-send_resp-false">1.62 Operate message using Reboot() with send_resp false <a href="#sec:operate-message-using-reboot-with-send_resp-false" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-62">Purpose <a href="#sec:purpose-62" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process an Operate message using the Reboot() operation as a trigger when send_resp is false.</p>
<h3 id="sec:functionality-tag-61">Functionality Tag <a href="#sec:functionality-tag-61" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Reboot:1 or any other command)</p>
<h3 id="sec:test-setup-62">Test Setup <a href="#sec:test-setup-62" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-61">Test Procedure <a href="#sec:test-procedure-61" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
    operate {
      command: &#39;Device.Reboot()&#39;
      command_key: &#39;test62&#39;
      send_resp: false
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to reboot.</p></li>
</ol>
<h3 id="sec:test-metrics-61">Test Metrics <a href="#sec:test-metrics-61" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT reboots and resumes connectivity with the test system.</li>
</ol>
<h2 id="sec:operate-message-using-input-arguments-deprecated-by-1.79">1.63 Operate message using input arguments (DEPRECATED by 1.79) <a href="#sec:operate-message-using-input-arguments-deprecated-by-1.79" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>The purpose of this test is to ensure that the Agent will correctly process an Operate message with input arguments.</p>
<p><em>Note: as of TP-469 Amendment 1, this test has been deprecated to sync with the deprecation of Device.LocalAgent.Controller.{i}.ScheduleTimer() in Device:2.14. The command was replaced with Device.ScheduleTimer() and is covered by test 1.79</em></p>
<h3 id="sec:functionality-tag-62">Functionality Tag <a href="#sec:functionality-tag-62" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.LocalAgent.Controller.{i}.ScheduleTimer() command or at least one operation that contains input arguments)</p>
<h3 id="sec:test-setup-63">Test Setup <a href="#sec:test-setup-63" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT, subscribed to the Timer! event.</li>
</ol>
<h3 id="sec:test-procedure-62">Test Procedure <a href="#sec:test-procedure-62" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Controller.&lt;Controller instance&gt;.ScheduleTimer()&#39;
            command_key: &#39;test63&#39;
            send_resp: true
            input_args {
                key: &#39;DelaySeconds&#39;
                value: &#39;30&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a Timer! event.</p></li>
</ol>
<h3 id="sec:test-metrics-62">Test Metrics <a href="#sec:test-metrics-62" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResp message with a single operation_results element containing an executed_command of ‘Device.LocalAgent.Controller.&lt;Controller instance&gt;.ScheduleTimer()’ and a req_output_args element containing an empty output_args element.</li>
<li>The EUT sends a Notify message containing a Event message with obj_path of ‘Device.LocalAgent.Controller.&lt;Controller instance&gt;.ScheduleTimer()’.</li>
</ol>
<h2 id="sec:asynchronous-operation-with-send_resp-true">1.64 Asynchronous operation with send_resp true <a href="#sec:asynchronous-operation-with-send_resp-true" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-63">Purpose <a href="#sec:purpose-63" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process an Operate message where the operation is asynchronous and send_resp is set to true.</p>
<h3 id="sec:functionality-tag-63">Functionality Tag <a href="#sec:functionality-tag-63" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the TraceRoute:1 profile or at least one other asynchronous operation)</p>
<h3 id="sec:test-setup-64">Test Setup <a href="#sec:test-setup-64" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT that is subscribed to the OperationComplete notification for TraceRoute().</li>
</ol>
<h3 id="sec:test-procedure-63">Test Procedure <a href="#sec:test-procedure-63" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.IP.Diagnostics.TraceRoute()&#39;
            command_key: &#39;test64&#39;
            send_resp: true
            input_args {
               key: &#39;Host&#39;
               value: &#39;&lt;remote host IP&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send an Operate Response message with a req_object_path which matches the command sent in the Operate message</p></li>
<li><p>Allow the EUT to send a Notify message with an inner OperationComplete message with a obj_path element matching the command sent in the Operate Message.</p></li>
</ol>
<h3 id="sec:test-metrics-63">Test Metrics <a href="#sec:test-metrics-63" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResp message with a single operation_results element containing an executed_command of ‘Device.IP.Diagnostics.TraceRoute()’ and a req_obj_path field containing a path name to the Request object created by the EUT.</li>
<li>The EUT sends a Notify message containing a OperationComplete message with obj_path of ‘Device.IP.Diagnostics.TraceRoute()’.</li>
</ol>
<h2 id="sec:asynchronous-operation-with-send_resp-false">1.65 Asynchronous operation with send_resp false <a href="#sec:asynchronous-operation-with-send_resp-false" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-64">Purpose <a href="#sec:purpose-64" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process an Operate message where the operation is asynchronous and send_resp is set to false.</p>
<h3 id="sec:functionality-tag-64">Functionality Tag <a href="#sec:functionality-tag-64" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the TraceRoute:1 profile or at least one other asynchronous operation)</p>
<h3 id="sec:test-setup-65">Test Setup <a href="#sec:test-setup-65" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT that is subscribed to the OperationComplete notification for TraceRoute().</li>
</ol>
<h3 id="sec:test-procedure-64">Test Procedure <a href="#sec:test-procedure-64" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.IP.Diagnostics.TraceRoute()&#39;
            command_key: &#39;test65&#39;
            send_resp: false
            input_args {
                key: &#39;Host&#39;
                value: &#39;&lt;remote host IP&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a Notify message with an inner OperationComplete message with a obj_path element matching the command sent in the OperateMessage.</p></li>
</ol>
<h3 id="sec:test-metrics-64">Test Metrics <a href="#sec:test-metrics-64" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not send an OperateResp message.</li>
<li>The EUT sends a Notify message containing a OperationComplete message with obj_path of ‘Device.IP.Diagnostics.TraceRoute()’.</li>
</ol>
<h2 id="sec:getinstances-using-a-single-object-first_level_only-true">1.66 GetInstances using a single object, first_level_only true <a href="#sec:getinstances-using-a-single-object-first_level_only-true" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-65">Purpose <a href="#sec:purpose-65" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetInstances message on a single object when first_level_only is true.</p>
<h3 id="sec:functionality-tag-65">Functionality Tag <a href="#sec:functionality-tag-65" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-66">Test Setup <a href="#sec:test-setup-66" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that the Agent has at least one entry in the Device.LocalAgent.Controller.{i}. table and supports at least one multi-instance sub-object (e.g., .MTP.{i}., etc.)</li>
</ol>
<h3 id="sec:test-procedure-65">Test Procedure <a href="#sec:test-procedure-65" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetInstances message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            first_level_only: true
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-65">Test Metrics <a href="#sec:test-metrics-65" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with one req_path_results elements containing a requested_path of Device.LocalAgent.Controller. and at least one cur_insts element.</li>
<li>All instantiated_obj_path elements in the GetInstancesResp only contain Device.LocalAgent.Controller. instances.</li>
</ol>
<h2 id="sec:getinstances-using-a-single-object-first_level_only-false">1.67 GetInstances using a single object, first_level_only false <a href="#sec:getinstances-using-a-single-object-first_level_only-false" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-66">Purpose <a href="#sec:purpose-66" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetInstances message on a single object when first_level_only is false.</p>
<h3 id="sec:functionality-tag-66">Functionality Tag <a href="#sec:functionality-tag-66" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-67">Test Setup <a href="#sec:test-setup-67" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that the Agent has at least one entry in the Device.LocalAgent.Controller.{i}. table and supports at least one multi-instance sub-object (e.g., .MTP.{i}., etc.)</li>
</ol>
<h3 id="sec:test-procedure-66">Test Procedure <a href="#sec:test-procedure-66" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetInstances message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            first_level_only: false
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-66">Test Metrics <a href="#sec:test-metrics-66" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with one req_path_results elements containing a requested_path of Device.LocalAgent.Controller., and lists all instances of the Controller object, plus any instances of all sub-objects.</li>
</ol>
<h2 id="sec:getinstances-with-multiple-objects">1.68 GetInstances with multiple objects <a href="#sec:getinstances-with-multiple-objects" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-67">Purpose <a href="#sec:purpose-67" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetInstances message on multiple objects.</p>
<h3 id="sec:functionality-tag-67">Functionality Tag <a href="#sec:functionality-tag-67" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-68">Test Setup <a href="#sec:test-setup-68" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-67">Test Procedure <a href="#sec:test-procedure-67" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetInstances message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            obj_paths: &#39;Device.LocalAgent.MTP.&#39;
            first_level_only: true
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-67">Test Metrics <a href="#sec:test-metrics-67" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with two req_path_results elements containing a requested_path of Device.LocalAgent.Controller. and Device.LocalAgent.MTP.</li>
<li>Both req_path_results and each having at least one cur_insts element.</li>
</ol>
<h2 id="sec:deleted"><em>1.69 DELETED</em> <a href="#sec:deleted" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p><em>Note: This test was formerly named “GetInstances with root object” and was invalid. It has been removed from this version of the test plan and exists only as a placeholder for numeric consistency.</em></p>
<h2 id="sec:getinstances-with-wildcard-search-path">1.70 GetInstances with wildcard search path <a href="#sec:getinstances-with-wildcard-search-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-68">Purpose <a href="#sec:purpose-68" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetInstances message when a wildcard search path is used.</p>
<h3 id="sec:functionality-tag-68">Functionality Tag <a href="#sec:functionality-tag-68" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-69">Test Setup <a href="#sec:test-setup-69" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-68">Test Procedure <a href="#sec:test-procedure-68" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetInstances message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}
body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.*.MTP.&#39;
            first_level_only: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-68">Test Metrics <a href="#sec:test-metrics-68" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with at least one req_path_results element containing a Device.LocalAgent.Controller.{i}.MTP. instance.</li>
</ol>
<h2 id="sec:getinstances-with-search-expression-search-path">1.71 GetInstances with search expression search path <a href="#sec:getinstances-with-search-expression-search-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-69">Purpose <a href="#sec:purpose-69" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetInstances message when a search expression search path is used.</p>
<h3 id="sec:functionality-tag-69">Functionality Tag <a href="#sec:functionality-tag-69" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports least one nested multi-instance object)</p>
<h3 id="sec:test-setup-70">Test Setup <a href="#sec:test-setup-70" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure there is at least one BootParameter for the Controller instance used for testing.</li>
<li>Ensure the Alias of the Controller used for testing is known.</li>
</ol>
<h3 id="sec:test-procedure-69">Test Procedure <a href="#sec:test-procedure-69" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetInstances message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_INSTANCES
}

body {
    request {
        get_instances {
            obj_paths: &#39;Device.LocalAgent.Controller.[Alias==&quot;&lt;Controller alias&gt;&quot;].BootParameter.&#39;
            first_level_only: false
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-69">Test Metrics <a href="#sec:test-metrics-69" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetInstancesResp with at least one req_path_results element containing a Device.LocalAgent.Controller.&lt;Controller instance&gt;.BootParameter. instance.</li>
</ol>
<h2 id="sec:getsupporteddm-using-a-single-object-first_level_only-false-all-options">1.72 GetSupportedDM using a single object, first_level_only false, all options <a href="#sec:getsupporteddm-using-a-single-object-first_level_only-false-all-options" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-70">Purpose <a href="#sec:purpose-70" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetSupportedDM message using a single object, when first_level_only is false and all options are true.</p>
<h3 id="sec:functionality-tag-70">Functionality Tag <a href="#sec:functionality-tag-70" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-71">Test Setup <a href="#sec:test-setup-71" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-70">Test Procedure <a href="#sec:test-procedure-70" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.&#39;
            first_level_only: false
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-70">Test Metrics <a href="#sec:test-metrics-70" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp.</li>
<li>Every req_obj_results element contains all parameters, events, and commands below the specified partial path, plus the supported data model information of all sub-objects.</li>
</ol>
<h2 id="sec:getsupporteddm-using-a-single-object-first_level_only-true-all-options">1.73 GetSupportedDM using a single object, first_level_only true, all options <a href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-all-options" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-71">Purpose <a href="#sec:purpose-71" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetSupportedDM message using a single object, when first_level_only is true and all options are true.</p>
<h3 id="sec:functionality-tag-71">Functionality Tag <a href="#sec:functionality-tag-71" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-72">Test Setup <a href="#sec:test-setup-72" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-71">Test Procedure <a href="#sec:test-procedure-71" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following structure:</p>
<pre><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.&#39;
            first_level_only: true
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-71">Test Metrics <a href="#sec:test-metrics-71" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp containing req_object_results elements for the specified object and each immediate child object.</li>
<li>Only the req_obj_results element of the object specified in obj_paths contains parameters, events, and commands.</li>
</ol>
<h2 id="sec:getsupporteddm-using-a-single-object-first_level_only-true-no-options">1.74 GetSupportedDM using a single object, first_level_only true, no options <a href="#sec:getsupporteddm-using-a-single-object-first_level_only-true-no-options" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-72">Purpose <a href="#sec:purpose-72" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetSupportedDM message using a single object, when first_level_only is true and all options are false.</p>
<h3 id="sec:functionality-tag-72">Functionality Tag <a href="#sec:functionality-tag-72" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-73">Test Setup <a href="#sec:test-setup-73" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-72">Test Procedure <a href="#sec:test-procedure-72" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.&#39;
            first_level_only: true
            return_commands: false
            return_events: false
            return_params: false
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-72">Test Metrics <a href="#sec:test-metrics-72" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp containing req_object_results elements for the specified object and each immediate child object.</li>
<li>None of the req_obj_results elements contain any commands, events, or params.</li>
</ol>
<h2 id="sec:getsupporteddm-using-multiple-objects-first_level_only-true-all-options">1.75 GetSupportedDM using multiple objects, first_level_only true, all options <a href="#sec:getsupporteddm-using-multiple-objects-first_level_only-true-all-options" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-73">Purpose <a href="#sec:purpose-73" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process a GetSupportedDM message using multiple objects, when first_level_only is true and all options are true.</p>
<h3 id="sec:functionality-tag-73">Functionality Tag <a href="#sec:functionality-tag-73" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-74">Test Setup <a href="#sec:test-setup-74" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-73">Test Procedure <a href="#sec:test-procedure-73" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.LocalAgent.Controller.&#39;
            obj_paths: &#39;Device.LocalAgent.MTP.&#39;
            first_level_only: true
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-73">Test Metrics <a href="#sec:test-metrics-73" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp containing req_object_results elements for the specified objects and each immediate child object.</li>
<li>Only the req_obj_results element of the object specified in obj_paths contains parameters, events, and commands.</li>
</ol>
<h2 id="sec:getsupporteddm-on-root-object-all-options">1.76 GetSupportedDM on root object, all options <a href="#sec:getsupporteddm-on-root-object-all-options" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-74">Purpose <a href="#sec:purpose-74" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Agent will correctly process a GetSupportedDM message when the requested path is the root of the data model.</p>
<h3 id="sec:functionality-tag-74">Functionality Tag <a href="#sec:functionality-tag-74" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-75">Test Setup <a href="#sec:test-setup-75" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-74">Test Procedure <a href="#sec:test-procedure-74" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths:&#39;Device.&#39;
            first_level_only: false
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-74">Test Metrics <a href="#sec:test-metrics-74" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResp message with one or more req__results specifying its entire supported data model, listing commands, parameters, and events.</li>
</ol>
<h2 id="sec:getsupporteddm-on-unsupported-object">1.77 GetSupportedDM on unsupported object <a href="#sec:getsupporteddm-on-unsupported-object" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:procedure">Procedure <a href="#sec:procedure" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Agent will correctly process a GetSupportedDM message when the requested path is an unsupported object.</p>
<h3 id="sec:functionality-tag-75">Functionality Tag <a href="#sec:functionality-tag-75" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-76">Test Setup <a href="#sec:test-setup-76" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-75">Test Procedure <a href="#sec:test-procedure-75" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetSupportedDM to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths:&#39;Device.LocalAgent.UnsupportedObject.&#39;
            first_level_only: false
            return_commands: true
            return_events: true
            return_params: true
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-75">Test Metrics <a href="#sec:test-metrics-75" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT returns a GetSupportedDMResp with a single req_obj_results with a err_code of 7026.</li>
</ol>
<h2 id="sec:removal-of-subscriptions-that-have-no-associated-controller">1.78 Removal of subscriptions that have no associated controller <a href="#sec:removal-of-subscriptions-that-have-no-associated-controller" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-75">Purpose <a href="#sec:purpose-75" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>According to the Device.LocalAgent.Subscription.{i}.Recipient parameter:</p>
<pre><code>The value MUST be the Path Name of the Controller instance that will receive the Notification associated with this Subscription. If the referenced object is deleted, this instance MUST also be deleted (so the parameter value will never be an empty string).</code></pre>
<p>This test validates that if a Controller is removed from the Agent’s Device. LocalAgent.Controller.{i}. table, any associated Subscription objects are also removed.</p>
<h3 id="sec:functionality-tag-76">Functionality Tag <a href="#sec:functionality-tag-76" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditonal Mandatory (supports Controller:1 profile with the ability to create instances of the Device.LocalAgent.Controller. object)</p>
<h3 id="sec:test-setup-77">Test Setup <a href="#sec:test-setup-77" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that the EUT has two Controller instances in its Device.LocalAgent. Controller.{i}. table, and that both Controllers can be simulated by the test equipment. Consider one to be the primary Controller, and the other to be the secondary Controller. Record the secondary Controller’s instance identifier.</p></li>
<li><p>Ensure that there is at least one Subscription object in the EUT’s Device.LocalAgent.Subscription.{i}. table created by the secondary Controller.</p></li>
</ol>
<h3 id="sec:test-procedure-76">Test Procedure <a href="#sec:test-procedure-76" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Delete message to the EUT with the following structure:</p>
<pre><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Controller.&lt;instance identifier of secondary Controller&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an DeleteResp.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET
}
body {
  request {
    get {
      param_paths: &#39;Device.LocalAgent.Subscription.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-76">Test Metrics <a href="#sec:test-metrics-76" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The Subscription table does not contain the Subscription object outlined in test setup step 3.</li>
</ol>
<h2 id="sec:operate-message-using-input-arguments">1.79 Operate message using input arguments <a href="#sec:operate-message-using-input-arguments" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-76">Purpose <a href="#sec:purpose-76" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will correctly process an Operate message with input arguments.</p>
<h3 id="sec:functionality-tag-77">Functionality Tag <a href="#sec:functionality-tag-77" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.ScheduleTimer() command or at least one operation that contains input arguments)</p>
<h3 id="sec:test-setup-78">Test Setup <a href="#sec:test-setup-78" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT with NotifType OperationComplete on Device.ScheduleTimer().</li>
</ol>
<h3 id="sec:test-procedure-77">Test Procedure <a href="#sec:test-procedure-77" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: OPERATE
}
body {
  request {
      operate {
          command: &#39;Device.ScheduleTimer()&#39;
          command_key: &#39;test79&#39;
          send_resp: true
          input_args {
              key: &#39;DelaySeconds&#39;
              value: &#39;30&#39;
          }
      }
  }
}</code></pre></li>
<li><p>Wait at least 30 seconds.</p></li>
<li><p>Allow the EUT to send a Notify message.</p></li>
</ol>
<h3 id="sec:test-metrics-77">Test Metrics <a href="#sec:test-metrics-77" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResp message with the <code>req_obj_path</code> field, containing an Object Instance Path to the Request Object created as a result of this asynchronous operation.</li>
<li>The EUT sends a Notify message containing a valid OperationComplete event, with a <code>command_name</code> of ‘ScheduleTimer()’, an <code>obj_path</code> of ‘Device.’, and a <code>command_key</code> of ‘test79’.</li>
</ol>
<h2 id="sec:getsupportedprotocol">1.80 GetSupportedProtocol <a href="#sec:getsupportedprotocol" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-77">Purpose <a href="#sec:purpose-77" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Controller can learn the supported USP protocol version(s) of the EUT.</p>
<h3 id="sec:functionality-tag-78">Functionality Tag <a href="#sec:functionality-tag-78" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-79">Test Setup <a href="#sec:test-setup-79" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-78">Test Procedure <a href="#sec:test-procedure-78" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedProtocol message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: GET_SUPPORTED_PROTO
}
body {
  request {
    get_supported_protocol {
      controller_supported_protocol_versions: &#39;&lt;comma-separated list of USP specification versions&gt;&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a GetSupportedProtocolResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-78">Test Metrics <a href="#sec:test-metrics-78" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s sends a GetSupportedProtocolResponse.</p></li>
<li><p>The agent_supported_protocol_versions element contains a comma-separated list of supported USP specification versions.</p></li>
</ol>
<h2 id="sec:automatic-unique-key-generation">1.81 Automatic unique key generation <a href="#sec:automatic-unique-key-generation" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-78">Purpose <a href="#sec:purpose-78" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to validate that the EUT assigns unique keys which are not supplied in the Add message.</p>
<h3 id="sec:functionality-tag-79">Functionality Tag <a href="#sec:functionality-tag-79" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-80">Test Setup <a href="#sec:test-setup-80" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>If the EUT has a limit on the number of instances of the Subscription object, ensure that the number of existing Subscription object instances is less than the maximum supported.</p></li>
</ol>
<h3 id="sec:test-procedure-79">Test Procedure <a href="#sec:test-procedure-79" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
    request {
      add {
        allow_partial: false
          create_objs {
              obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                    param: &#39;Enable&#39;
                    value: &#39;true&#39;
                  }
                param_settings {
                    param: &#39;NotifType&#39;
                    value: &#39;ValueChange&#39;
                  }
                param_settings {
                    param: &#39;ReferenceList&#39;
                    value: &#39;Device.LocalAgent.SoftwareVersion&#39;
                  }
              }
          create_objs {
              obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                  param: &#39;Enable&#39;
                  value: &#39;true&#39;
                }
                param_settings {
                  param: &#39;NotifType&#39;
                  value: &#39;ValueChange&#39;
                }
                param_settings {
                  param: &#39;ReferenceList&#39;
                  value: &#39;Device.LocalAgent.EndpointID&#39;
                }
            }
        }
    }
  }</code></pre></li>
<li><p>Allow the EUT to send an AddResp.</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Clean-up: Send a Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: DELETE
}
body {
  request {
    delete {
      allow_partial: false
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 1&gt;.&#39;
      obj_paths: &#39;Device.LocalAgent.Subscription.&lt;instance identifier 2&gt;.&#39;
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send a DeleteResp.</p></li>
</ol>
<h3 id="sec:test-metrics-79">Test Metrics <a href="#sec:test-metrics-79" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT’s AddResp is valid.</p></li>
<li><p>The AddResp contains two CreatedObjectResults that each have an OperationStatus of OperationSuccess. The OperationSuccess elements contains no parameter errors and 3 elements in the unique key map: Alias, Recipient, and ID. The values of Alias and ID must differ between the two CreatedObjectResults, and the values of Recipient must be identical. Alternatively, the OperationSuccess contains 2 elements in the unique key map if the Alias parameter is not supported: Recipient, and ID. In this case the values of ID must differ between the two CreatedObjectResults, and the values of Recipient must be identical.</p></li>
</ol>
<h2 id="sec:get-message-with-unmatched-search-expression">1.82 Get message with unmatched search expression <a href="#sec:get-message-with-unmatched-search-expression" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-79">Purpose <a href="#sec:purpose-79" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that the EUT sends a successful empty response when a Get request using a search expression returns no objects.</p>
<h3 id="sec:functionality-tag-80">Functionality Tag <a href="#sec:functionality-tag-80" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-81">Test Setup <a href="#sec:test-setup-81" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that no Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-80">Test Procedure <a href="#sec:test-procedure-80" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>    header {
      msg_id: &#39;&lt;msg_id&gt;&#39;
      msg_type: GET
    }
    body {
      request {
        get {
      param_paths: &#39;Device.LocalAgent.Subscription.[Enable==true].&#39;
        }
      }
    }</code></pre></li>
<li><p>Allow the EUT to send a GetResp.</p></li>
</ol>
<h3 id="sec:test-metrics-80">Test Metrics <a href="#sec:test-metrics-80" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetResp.</p></li>
<li><p>The GetResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[Enable==true].’, and an empty resolved_path_results element (i.e., <code>resolved_path_results{}</code>).</p></li>
</ol>
<h2 id="sec:getinstances-message-with-unmatched-search-expression">1.83 GetInstances message with unmatched search expression <a href="#sec:getinstances-message-with-unmatched-search-expression" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-80">Purpose <a href="#sec:purpose-80" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that the EUT sends a successful empty response when a GetInstances request using a search expression returns no objects.</p>
<h3 id="sec:functionality-tag-81">Functionality Tag <a href="#sec:functionality-tag-81" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-82">Test Setup <a href="#sec:test-setup-82" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure that no Subscription objects exist on the EUT.</p></li>
</ol>
<h3 id="sec:test-procedure-81">Test Procedure <a href="#sec:test-procedure-81" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetInstances message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>    header {
      msg_id: &#39;&lt;msg_id&gt;&#39;
      msg_type: GET_INSTANCES
    }
    body {
      request {
        get_instances {
      obj_paths: &#39;Device.LocalAgent.Subscription.[Enable==true].&#39;
        }
      }
    }</code></pre></li>
<li><p>Allow the EUT to send a GetInstancesResp.</p></li>
</ol>
<h3 id="sec:test-metrics-81">Test Metrics <a href="#sec:test-metrics-81" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends a GetInstancesResp.</p></li>
<li><p>The GetInstancesResp contains a single req_path_results element. The requested_path_results has no errors, has a requested_path equal to ‘Device.LocalAgent.Subscription.[Enable==true].’, and an empty curr_insts element (i.e., <code>curr_insts{}</code>).</p></li>
</ol>
<h2 id="sec:notification---subscription-using-search-paths">1.84 Notification - Subscription using search paths <a href="#sec:notification---subscription-using-search-paths" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-81">Purpose <a href="#sec:purpose-81" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Agent will create and acknowledge Subscriptions containing a search path, and notifies the Controller when the conditions of the subscription are triggered.</p>
<h3 id="sec:functionality-tag-82">Functionality Tag <a href="#sec:functionality-tag-82" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-83">Test Setup <a href="#sec:test-setup-83" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</p></li>
<li><p>Ensure there are at least 2 enabled BootParameter instances under the Controller used for testing.</p></li>
</ol>
<h3 id="sec:test-procedure-82">Test Procedure <a href="#sec:test-procedure-82" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &quot;&lt;msg_id&gt;&quot;
  msg_type: ADD
}

body {
  request {
    add {
      allow_partial: false
      create_objs {
        obj_path: &quot;Device.LocalAgent.Subscription.&quot;
        param_settings: {
            param: &quot;Enable&quot;
            value: &quot;true&quot;
        }
        param_settings: {
            param: &quot;ID&quot;
            value: &quot;notify84&quot;
        }
        param_settings: {
            param: &quot;NotifType&quot;
            value: &quot;ValueChange&quot;
        }
        param_settings: {
            param: &quot;ReferenceList&quot;
            value: &quot;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.*.Enable&quot;
            required: true
        }
      }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResp</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &quot;&lt;msg_id&gt;&quot;
  msg_type: SET
}

body {
  request {

    set {
      allow_partial: false
      update_objs {
        obj_path: &quot;Device.LocalAgent.Controller.&lt;instance identifier of Controller&gt;.BootParameter.&lt;valid BootParameter instance&gt;&quot;
        param_settings: {
         param: &quot;Enable&quot;
         value: &quot;false&quot;
         required: true
        }
      }
    }
  }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-82">Test Metrics <a href="#sec:test-metrics-82" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>The EUT sends an AddResp.</p></li>
<li><p>The EUT sends a notification for the created subscription containing the BootParameter modified in step 3.</p></li>
</ol>
<h1 id="sec:authentication-and-access-control-test-cases">2 Authentication and Access Control Test Cases <a href="#sec:authentication-and-access-control-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:agent-does-not-accept-messages-from-its-own-endpoint-id">2.1 Agent does not accept messages from its own Endpoint ID <a href="#sec:agent-does-not-accept-messages-from-its-own-endpoint-id" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-82">Purpose <a href="#sec:purpose-82" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not respond to a USP message when the from_id is the EUT’s endpoint ID.</p>
<h3 id="sec:functionality-tag-83">Functionality Tag <a href="#sec:functionality-tag-83" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-84">Test Setup <a href="#sec:test-setup-84" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-steps">Test Steps <a href="#sec:test-steps" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a message to the EUT with the following record structure:</p>
<pre data-filter="pbv" type="Record"><code>    to_id: &#39;&lt;EUT_ID&gt;&#39;
    from_id: &#39;&lt;EUT_ID&gt;&#39;

    session_context {
        # ...
    }</code></pre></li>
</ol>
<h3 id="sec:test-metrics-83">Test Metrics <a href="#sec:test-metrics-83" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the message.</li>
</ol>
<h2 id="sec:agent-rejects-messages-that-do-not-contain-its-to_id-in-the-usp-record">2.2 Agent rejects messages that do not contain its to_id in the USP Record <a href="#sec:agent-rejects-messages-that-do-not-contain-its-to_id-in-the-usp-record" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-83">Purpose <a href="#sec:purpose-83" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not respond to a USP message when the USP record doesn’t contain a the EUT’s to_id.</p>
<h3 id="sec:functionality-tags-1">Functionality Tags <a href="#sec:functionality-tags-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-85">Test Setup <a href="#sec:test-setup-85" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-steps-1">Test Steps <a href="#sec:test-steps-1" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a message to the EUT with the following record structure:</p>
<pre data-filter="pbv" type="Record"><code>    to_id: &#39;&lt;invalid ID&gt;&#39;
    from_id: &#39;&lt;EUT_ID&gt;&#39;

    # ...</code></pre></li>
</ol>
<h3 id="sec:test-metrics-84">Test Metrics <a href="#sec:test-metrics-84" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the USP message.</li>
</ol>
<h2 id="sec:agent-does-not-process-messages-without-s-certificate-information---deprecated">2.3 Agent does not process messages without ’s certificate information - DEPRECATED <a href="#sec:agent-does-not-process-messages-without-s-certificate-information---deprecated" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-84">Purpose <a href="#sec:purpose-84" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the EUT doesn’t process a USP message when the EUT does not possess the Controller’s certificate information.</p>
<h3 id="sec:functionality-tags-2">Functionality Tags <a href="#sec:functionality-tags-2" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Deprecated</p>
<h3 id="sec:test-setup-86">Test Setup <a href="#sec:test-setup-86" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Simulate a second Controller whose credentials are signed by an untrusted certificate authority.</li>
<li>Ensure that the UntrustedRole feature is either unsupported or disabled in the EUT.</li>
</ol>
<h3 id="sec:test-procedure-83">Test Procedure <a href="#sec:test-procedure-83" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message from the second simulated Controller to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}

body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-85">Test Metrics <a href="#sec:test-metrics-85" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT does not respond to the Get message.</li>
</ol>
<h2 id="sec:agent-rejects-messages-from-endpoint-ids-that-are-not-in-subjectaltname---deprecated">2.4 Agent rejects messages from Endpoint IDs that are not in subjectAltName - DEPRECATED <a href="#sec:agent-rejects-messages-from-endpoint-ids-that-are-not-in-subjectaltname---deprecated" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-85">Purpose <a href="#sec:purpose-85" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the EUT rejects a message from an Endpoint ID that doesn’t match the subjectAltName in the provided certificate.</p>
<h3 id="sec:functionality-tags-3">Functionality Tags <a href="#sec:functionality-tags-3" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Deprecated</p>
<h3 id="sec:test-setup-87">Test Setup <a href="#sec:test-setup-87" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-84">Test Procedure <a href="#sec:test-procedure-84" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT using a certificate with a subjectAltName that does not match the Controller’s Endpoint ID.</li>
</ol>
<h3 id="sec:test-metrics-86">Test Metrics <a href="#sec:test-metrics-86" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the Get message.</li>
</ol>
<h2 id="sec:agent-use-of-self-signed-certificates---deprecated">2.5 Agent use of self-signed certificates - DEPRECATED <a href="#sec:agent-use-of-self-signed-certificates---deprecated" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-86">Purpose <a href="#sec:purpose-86" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can handle self-signed certificates.</p>
<h3 id="sec:functionality-tags-4">Functionality Tags <a href="#sec:functionality-tags-4" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Deprecated</p>
<h3 id="sec:test-setup-88">Test Setup <a href="#sec:test-setup-88" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the is configured to use a self-signed certificate and Endpoint ID that the EUT has not seen.</li>
</ol>
<h3 id="sec:test-procedure-85">Test Procedure <a href="#sec:test-procedure-85" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT using a self-signed cert with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-87">Test Metrics <a href="#sec:test-metrics-87" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT responds to the Get with a GetResponse containing a Device.LocalAgent.ControllerTrust.{i}.Alias parameter.</li>
</ol>
<h2 id="sec:connecting-without-absolute-time">2.6 Connecting without absolute time <a href="#sec:connecting-without-absolute-time" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-87">Purpose <a href="#sec:purpose-87" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can communicate with a Controller if it cannot obtain an absolute time.</p>
<h3 id="sec:functionality-tags-5">Functionality Tags <a href="#sec:functionality-tags-5" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports USP Session Context)</p>
<h3 id="sec:test-setup-89">Test Setup <a href="#sec:test-setup-89" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is booted into a test environment where it cannot resolve absolute time.</li>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller is configured to use an expired certificate.</li>
</ol>
<h3 id="sec:test-procedure-86">Test Procedure <a href="#sec:test-procedure-86" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header{
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-88">Test Metrics <a href="#sec:test-metrics-88" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT responds to the Get message with a GetReponse, ignoring the expired dates on the certificate.</li>
</ol>
<h2 id="sec:agent-ignores-unsigned-or-invalid-record-signatures">2.7 Agent ignores unsigned or invalid Record signatures <a href="#sec:agent-ignores-unsigned-or-invalid-record-signatures" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-88">Purpose <a href="#sec:purpose-88" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will ignore a USP record when the signature field is invalid.</p>
<h3 id="sec:functionality-tags-6">Functionality Tags <a href="#sec:functionality-tags-6" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports USP Session Context)</p>
<h3 id="sec:test-setup-90">Test Setup <a href="#sec:test-setup-90" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-87">Test Procedure <a href="#sec:test-procedure-87" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT with an invalid signature value.</li>
</ol>
<h3 id="sec:test-metrics-89">Test Metrics <a href="#sec:test-metrics-89" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not respond to the Get message.</li>
</ol>
<h2 id="sec:agent-ignores-invalid-tls-certificate">2.8 Agent ignores invalid TLS certificate <a href="#sec:agent-ignores-invalid-tls-certificate" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-89">Purpose <a href="#sec:purpose-89" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT rejects TLS connections when an Endpoint’s TLS certificate is invalid.</p>
<h3 id="sec:functionality-tags-7">Functionality Tags <a href="#sec:functionality-tags-7" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (Supports USP Session Context)</p>
<h3 id="sec:test-setup-91">Test Setup <a href="#sec:test-setup-91" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has obtained an absolute time reference.</li>
</ol>
<h3 id="sec:test-procedure-88">Test Procedure <a href="#sec:test-procedure-88" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT with an expired TLS certificate.</li>
</ol>
<h3 id="sec:test-metrics-90">Test Metrics <a href="#sec:test-metrics-90" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT doesn’t respond to the Get message.</li>
</ol>
<h2 id="sec:use-of-the-untrusted-role">2.9 Use of the Untrusted role <a href="#sec:use-of-the-untrusted-role" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-90">Purpose <a href="#sec:purpose-90" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly assigns new a Role of Untrusted.</p>
<h3 id="sec:functionality-tags-8">Functionality Tags <a href="#sec:functionality-tags-8" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile)</p>
<h3 id="sec:test-setup-92">Test Setup <a href="#sec:test-setup-92" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-89">Test Procedure <a href="#sec:test-procedure-89" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Using a secondary Controller, connect to the EUT and send an Get message.</p></li>
<li><p>Using the primary trusted Controller send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-91">Test Metrics <a href="#sec:test-metrics-91" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the <code>Device.LocalAgent.Controller.&lt;secondary Controller instance&gt;.AssignedRole</code> matches the value of <code>Device.LocalAgent.ControllerTrust.UntrustedRole</code>.</li>
</ol>
<h2 id="sec:adding-a-role">2.10 Adding a Role <a href="#sec:adding-a-role" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-91">Purpose <a href="#sec:purpose-91" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that the Add message can be used to add new Roles to the EUT’s data model.</p>
<h3 id="sec:functionality-tags-9">Functionality Tags <a href="#sec:functionality-tags-9" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile)</p>
<h3 id="sec:test-setup-93">Test Setup <a href="#sec:test-setup-93" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-90">Test Procedure <a href="#sec:test-procedure-90" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&#39;
                param_settings {
                    param: &#39;Enable&#39;
                    value: &#39;true&#39;
                }
                param_settings {
                    param: &#39;Name&#39;
                    value: &#39;Trusted&#39;
                }
            }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-92">Test Metrics <a href="#sec:test-metrics-92" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT correctly sent an AddResponse with a new Role instance.</li>
</ol>
<h2 id="sec:permissions---object-creation-allowed">2.11 Permissions - Object Creation Allowed <a href="#sec:permissions---object-creation-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-92">Purpose <a href="#sec:purpose-92" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to allow the creation of a particular object.</p>
<h3 id="sec:functionality-tags-10">Functionality Tags <a href="#sec:functionality-tags-10" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-94">Test Setup <a href="#sec:test-setup-94" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
</ol>
<h3 id="sec:test-procedure-91">Test Procedure <a href="#sec:test-procedure-91" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;Obj&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
            }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-93">Test Metrics <a href="#sec:test-metrics-93" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.Subscription. object in step 2.</li>
</ol>
<h2 id="sec:permissions---object-creation-not-allowed">2.12 Permissions - Object Creation Not Allowed <a href="#sec:permissions---object-creation-not-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-93">Purpose <a href="#sec:purpose-93" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to restrict the creation of a particular object.</p>
<h3 id="sec:functionality-tags-11">Functionality Tags <a href="#sec:functionality-tags-11" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-95">Test Setup <a href="#sec:test-setup-95" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
</ol>
<h3 id="sec:test-procedure-92">Test Procedure <a href="#sec:test-procedure-92" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send an Add message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;Obj&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre>
<ol>
<li>Send an Add message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
            }
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-94">Test Metrics <a href="#sec:test-metrics-94" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an Error containing type 7006 - Permission Denied.</li>
</ol>
<h2 id="sec:permissions---object-deletion-allowed">2.13 Permissions - Object Deletion Allowed <a href="#sec:permissions---object-deletion-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-94">Purpose <a href="#sec:purpose-94" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to allow the deletion of a particular object.</p>
<h3 id="sec:functionality-tags-12">Functionality Tags <a href="#sec:functionality-tags-12" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-96">Test Setup <a href="#sec:test-setup-96" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
<li>Ensure there is one or more Subscription object that can be deleted.</li>
</ol>
<h3 id="sec:test-procedure-93">Test Procedure <a href="#sec:test-procedure-93" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;InstantiatedObj&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: DELETE
}
body {
    request {
        delete {
            allow_partial: false
            obj_paths: &#39;Device.LocalAgent.Subscription.&lt;subscription to delete&gt;&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-95">Test Metrics <a href="#sec:test-metrics-95" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an DeleteResponse with a oper_success element containing the Device.LocalAgent.Subscription. object in step 2.</li>
</ol>
<h2 id="sec:permissions---object-deletion-not-allowed">2.14 Permissions - Object Deletion Not Allowed <a href="#sec:permissions---object-deletion-not-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-95">Purpose <a href="#sec:purpose-95" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to restrict the deletion of a particular object.</p>
<h3 id="sec:functionality-tags-13">Functionality Tags <a href="#sec:functionality-tags-13" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-97">Test Setup <a href="#sec:test-setup-97" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
<li>Ensure there is one or more Subscription object that can be deleted.</li>
</ol>
<h3 id="sec:test-procedure-94">Test Procedure <a href="#sec:test-procedure-94" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&#39;
                    }
                param_settings {
                        param: &#39;InstantiatedObj&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Delete message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: DELETE
}
body {
    request {
        delete {
            allow_partial: false
            obj_paths: &#39;Device.LocalAgent.Subscription.&lt;subscription to delete&gt;&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-96">Test Metrics <a href="#sec:test-metrics-96" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an Error containing type 7006 - Permission Denied.</li>
</ol>
<h2 id="sec:permissions---parameter-update-allowed">2.15 Permissions - Parameter Update Allowed <a href="#sec:permissions---parameter-update-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-96">Purpose <a href="#sec:purpose-96" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to allow the update of a particular object.</p>
<h3 id="sec:functionality-tags-14">Functionality Tags <a href="#sec:functionality-tags-14" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-98">Test Setup <a href="#sec:test-setup-98" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
<li>Ensure there is one or more Subscription object that can be edited.</li>
</ol>
<h3 id="sec:test-procedure-95">Test Procedure <a href="#sec:test-procedure-95" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            allow_partial: false
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;&lt;negation of previous value&gt;&#39;
                            required: true
                        }
                }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-97">Test Metrics <a href="#sec:test-metrics-97" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends a SetResponse with a oper_success element containing Device.LocalAgent.Subscription.{i}.Enable in step 2.</li>
</ol>
<h2 id="sec:permissions---parameter-update-not-allowed">2.16 Permissions - Parameter Update Not Allowed <a href="#sec:permissions---parameter-update-not-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-97">Purpose <a href="#sec:purpose-97" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to restrict the update of a particular object.</p>
<h3 id="sec:functionality-tags-15">Functionality Tags <a href="#sec:functionality-tags-15" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-99">Test Setup <a href="#sec:test-setup-99" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
<li>Ensure there is one or more Subscription object that can be edited.</li>
</ol>
<h3 id="sec:test-steps-2">Test Steps <a href="#sec:test-steps-2" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            allow_partial: false
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Subscription.&lt;instance that can be edited&gt;.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;&lt;negation of previous value&gt;&#39;
                            required: true
                        }
                }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-98">Test Metrics <a href="#sec:test-metrics-98" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an Error containing type 7006 - Permission Denied.</li>
</ol>
<h2 id="sec:permissions---operation-allowed">2.17 Permissions - Operation Allowed <a href="#sec:permissions---operation-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-98">Purpose <a href="#sec:purpose-98" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to allow the invocation of commands on a particular object.</p>
<h3 id="sec:functionality-tags-16">Functionality Tags <a href="#sec:functionality-tags-16" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-100">Test Setup <a href="#sec:test-setup-100" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
</ol>
<h3 id="sec:test-steps-3">Test Steps <a href="#sec:test-steps-3" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.Reboot()&#39;
                    }
                param_settings {
                        param: &#39;CommandEvent&#39;
                        value: &#39;r-x-&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-99">Test Metrics <a href="#sec:test-metrics-99" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an OperateResponse with a req_output_args element in step 2.</li>
</ol>
<h2 id="sec:permissions---operation-not-allowed">2.18 Permissions - Operation Not Allowed <a href="#sec:permissions---operation-not-allowed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-99">Purpose <a href="#sec:purpose-99" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to restrict the invocation of commands on a particular object.</p>
<h3 id="sec:functionality-tags-17">Functionality Tags <a href="#sec:functionality-tags-17" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-101">Test Setup <a href="#sec:test-setup-101" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
</ol>
<h3 id="sec:test-steps-4">Test Steps <a href="#sec:test-steps-4" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.Reboot()&#39;
                    }
                param_settings {
                        param: &#39;CommandEvent&#39;
                        value: &#39;r---&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-100">Test Metrics <a href="#sec:test-metrics-100" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with a oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an Error containing type 7006 - Permission Denied.</li>
</ol>
<h2 id="sec:permissions---value-change-notification-allowed-on-parameter">2.19 Permissions - Value Change Notification Allowed on Parameter <a href="#sec:permissions---value-change-notification-allowed-on-parameter" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-100">Purpose <a href="#sec:purpose-100" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to allow a Controller to subscribe to the ValueChange notification of a particular parameter.</p>
<h3 id="sec:functionality-tags-18">Functionality Tags <a href="#sec:functionality-tags-18" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-102">Test Setup <a href="#sec:test-setup-102" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
</ol>
<h3 id="sec:test-steps-5">Test Steps <a href="#sec:test-steps-5" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw-n&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;NotifType&#39;
                        value: &#39;ValueChange&#39;
                    }
                param_settings {
                        param: &#39;ReferenceList&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
            }
        }
    }
  }</code></pre></li>
<li><p>Send a Set message to the EUT, setting <code>Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval</code> to a new value.</p></li>
<li><p>Wait for a Notification from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-101">Test Metrics <a href="#sec:test-metrics-101" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with an oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an AddResponse with an oper_success element containing a new Device.LocalAgent.Subscription. object in step 2.</li>
<li>The EUT sends a SetResponse with an oper_success element with the path <code>Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval</code>.</li>
<li>The EUT sends a Notify message with a value_change element pointing to <code>Device.LocalAgent.Controller.&lt;Controller instance&gt;.PeriodicNotifInterval</code>.</li>
</ol>
<h2 id="sec:permissions---value-change-notification-not-allowed-on-parameter">2.20 Permissions - Value Change Notification Not Allowed on Parameter <a href="#sec:permissions---value-change-notification-not-allowed-on-parameter" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-101">Purpose <a href="#sec:purpose-101" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT adheres to permissions set to restrict a Controller from subscribing to the ValueChange notification of a particular parameter.</p>
<h3 id="sec:functionality-tags-19">Functionality Tags <a href="#sec:functionality-tags-19" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-103">Test Setup <a href="#sec:test-setup-103" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
</ol>
<h3 id="sec:test-steps-6">Test Steps <a href="#sec:test-steps-6" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller Role instance&gt;.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw--&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;NotifType&#39;
                        value: &#39;ValueChange&#39;
                    }
                param_settings {
                        param: &#39;ReferenceList&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Set message to the EUT, setting <code>Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval</code> to a new value.</p></li>
<li><p>Wait 30 seconds.</p></li>
</ol>
<h3 id="sec:test-metrics-102">Test Metrics <a href="#sec:test-metrics-102" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse with an oper_success element containing a new Device.LocalAgent.ControllerTrust.Role.{i}.Permission. object in step 1.</li>
<li>The EUT sends an AddResponse with an oper_success element containing a new Device.LocalAgent.Subscription. object in step 2.</li>
<li>The EUT sends a SetResponse with an oper_success element with the path <code>Device.LocalAgent.Controller.&lt;Controller instance id&gt;.PeriodicNotifInterval</code>.</li>
<li>The EUT does not send a Notify message with a value_change element pointing to <code>Device.LocalAgent.Controller.&lt;Controller instance&gt;.PeriodicNotifInterval</code>.</li>
</ol>
<h2 id="sec:permissions---overlapping-permissions">2.21 Permissions - Overlapping Permissions <a href="#sec:permissions---overlapping-permissions" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-102">Purpose <a href="#sec:purpose-102" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT allows for the creation of Permission instances, and when Permissions overlap the EUT behaves correctly.</p>
<h3 id="sec:functionality-tags-20">Functionality Tags <a href="#sec:functionality-tags-20" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-104">Test Setup <a href="#sec:test-setup-104" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
<li>Ensure there is at least one BootParameter configured.</li>
</ol>
<h3 id="sec:test-procedure-96">Test Procedure <a href="#sec:test-procedure-96" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.&lt;Controller id&gt;.Role.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.BootParameter.&lt;boot parameter instance&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;----&#39;
                    }
            }
            create_objs {
                obj_path: &#39;Device.LocalAgent.ControllerTrust.&lt;Controller id&gt;.Role.Permission.&#39;
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;Targets&#39;
                        value: &#39;Device.LocalAgent.Controller.&lt;Controller instance id&gt;.BootParameter.&lt;boot parameter instance&gt;.&#39;
                    }
                param_settings {
                        param: &#39;Param&#39;
                        value: &#39;rw--&#39;
                    }
                param_settings {
                        param: &#39;Order&#39;
                        value: &#39;1&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;Controller instance ID&gt;.BootParameter.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-103">Test Metrics <a href="#sec:test-metrics-103" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse message after step 1. The message contains two oper_success elements, one for each added permission.</li>
<li>The EUT sends a GetResponse with a result_params element containing parameters of the specified BootParameter instance.</li>
</ol>
<h2 id="sec:using-get-when-no-read-permissions-are-available-on-some-parameters">2.22 Using Get when no read permissions are available on some parameters <a href="#sec:using-get-when-no-read-permissions-are-available-on-some-parameters" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-103">Purpose <a href="#sec:purpose-103" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly returns parameters that are readable while ignoring parameters that do not have read permissions.</p>
<h3 id="sec:functionality-tags-21">Functionality Tags <a href="#sec:functionality-tags-21" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the ControllerTrust:1 profile with at least one role that allows object creation, or supports writable parameters in Device.LocalAgent.ControllerTrust.{i}.Role.{i}.)</p>
<h3 id="sec:test-setup-105">Test Setup <a href="#sec:test-setup-105" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the Controller used for testing has an assigned Role that is writable.</li>
<li>Ensure there is at least one BootParameter configured.</li>
</ol>
<h3 id="sec:test-procedure-97">Test Procedure <a href="#sec:test-procedure-97" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            allow_partial: false
            create_objs {
                    obj_path: &#39;Device.LocalAgent.ControllerTrust.Role.&lt;Controller trust instance&gt;.Permission.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;true&#39;
                        }
                    param_settings {
                            param: &#39;Targets&#39;
                            value: &#39;Device.LocalAgent.Controller.&lt;Controller instance ID&gt;.BootParameter.&lt;known instance&gt;.ParameterName&#39;
                        }
                    param_settings {
                            param: &#39;Param&#39;
                            value: &#39;----&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;Controller instance ID&gt;.BootParameter.&lt;known instance&gt;.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-104">Test Metrics <a href="#sec:test-metrics-104" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an AddResponse message after step 1. The message contains a oper_success element for the added Permission.</li>
<li>The EUT sends a GetResponse with a result_params element containing parameters of the specified BootParameter instance, with the exception of the ParameterName parameter.</li>
</ol>
<h1 id="sec:usp-record-test-cases">3 USP Record Test Cases <a href="#sec:usp-record-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:bad-request-outside-a-session-context">3.1 Bad request outside a session context <a href="#sec:bad-request-outside-a-session-context" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-104">Purpose <a href="#sec:purpose-104" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly responds to a bad request outside a session context.</p>
<h3 id="sec:functionality-tags-22">Functionality Tags <a href="#sec:functionality-tags-22" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-106">Test Setup <a href="#sec:test-setup-106" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to not use a session context.</li>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-98">Test Procedure <a href="#sec:test-procedure-98" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP Record to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-105">Test Metrics <a href="#sec:test-metrics-105" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives the malformed USP record, it exibits the expected ‘bad request’ behavior for the applicable MTP.</li>
</ol>
<h2 id="sec:agent-verifies-non-payload-field-integrity">3.2 Agent Verifies Non-Payload Field Integrity <a href="#sec:agent-verifies-non-payload-field-integrity" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-105">Purpose <a href="#sec:purpose-105" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT verifies the integrity of the non-payload fields in a USP record.</p>
<h3 id="sec:functionality-tags-23">Functionality Tags <a href="#sec:functionality-tags-23" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS for USP Record Integrity)’</p>
<h3 id="sec:test-setup-107">Test Setup <a href="#sec:test-setup-107" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the relevant equipment are configured to NOT provide integrity protection at the MTP layer.</li>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP records to each other.</li>
</ol>
<h3 id="sec:test-procedure-99">Test Procedure <a href="#sec:test-procedure-99" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a Get message to the EUT with a <code>payload_security</code> of PLAINTEXT.</li>
</ol>
<h3 id="sec:test-metrics-106">Test Metrics <a href="#sec:test-metrics-106" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives the USP record, it exhibits the expected ‘bad request’ behavior for the applicable MTP.</li>
</ol>
<h2 id="sec:agent-rejects-invalid-signature-starting-a-session-context">3.3 Agent rejects invalid signature starting a session context <a href="#sec:agent-rejects-invalid-signature-starting-a-session-context" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-106">Purpose <a href="#sec:purpose-106" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT handles an attempt to start a session context with an invalid mac_signature.</p>
<h3 id="sec:functionality-tags-24">Functionality Tags <a href="#sec:functionality-tags-24" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS for USP Record Integrity)’</p>
<h3 id="sec:test-setup-108">Test Setup <a href="#sec:test-setup-108" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP records to each other.</li>
</ol>
<h3 id="sec:test-procedure-100">Test Procedure <a href="#sec:test-procedure-100" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a TLS ‘client hello’ to the EUT to begin a session context as described in ‘<a href="https://usp.technology/specification/e2e-message-exchange/">End to End Message Exchange</a>’ in TR-369 with an invalid mac_signature.</li>
</ol>
<h3 id="sec:test-metrics-107">Test Metrics <a href="#sec:test-metrics-107" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives the USP record, it exhibits the expected ‘bad request’ behavior for the applicable MTP.</li>
</ol>
<h2 id="sec:using-tls-for-usp-record-integrity">3.4 Using TLS for USP Record Integrity <a href="#sec:using-tls-for-usp-record-integrity" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-107">Purpose <a href="#sec:purpose-107" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT uses TLS to validate the integrity of USP records when the <code>payload_security</code> is TLS and the TLS handshake has completed.</p>
<h3 id="sec:functionality-tags-25">Functionality Tags <a href="#sec:functionality-tags-25" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS for USP Record Integrity)’</p>
<h3 id="sec:test-setup-109">Test Setup <a href="#sec:test-setup-109" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller are configured to secure the USP record payload with TLS.</li>
</ol>
<h3 id="sec:test-procedure-101">Test Procedure <a href="#sec:test-procedure-101" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a E2E session with the EUT using TLS to secure the payload.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-108">Test Metrics <a href="#sec:test-metrics-108" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>In the GetResponse sent by the EUT, the <code>mac_signature</code> in the USP Record secures the non-payload fields via the MAC mechanism.</li>
<li>The <code>mac_signature</code> in the USP record sent by the EUT validates the integrity of the non-payload fields.</li>
</ol>
<h2 id="sec:failure-to-establish-tls">3.5 Failure to Establish TLS <a href="#sec:failure-to-establish-tls" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-108">Purpose <a href="#sec:purpose-108" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT behaves correctly when the TLS session used to encapsulate the payload cannot be established.</p>
<h3 id="sec:functionality-tags-26">Functionality Tags <a href="#sec:functionality-tags-26" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS for USP Record Integrity)’</p>
<h3 id="sec:test-setup-110">Test Setup <a href="#sec:test-setup-110" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Configure the controller to use TLS12 as a <code>payload_security</code>.</li>
<li>Ensure <code>PeriodicNotifInterval</code> is 60, and the controller used for testing is subscribed to Periodic Event Notification.</li>
</ol>
<h3 id="sec:test-procedure-102">Test Procedure <a href="#sec:test-procedure-102" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
        }
    }
}</code></pre></li>
<li><p>Attempt to establish a new secure session with the EUT using TLS payload encapsulation.</p></li>
<li><p>Configure the controller to send TLS alerts during the TLS handshake process.</p></li>
<li><p>Wait for the EUT to attempt to start a session with the controller.</p></li>
<li><p>Allow the controller to send a TLS alert to the EUT and for the session to terminate.</p></li>
<li><p>Configure the controller to not send a TLS alert.</p></li>
<li><p>Wait for the EUT to retry establishing a E2E session.</p></li>
</ol>
<h3 id="sec:test-metrics-109">Test Metrics <a href="#sec:test-metrics-109" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After sending the client certificate to the EUT, the EUT sends a TLS alert, terminating the session.</li>
<li>After step 5, the EUT waits before retrying the session in accordance with the <code>SessionRetry</code> parameters found in step 1.</li>
</ol>
<h2 id="sec:agent-does-not-accept-tls-renegotiation-for-e2e-message-exchange">3.6 Agent does not accept TLS renegotiation for E2E message exchange <a href="#sec:agent-does-not-accept-tls-renegotiation-for-e2e-message-exchange" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-109">Purpose <a href="#sec:purpose-109" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not accept TLS renegotiation. frames during a E2E message exchange.</p>
<h3 id="sec:functionality-tags-27">Functionality Tags <a href="#sec:functionality-tags-27" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS for USP Record Integrity)’</p>
<h3 id="sec:test-setup-111">Test Setup <a href="#sec:test-setup-111" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure both the EUT and the controller are configured to use TLS payload security.</li>
</ol>
<h3 id="sec:test-procedure-103">Test Procedure <a href="#sec:test-procedure-103" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Establish a E2E session with the EUT.</p></li>
<li><p>Send a request to renegotiate TLS in place of the payload.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-110">Test Metrics <a href="#sec:test-metrics-110" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Between sending the TLS renegotiation request and receiving the GetResponse, the EUT either sends no records, or sends a TLS alert of type <code>no_renegotiation(100)</code>.</li>
</ol>
<h2 id="sec:use-of-x.509-certificates">3.7 Use of X.509 Certificates <a href="#sec:use-of-x.509-certificates" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-110">Purpose <a href="#sec:purpose-110" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses X.509 certificates to authenticate other endpoints, and in turn provides a X.509 certificate for the purpose of authentication.</p>
<h3 id="sec:functionality-tags-28">Functionality Tags <a href="#sec:functionality-tags-28" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>‘Conditional Mandatory (supports Secure Message Exchange using TLS for USP Record Integrity)’</p>
<h3 id="sec:test-setup-112">Test Setup <a href="#sec:test-setup-112" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller are configured to use TLS payload security.</li>
</ol>
<h3 id="sec:test-procedure-104">Test Procedure <a href="#sec:test-procedure-104" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the controller to provide a X.509 certificate with a <code>subjectAltName</code> that does not match the controller’s USP endpoint ID.</p></li>
<li><p>Attempt to start a session with the EUT and send a Get message with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-111">Test Metrics <a href="#sec:test-metrics-111" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>During the TLS handshake the EUT provides a X.509 certificate with a <code>subjectAltName</code> that matches the endpoint ID of the EUT.</li>
<li>During the TLS handshake the EUT requests a X.509 certificate from the controller.</li>
<li>The EUT rejects the controller’s certificate.</li>
</ol>
<h2 id="sec:establishing-a-session-context">3.8 Establishing a Session Context <a href="#sec:establishing-a-session-context" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-111">Purpose <a href="#sec:purpose-111" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can use a session context to exchange USP messages.</p>
<h3 id="sec:functionality-tag-84">Functionality Tag <a href="#sec:functionality-tag-84" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-113">Test Setup <a href="#sec:test-setup-113" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to establish a connection and exchange USP messages.</li>
<li>Ensure at the start of the test there is no existing session context between the EUT and controller.</li>
</ol>
<h3 id="sec:test-procedure-105">Test Procedure <a href="#sec:test-procedure-105" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a session context with the EUT and send a Get message with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-112">Test Metrics <a href="#sec:test-metrics-112" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After step 1, the EUT responds with a USP record containing a session context, a <code>sequence_number</code> of 1 and a <code>session_id</code> that matched the session identifier sent to the EUT.</li>
</ol>
<h2 id="sec:receipt-of-a-record-out-of-a-session-context">3.9 Receipt of a Record out of a Session Context <a href="#sec:receipt-of-a-record-out-of-a-session-context" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-112">Purpose <a href="#sec:purpose-112" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly handles the receiving of a USP record outside of a session context.</p>
<h3 id="sec:functionality-tags-29">Functionality Tags <a href="#sec:functionality-tags-29" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-114">Test Setup <a href="#sec:test-setup-114" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to establish a session and exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedure-106">Test Procedure <a href="#sec:test-procedure-106" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a session with the EUT using a session context.</p></li>
<li><p>Send a Get message to the EUT for <code>Device.DeviceInfo.</code> using a USP Record with the following structure:</p>
<pre><code>Record {
      session_context {
        session_id: &lt;new_session_id&gt;
        sequence_id:  &lt;expected sequence_id&gt;
        expected_id:  &lt;expected expected_id&gt;
        payload {
            #  ...
          }
        }
      }</code></pre></li>
</ol>
<h3 id="sec:test-metrics-113">Test Metrics <a href="#sec:test-metrics-113" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends the GetResponse in a USP Record using the new <code>session_id</code> and a <code>sequence_id</code> of 1.</li>
</ol>
<h2 id="sec:session-context-expiration">3.10 Session Context Expiration <a href="#sec:session-context-expiration" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-113">Purpose <a href="#sec:purpose-113" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly adheres to the <code>SessionExpiration</code> parameter.</p>
<h3 id="sec:fuctionality-tags">Fuctionality Tags <a href="#sec:fuctionality-tags" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-115">Test Setup <a href="#sec:test-setup-115" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information required to start a session and exchange USP records.</li>
<li>Ensure the controller is subscribed to Periodic! event.</li>
</ol>
<h3 id="sec:test-procedure-107">Test Procedure <a href="#sec:test-procedure-107" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
                    param_settings {
                            param: &#39;SessionExpiration&#39;
                            value: &#39;60&#39;
                        }
                }
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.&#39;
                    param_settings {
                            param: &#39;PeriodicNotifInterval&#39;
                            value: &#39;10&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Wait for 3 Notify messages from the EUT containing a Periodic! event.</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
                    param_settings: {
                            param: &#39;SessionExpiration&#39;
                            value: &#39;5&#39;
                        }
                }
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.&#39;
                    param_settings {
                            param: &#39;PeriodicNotifInterval&#39;
                            value: &#39;10&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Wait for 3 Notify messages from the EUT containing a Periodic! event.</p></li>
</ol>
<h3 id="sec:test-metrics-114">Test Metrics <a href="#sec:test-metrics-114" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>All three Notify messages received in step 2 use the same session context.</li>
<li>None of the three Notify messages received in step 4 shared the same session context.</li>
</ol>
<h2 id="sec:use-of-sequence-id-and-expected-id">3.11 Use of Sequence ID and Expected ID <a href="#sec:use-of-sequence-id-and-expected-id" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-114">Purpose <a href="#sec:purpose-114" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses the <code>sequence_id</code> and <code>expected_id</code> attributes found in a session context.</p>
<h3 id="sec:functionality-tags-30">Functionality Tags <a href="#sec:functionality-tags-30" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-116">Test Setup <a href="#sec:test-setup-116" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to start a session and exchange USP messages.</li>
<li>Ensure the controller is not subscribed to any events on the EUT.</li>
</ol>
<h3 id="sec:test-procedure-108">Test Procedure <a href="#sec:test-procedure-108" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Start a session with the EUT.</li>
<li>Send a Get message to the EUT with the expected <code>sequence_id</code> and <code>expected_id</code> for <code>Device.DeviceInfo.ModelNumber</code>.</li>
<li>Send a Get message to the EUT with the <code>sequence_id</code> set to the expected value plus 2 for <code>Device.DeviceInfo.SoftwareVersion</code>.</li>
<li>Send a Get message to the EUT with the <code>sequence_id</code> set to 2 less than the expected value for <code>Device.DeviceInfo.HardwareVersion</code>.</li>
<li>Send a Get message to the EUT with the expected <code>sequence_id</code> and <code>expected_id</code> for <code>Device.DeviceInfo.HardwareVersion</code>.</li>
</ol>
<h3 id="sec:test-metrics-115">Test Metrics <a href="#sec:test-metrics-115" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After step 1 the EUT returns a GetResponse with a <code>sequence_id</code> that matches the <code>expected_id</code> in the record that was sent.</li>
<li>After step 3 the EUT returns a GetResponse with a <code>sequence_id</code> that matches the <code>expected_id</code> in the record that was sent in step 4.</li>
<li>The EUT never sends a GetResponse with a <code>sequence_id</code> that matches the <code>expected_id</code> in the record sent in step 3.</li>
<li>After step 5 the EUT returns a GetResponse with a <code>sequence_id</code> that matches the <code>expected_id</code> in the record that was sent.</li>
<li>After step 5 The EUT sends a GetResponse containing the parameter <code>Device.DeviceInfo.SoftwareVersion</code>.</li>
</ol>
<h2 id="sec:preservation-of-usp-records">3.12 Preservation of USP Records <a href="#sec:preservation-of-usp-records" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<p>The purpose of this test is to ensure the EUT preserves a sent record in the event the receiving endpoint requests a retransmission.</p>
<h3 id="sec:functionality-tags-31">Functionality Tags <a href="#sec:functionality-tags-31" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-117">Test Setup <a href="#sec:test-setup-117" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to start a session an exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedures">Test Procedures <a href="#sec:test-procedures" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Start a new session.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait 60 seconds.</p></li>
<li><p>Send a USP record to the EUT with a <code>retransmit_id</code> set to the <code>expected_id</code> value in the record sent in step 1.</p></li>
</ol>
<h3 id="sec:test-metrics-116">Test Metrics <a href="#sec:test-metrics-116" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends the same GetResponse twice, once after step 2 and once after step 4.</li>
</ol>
<h2 id="sec:agent-rejects-records-with-different-payload-security-than-the-established-context">3.13 Agent Rejects Records with Different Payload Security than the Established Context <a href="#sec:agent-rejects-records-with-different-payload-security-than-the-established-context" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-115">Purpose <a href="#sec:purpose-115" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT does not accept USP Records that have a different <code>payload_security</code> value than the that of the established session context.</p>
<h3 id="sec:functionality-tags-32">Functionality Tags <a href="#sec:functionality-tags-32" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-118">Test Setup <a href="#sec:test-setup-118" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to start a session and exchange USP messages.</li>
<li>Ensure the EUT and controller have the necessary information to secure the USP record payload using TLS.</li>
</ol>
<h3 id="sec:test-procedure-109">Test Procedure <a href="#sec:test-procedure-109" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Starts a session with the EUT using <code>payload_security</code> TLS12.</li>
<li>After the session is established, send the following Get message for any valid parameter using <code>payload_security</code> PLAINTEXT and a plaintext.</li>
</ol>
<h3 id="sec:test-metrics-117">Test Metrics <a href="#sec:test-metrics-117" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not send a GetResponse.</li>
<li>The EUT starts a new session after step 2.</li>
</ol>
<h2 id="sec:use-of-retransmit_id">3.14 Use of retransmit_id <a href="#sec:use-of-retransmit_id" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-116">Purpose <a href="#sec:purpose-116" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses the <code>retransmit_id</code> value in a USP record and adheres to the related parameters in the data model.</p>
<h3 id="sec:functionality-tags-33">Functionality Tags <a href="#sec:functionality-tags-33" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditionality Mandatory (supports session context)</p>
<h3 id="sec:test-setup-119">Test Setup <a href="#sec:test-setup-119" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to start a session and exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedure-110">Test Procedure <a href="#sec:test-procedure-110" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.E2ESession.&#39;
                    param_settings {
                            param: &#39;MaxRetransmitTries&#39;
                            value: &#39;2&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Wait for a SetResponse</p></li>
<li><p>Send a USP record with a <code>retransmit_id</code> set to the value of the <code>sequence_id</code> found in the SetResponse in step 2.</p></li>
<li><p>Repeat steps 2 and 3 twice more.</p></li>
</ol>
<h3 id="sec:test-metrics-118">Test Metrics <a href="#sec:test-metrics-118" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The first three SetResponse messages are sent in the same session context.</li>
<li>On the third retransmit request, the EUT doesn’t send a SetResponse and instead starts a new session with the controller.</li>
</ol>
<h2 id="sec:handling-duplicate-records">3.15 Handling Duplicate Records <a href="#sec:handling-duplicate-records" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-117">Purpose <a href="#sec:purpose-117" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can correctly handle receiving duplicate records.</p>
<h3 id="sec:functionality-tags-34">Functionality Tags <a href="#sec:functionality-tags-34" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports USP session context)</p>
<h3 id="sec:test-setup-120">Test Setup <a href="#sec:test-setup-120" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT and controller have the necessary information to start session and exchange USP messages.</li>
</ol>
<h3 id="sec:test-procedure-111">Test Procedure <a href="#sec:test-procedure-111" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Start a session with the EUT.</li>
<li>Send a Get message to the EUT requesting a parameter that is known to exist.</li>
<li>Retransmit the same USP record sent in step 2 to the EUT, using the same non-payload USP record field values.</li>
<li>Repeat step 3 twice more.</li>
</ol>
<h3 id="sec:test-metrics-119">Test Metrics <a href="#sec:test-metrics-119" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT send only one GetResponse.</li>
</ol>
<h1 id="sec:general-mtp-test-cases">4 General MTP Test Cases <a href="#sec:general-mtp-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:use-of-x.509-certificates-at-the-mtp-layer">4.1 Use of X.509 certificates at the MTP layer <a href="#sec:use-of-x.509-certificates-at-the-mtp-layer" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-118">Purpose <a href="#sec:purpose-118" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can use X.509 certificates to secure communication at the MTP layer.</p>
<h3 id="sec:functionality-tags-35">Functionality Tags <a href="#sec:functionality-tags-35" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Mandatory</p>
<h3 id="sec:test-setup-121">Test Setup <a href="#sec:test-setup-121" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that the use of MTP layer encryption is enabled on the EUT.</li>
</ol>
<h3 id="sec:test-procedure-112">Test Procedure <a href="#sec:test-procedure-112" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a GetSupportedProtocol message to the EUT with the following structure:</li>
</ol>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_SUPPORTED_PROTO
}
body {
    request {
        get_supported_protocol {
            controller_supported_protocol_versions: &#39;&lt;comma separated list of test controller versions&gt;&#39;
        }
    }
}</code></pre>
<h3 id="sec:test-metrics-120">Test Metrics <a href="#sec:test-metrics-120" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT processes the certificate and establishes a secure TLS connection at the MTP layer.</li>
</ol>
<h1 id="sec:coap-test-cases">5 CoAP Test Cases <a href="#sec:coap-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:mapping-a-usp-record-to-a-coap-message">5.1 Mapping a USP Record to a CoAP message <a href="#sec:mapping-a-usp-record-to-a-coap-message" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-119">Purpose <a href="#sec:purpose-119" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can properly use CoAP to transport USP Records.</p>
<h3 id="sec:functionality-tags-36">Functionality Tags <a href="#sec:functionality-tags-36" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-122">Test Setup <a href="#sec:test-setup-122" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-113">Test Procedure <a href="#sec:test-procedure-113" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-121">Test Metrics <a href="#sec:test-metrics-121" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The GetResponse is encapsulated in a CoAP message.</li>
<li>The CoAP message used transport the GetResponse uses application/octet-stream for Content-Format.</li>
</ol>
<h2 id="sec:usp-records-that-exceed-coap-message-size">5.2 USP Records that exceed CoAP message size <a href="#sec:usp-records-that-exceed-coap-message-size" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-120">Purpose <a href="#sec:purpose-120" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly segments large USP records and transports them using block encapsulation.</p>
<h3 id="sec:functionality-tags-37">Functionality Tags <a href="#sec:functionality-tags-37" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-123">Test Setup <a href="#sec:test-setup-123" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-114">Test Procedure <a href="#sec:test-procedure-114" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-122">Test Metrics <a href="#sec:test-metrics-122" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends the GetResponse message using multiple block encapsulated CoAP messages.</li>
</ol>
<h2 id="sec:successful-coap-exchange">5.3 Successful CoAP exchange <a href="#sec:successful-coap-exchange" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-121">Purpose <a href="#sec:purpose-121" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly sends a 2.04 Changed response to CoAP messages.</p>
<h3 id="sec:functionality-tags-38">Functionality Tags <a href="#sec:functionality-tags-38" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-124">Test Setup <a href="#sec:test-setup-124" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-115">Test Procedure <a href="#sec:test-procedure-115" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-123">Test Metrics <a href="#sec:test-metrics-123" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After the transmission of the Get message the EUT sends a 2.04 Changed message.</li>
</ol>
<h2 id="sec:failed-coap-exchange---timeout">5.4 Failed CoAP exchange - timeout <a href="#sec:failed-coap-exchange---timeout" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-122">Purpose <a href="#sec:purpose-122" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT behaves correctly when a timeout occurs at the MTP layer when using CoAP.</p>
<h3 id="sec:functionality-tags-39">Functionality Tags <a href="#sec:functionality-tags-39" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-125">Test Setup <a href="#sec:test-setup-125" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-116">Test Procedure <a href="#sec:test-procedure-116" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the to not send 2.04 Changed responses to CoAP messages</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse message from the EUT.</p></li>
<li><p>Prevent the Controller from sending a 2.04 Changed CoAP response.</p></li>
<li><p>Wait for EUT to retry sending the GetResponse.</p></li>
<li><p>Allow the Controller to send a 2.04 Changed CoAP response.</p></li>
</ol>
<h3 id="sec:test-metrics-124">Test Metrics <a href="#sec:test-metrics-124" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT attempts to retransmit the GetResponse message after not receieving a 2.04 Changed from the Controller.</li>
</ol>
<h2 id="sec:failed-coap-exchange---invalid-method">5.5 Failed CoAP Exchange - Invalid Method <a href="#sec:failed-coap-exchange---invalid-method" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-123">Purpose <a href="#sec:purpose-123" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly responds when it receives a CoAP message with an invalid method.</p>
<h3 id="sec:functionality-tags-40">Functionality Tags <a href="#sec:functionality-tags-40" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-126">Test Setup <a href="#sec:test-setup-126" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP records to each other.</li>
<li>The EUT the Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-117">Test Procedure <a href="#sec:test-procedure-117" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a USP record to the EUT using a CoAP message with method code <code>0x06</code>.</li>
<li>Wait up to 60 seconds for the EUT to send a CoAP response.</li>
</ol>
<h3 id="sec:test-metrics-125">Test Metrics <a href="#sec:test-metrics-125" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a reply to the CoAP message with an invalid method code.</li>
<li>The EUT’s CoAP response uses code <code>4.05</code> to indicate an invalid CoAP method.</li>
</ol>
<h2 id="sec:failed-coap-exchange---invalid-content-format">5.6 Failed CoAP Exchange - Invalid Content-Format <a href="#sec:failed-coap-exchange---invalid-content-format" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-124">Purpose <a href="#sec:purpose-124" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly responds to CoAP messages that feature invalid Content-Format options.</p>
<h3 id="sec:functionality-tags-41">Functionality Tags <a href="#sec:functionality-tags-41" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-127">Test Setup <a href="#sec:test-setup-127" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-118">Test Procedure <a href="#sec:test-procedure-118" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a USP record to the EUT using a CoAP message with Content-Format option <code>0x113a</code>.</li>
<li>Wait up to 60 second for the EUT to respond.</li>
</ol>
<h3 id="sec:test-metrics-126">Test Metrics <a href="#sec:test-metrics-126" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a reply to the CoAP message with an invalid Content-Format.</li>
<li>The EUT’s CoAP response uses code <code>4.15</code> to indicate an invalid Content-Format.</li>
</ol>
<h2 id="sec:failed-coap-exchange---invalid-usp-record">5.7 Failed CoAP Exchange - Invalid USP Record <a href="#sec:failed-coap-exchange---invalid-usp-record" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-125">Purpose <a href="#sec:purpose-125" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this is to ensure the EUT properly responds to a CoAP message containing a malformed USP record.</p>
<h3 id="sec:functionality-tags-42">Functionality Tags <a href="#sec:functionality-tags-42" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-128">Test Setup <a href="#sec:test-setup-128" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP.</li>
</ol>
<h3 id="sec:test-procedure-119">Test Procedure <a href="#sec:test-procedure-119" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP record to the EUT in a CoAP message.</li>
<li>Wait up to 60 seconds for the EUT to send a CoAP reply.</li>
</ol>
<h3 id="sec:test-metrics-127">Test Metrics <a href="#sec:test-metrics-127" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a reply to the CoAP message with the malformed USP record.</li>
<li>The EUT’s CoAP response uses code <code>4.00</code> to indicate the USP record is invalid or not understandable.</li>
</ol>
<h2 id="sec:use-of-dtls">5.8 Use of DTLS <a href="#sec:use-of-dtls" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-126">Purpose <a href="#sec:purpose-126" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish secure communication with another CoAP endpoint at the CoAP layer.</p>
<h3 id="sec:functionality-tags-43">Functionality Tags <a href="#sec:functionality-tags-43" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the CoAP MTP)</p>
<h3 id="sec:test-setup-129">Test Setup <a href="#sec:test-setup-129" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equiment have the nessesary information to send and receive USP records to each other.</li>
<li>The EUT and Controller are configured to communicate over CoAP using DTLS.</li>
<li>The EUT and Controller have the necessary information about one another to establish an encrypted channel of communication.</li>
</ol>
<h3 id="sec:test-procedure-120">Test Procedure <a href="#sec:test-procedure-120" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetReponse.</p></li>
</ol>
<h3 id="sec:test-metrics-128">Test Metrics <a href="#sec:test-metrics-128" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The Controller is able to establish a DTLS session with the EUT.</li>
<li>The EUT established a DTLS session and sends a GetResponse.</li>
</ol>
<h1 id="sec:stomp-test-cases">6 STOMP Test Cases <a href="#sec:stomp-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:support-of-required-profiles">6.1 Support of Required Profiles <a href="#sec:support-of-required-profiles" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-127">Purpose <a href="#sec:purpose-127" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT supports the required STOMP profiles.</p>
<h3 id="sec:functionality-tags-44">Functionality Tags <a href="#sec:functionality-tags-44" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-130">Test Setup <a href="#sec:test-setup-130" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP records to each other.</li>
</ol>
<h3 id="sec:test-procedure-121">Test Procedure <a href="#sec:test-procedure-121" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a GetSupportedDM message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET_SUPPORTED_DM
}
body {
    request {
        get_supported_dm {
            obj_paths: &#39;Device.STOMP.&#39;
            obj_paths: &#39;Device.LocalAgent.&#39;
            return_params: true
            first_level_only: false
        }
    }
}</code></pre></li>
<li><p>Wait for the GetSupportedDMResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-129">Test Metrics <a href="#sec:test-metrics-129" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a GetSupportedDMResponse.</li>
<li>The GetSupportedDMReponse from the EUT contains the following parameters: * Device.LocalAgent.Controller.{i}.MTP.{i}.STOMP.Reference * Device.LocalAgent.Controller.{i}.MTP.{i}.STOMP.Destination * Device.STOMP.ConnectionNumberOfEntries * Device.STOMP.Connection.{i}.Alias * Device.STOMP.Connection.{i}.Enable * Device.STOMP.Connection.{i}.Status * Device.STOMP.Connection.{i}.Host * Device.STOMP.Connection.{i}.Port * Device.STOMP.Connection.{i}.VirtualHost * Device.STOMP.Connection.{i}.ServerRetryInitialInterval * Device.STOMP.Connection.{i}.ServerRetryIntervalMultiplier * Device.STOMP.Connection.{i}.ServerRetryMaxInterval</li>
</ol>
<h2 id="sec:stomp-session-establishment">6.2 STOMP session establishment <a href="#sec:stomp-session-establishment" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-128">Purpose <a href="#sec:purpose-128" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can properly start a STOMP session.</p>
<h3 id="sec:functionality-tags-45">Functionality Tags <a href="#sec:functionality-tags-45" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-131">Test Setup <a href="#sec:test-setup-131" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use a STOMP server that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-122">Test Procedure <a href="#sec:test-procedure-122" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to reconnect to the STOMP server and subscribe to a destination.</li>
</ol>
<h3 id="sec:test-metrics-130">Test Metrics <a href="#sec:test-metrics-130" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a STOMP frame to the STOMP server to initiate the STOMP session.</li>
</ol>
<h2 id="sec:stomp-connection-retry">6.3 STOMP Connection Retry <a href="#sec:stomp-connection-retry" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-129">Purpose <a href="#sec:purpose-129" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT properly enters a retry state when it fails to connect to the STOMP server.</p>
<h3 id="sec:functionality-tags-46">Functionality Tags <a href="#sec:functionality-tags-46" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-132">Test Setup <a href="#sec:test-setup-132" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use a STOMP server that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-123">Test Procedure <a href="#sec:test-procedure-123" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.STOMP.Connection.&#39;
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
<li><p>Disable the STOMP server.</p></li>
<li><p>Allow the EUT to attempt to start a STOMP session with the STOMP server.</p></li>
<li><p>Reenable the STOMP server after the EUT fails to connect to the STOMP server twice.</p></li>
</ol>
<h3 id="sec:test-metrics-131">Test Metrics <a href="#sec:test-metrics-131" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT retries connecting to the STOMP server within the <code>ServerRetryInitialInterval</code> of the connection instance.</li>
<li>The EUT retries a second time in accordance with <code>ServerRetryInitialInterval</code> and <code>ServerRetryIntervalMultiplier</code>.</li>
</ol>
<h2 id="sec:successful-usp-message-over-stomp-with-required-headers">6.4 Successful USP message over STOMP with required headers <a href="#sec:successful-usp-message-over-stomp-with-required-headers" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-130">Purpose <a href="#sec:purpose-130" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can communicate over STOMP using the correct headers.</p>
<h3 id="sec:functionality-tags-47">Functionality Tags <a href="#sec:functionality-tags-47" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-133">Test Setup <a href="#sec:test-setup-133" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to use a STOMP server that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-124">Test Procedure <a href="#sec:test-procedure-124" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to send a GetResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-132">Test Metrics <a href="#sec:test-metrics-132" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>In the STOMP frame transporting the GetResponse the <code>content-length</code> header is present and contains the length of the included body of the message.</li>
<li>In the STOMP frame transporting the GetResponse the <code>content-type</code> header is present and contains <code>application/vnd.bbf.usp.msg</code>.</li>
<li>In the STOMP frame transporting the GetReponse the <code>reply-to-dest</code> header is present and contains the STOMP destination of the EUT.</li>
</ol>
<h2 id="sec:stomp-destination---provided-in-subscribe-dest">6.5 STOMP destination - provided in subscribe-dest <a href="#sec:stomp-destination---provided-in-subscribe-dest" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-131">Purpose <a href="#sec:purpose-131" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correct subscribe to a destination found in the <code>subscribe-dest</code> header in a CONNECTED frame.</p>
<h3 id="sec:functionality-tags-48">Functionality Tags <a href="#sec:functionality-tags-48" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-134">Test Setup <a href="#sec:test-setup-134" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that is part of the test environment.</li>
</ol>
<h3 id="sec:test-procedure-125">Test Procedure <a href="#sec:test-procedure-125" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the STOMP server to send an unused destination via the <code>subscribe-dest</code> header in the CONNECTED frames.</p></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Allow the EUT to reconnect to the STOMP server.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.&#39;
        }
    }
}</code></pre></li>
<li><p>Allow the EUT to respond to the Get message.</p></li>
</ol>
<h3 id="sec:test-metrics-133">Test Metrics <a href="#sec:test-metrics-133" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT subscribes to the destination configured in step 1.</li>
<li>The STOMP frame containing the GetResponse has a <code>reply-to-dest</code> header which matches the destination configured in step 1.</li>
</ol>
<h2 id="sec:stomp-destination---configured-in-usp-data-model">6.6 STOMP destination - configured in USP data model <a href="#sec:stomp-destination---configured-in-usp-data-model" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-132">Purpose <a href="#sec:purpose-132" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can use the <code>Device.LocalAgent.MTP.{i}.STOMP.Destination</code> parameter to select a STOMP destination.</p>
<h3 id="sec:functionality-tags-49">Functionality Tags <a href="#sec:functionality-tags-49" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-steps-7">Test Steps <a href="#sec:test-steps-7" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that is part of the test environment.</li>
</ol>
<h3 id="sec:test-procedure-126">Test Procedure <a href="#sec:test-procedure-126" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                obj_path: &#39;Device.LocalAgent.MTP.&lt;active MTP instance&gt;.STOMP.&#39;
                param_settings {
                        param: &#39;Destination&#39;
                        value: &#39;&lt;new unused destination&gt;&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the STOMP server.</p></li>
<li><p>Allow the STOMP server to send a CONNECTED frame that does NOT include the subscribe-dest field.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-134">Test Metrics <a href="#sec:test-metrics-134" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT subscribes to the destination configured in step 1.</li>
<li>The STOMP frame containing the GetResponse has a <code>reply-to-dest</code> header which contains the STOMP destination configured in step 1.</li>
</ol>
<h2 id="sec:stomp-destination---terminates-unconfigured-session">6.7 STOMP Destination - terminates unconfigured session <a href="#sec:stomp-destination---terminates-unconfigured-session" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-133">Purpose <a href="#sec:purpose-133" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT terminates a STOMP session when no destination id configured.</p>
<h3 id="sec:functionality-tags-50">Functionality Tags <a href="#sec:functionality-tags-50" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-135">Test Setup <a href="#sec:test-setup-135" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is configured to use a STOMP server which exists in the test environment.</li>
<li>Configure the STOMP server to not provide a <code>subscribe-dest</code> header in the CONNECTED frame.</li>
</ol>
<h3 id="sec:test-procedure-127">Test Procedure <a href="#sec:test-procedure-127" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.MTP.&lt;active MTP instance&gt;.STOMP.&#39;
                    param_settings {
                            param: &#39;Destination&#39;
                            value: &#39;&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to attempt to reconnect to the STOMP server.</p></li>
</ol>
<h3 id="sec:test-metrics-135">Test Metrics <a href="#sec:test-metrics-135" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT terminates the STOMP session by sending a DISCONNECT frame after the STOMP server sends a CONNECTED frame to the EUT.</li>
</ol>
<h2 id="sec:use-of-stomp-heartbeat-mechanism">6.8 Use of STOMP heartbeat mechanism <a href="#sec:use-of-stomp-heartbeat-mechanism" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-134">Purpose <a href="#sec:purpose-134" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can correctly implements the STOMP heartbeat mechanism and the relavent parameters in the data model.</p>
<h3 id="sec:functionality-tags-51">Functionality Tags <a href="#sec:functionality-tags-51" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports STOMPHeartbeat:1 profile)</p>
<h3 id="sec:test-setup-136">Test Setup <a href="#sec:test-setup-136" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is configured to use a STOMP server which exists in the test environment.</li>
<li>Ensure the STOMP server supports heartbeats.</li>
</ol>
<h3 id="sec:test-metrics-136">Test Metrics <a href="#sec:test-metrics-136" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.STOMP.Connection.&lt;STOMP server in use&gt;.&#39;
                    param_settings {
                            param: &#39;EnableHeartbeats&#39;
                            value: &#39;true&#39;
                        }
                    param_settings {
                            param: &#39;IncomingHeartbeat&#39;
                            value: &#39;10000&#39;
                        }
                    param_settings {
                            param: &#39;OutgoingHeartbeat&#39;
                            value: &#39;15000&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the STOMP server.</p></li>
<li><p>Wait for 60 seconds</p></li>
</ol>
<h3 id="sec:test-metrics-137">Test Metrics <a href="#sec:test-metrics-137" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>In the STOMP frame sent to the STOMP server during step 2, the <code>heart-beat</code> header sent by the EUT contains ‘15000, 10000’.</li>
<li>After the EUT is connected to the STOMP server, the EUT sends heartbeat messages every 15 seconds.</li>
</ol>
<h2 id="sec:error-handling---unprocessed-record">6.9 Error Handling - Unprocessed Record <a href="#sec:error-handling---unprocessed-record" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-135">Purpose <a href="#sec:purpose-135" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will correctly send an ERROR STOMP frame when a malformed USP record is received.</p>
<h3 id="sec:functionality-tags-52">Functionality Tags <a href="#sec:functionality-tags-52" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-137">Test Setup <a href="#sec:test-setup-137" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-128">Test Procedure <a href="#sec:test-procedure-128" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP record to the EUT.</li>
<li>Wait 60 seconds for the EUT to send a response.</li>
</ol>
<h3 id="sec:test-metrics-138">Test Metrics <a href="#sec:test-metrics-138" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT does not send a response to the malformed record.</li>
</ol>
<h2 id="sec:agents-stomp-destination-is-changed">6.10 Agent’s STOMP destination is changed <a href="#sec:agents-stomp-destination-is-changed" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-136">Purpose <a href="#sec:purpose-136" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure that when the EUT’s destination is altered it properly unsubscribes and subscribes to the new destination.</p>
<h3 id="sec:functionality-tags-53">Functionality Tags <a href="#sec:functionality-tags-53" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-138">Test Setup <a href="#sec:test-setup-138" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use a STOMP server that exists in the test environment.</li>
<li>Ensure the STOMP server is configured to not provide a destination via the <code>subscribe-dest</code> header.</li>
</ol>
<h3 id="sec:test-procedure-129">Test Procedure <a href="#sec:test-procedure-129" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: SET
}
body {
    request {
        set {
            update_objs {
                    obj_path: &#39;Device.LocalAgent.MTP.&lt;active MTP instance&gt;.STOMP.&#39;
                    param_settings {
                            param: &#39;Destination&#39;
                            value: &#39;&lt;new destination&gt;&#39;
                        }
                }
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-139">Test Metrics <a href="#sec:test-metrics-139" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After the STOMP destination was changed the EUT sent an UNSUBSCRIBE message message to the STOMP server.</li>
<li>After the EUT sent an UNSUBSCRIBE to the STOMP server it sent a SUBSCRIBE message with the new destination to the STOMP server.</li>
</ol>
<h2 id="sec:stomp---use-of-tls">6.11 STOMP - Use of TLS <a href="#sec:stomp---use-of-tls" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-137">Purpose <a href="#sec:purpose-137" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish secure STOMP communication via TLS.</p>
<h3 id="sec:functionality-tags-54">Functionality Tags <a href="#sec:functionality-tags-54" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the STOMP MTP)</p>
<h3 id="sec:test-setup-139">Test Setup <a href="#sec:test-setup-139" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to the use a STOMP server that exists in the test environment.</li>
<li>Ensure the EUT and STOMP server are configured with the appropriate certificates to communicate over TLS.</li>
</ol>
<h3 id="sec:test-procedure-130">Test Procedure <a href="#sec:test-procedure-130" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT</p></li>
<li><p>Wait for the EUT to reconnect to the STOMP server</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a GetResponse</p></li>
</ol>
<h3 id="sec:test-metrics-140">Test Metrics <a href="#sec:test-metrics-140" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>All communication between the EUT and STOMP server after step 1 are encrypted using TLS</li>
</ol>
<h1 id="sec:websocket-test-cases">7 WebSocket Test Cases <a href="#sec:websocket-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:session-establishment">7.1 Session Establishment <a href="#sec:session-establishment" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-138">Purpose <a href="#sec:purpose-138" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish a session using WebSocket as the MTP.</p>
<h3 id="sec:functionality-tags-55">Functionality Tags <a href="#sec:functionality-tags-55" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-140">Test Setup <a href="#sec:test-setup-140" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket and to communicate to the controller that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-131">Test Procedure <a href="#sec:test-procedure-131" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to reconnect to the controller.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a GetResponse from the EUT</p></li>
</ol>
<h3 id="sec:test-metrics-141">Test Metrics <a href="#sec:test-metrics-141" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is able to establish a WebSocket connection to the controller</li>
<li>The EUT sends a GetResponse to the Get message sent in step 3</li>
</ol>
<h2 id="sec:use-of-only-one-session">7.2 Use of only one session <a href="#sec:use-of-only-one-session" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-139">Purpose <a href="#sec:purpose-139" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT maintains only one WebSocket connection to a controller at a time.</p>
<h3 id="sec:functionality-tags-56">Functionality Tags <a href="#sec:functionality-tags-56" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP with requirement R-WS.6)</p>
<h3 id="sec:test-setup-141">Test Setup <a href="#sec:test-setup-141" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket and to comminucate to the controller that exists in the test environment.</li>
</ol>
<h3 id="sec:test-procedure-132">Test Procedure <a href="#sec:test-procedure-132" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT using the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Attempt to open a second WebSocket connection to the EUT.</p></li>
<li><p>Send the Get message outlined in step 1 over the new connection.</p></li>
</ol>
<h3 id="sec:test-metrics-142">Test Metrics <a href="#sec:test-metrics-142" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Either the first WebSocket connection closes when the second is opened, or the second connection is rejected.</li>
</ol>
<h2 id="sec:agent-session-acceptance-from-controller">7.3 Agent session acceptance from Controller <a href="#sec:agent-session-acceptance-from-controller" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-140">Purpose <a href="#sec:purpose-140" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>This test has been DEPRECATED as of version 1.0.1 of this test plan.</p>
<h3 id="sec:functionality-tags-57">Functionality Tags <a href="#sec:functionality-tags-57" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>N/A</p>
<h3 id="sec:test-setup-142">Test Setup <a href="#sec:test-setup-142" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>N/A</p>
<h3 id="sec:test-procedure-133">Test Procedure <a href="#sec:test-procedure-133" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>N/A</p>
<h3 id="sec:test-metrics-143">Test Metrics <a href="#sec:test-metrics-143" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>N/A</p>
<h2 id="sec:closing-a-websocket-connection">7.4 Closing a WebSocket Connection <a href="#sec:closing-a-websocket-connection" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-141">Purpose <a href="#sec:purpose-141" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly implements the procedure to close a WebSocket connection.</p>
<h3 id="sec:functionality-tags-58">Functionality Tags <a href="#sec:functionality-tags-58" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-143">Test Setup <a href="#sec:test-setup-143" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Ensure there is an active WebSocket connection between the EUT and the controller that was initiated by the EUT.</li>
</ol>
<h3 id="sec:test-procedure-134">Test Procedure <a href="#sec:test-procedure-134" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a <code>Close</code> WebSocket control frame to the EUT.</li>
<li>Wait for the EUT to close the underlying TCP session.</li>
</ol>
<h3 id="sec:test-metrics-144">Test Metrics <a href="#sec:test-metrics-144" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a WebSocket Close frame.</li>
</ol>
<h2 id="sec:rejection-of-session-establishment">7.5 Rejection of Session Establishment <a href="#sec:rejection-of-session-establishment" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-142">Purpose <a href="#sec:purpose-142" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will correctly reject WebSocket sessions.</p>
<h3 id="sec:functionality-tags-59">Functionality Tags <a href="#sec:functionality-tags-59" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-144">Test Setup <a href="#sec:test-setup-144" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Configure the controller to reject WebSocket connections from the EUT.</li>
</ol>
<h3 id="sec:test-procedure-135">Test Procedure <a href="#sec:test-procedure-135" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Configure he controller to not include the <code>Sec-WebSocket-Protocol</code> when opening new WebSocket connections.</li>
<li>Reboot the EUT</li>
<li>Attempt to start a WebSocket connection to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-145">Test Metrics <a href="#sec:test-metrics-145" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT rejects the WebSocket connection with the missing <code>Sec-WebSocket-Protocol</code> header.</li>
</ol>
<h2 id="sec:error-handling---unprocessed-records">7.6 Error Handling - Unprocessed Records <a href="#sec:error-handling---unprocessed-records" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-143">Purpose <a href="#sec:purpose-143" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly closes the WebSocket connection when a malformed USP Record is receieved.</p>
<h3 id="sec:functionality-tags-60">Functionality Tags <a href="#sec:functionality-tags-60" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-145">Test Setup <a href="#sec:test-setup-145" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket</li>
<li>Ensure there is an active WebSocket connection between the EUT and controller.</li>
</ol>
<h3 id="sec:test-procedure-136">Test Procedure <a href="#sec:test-procedure-136" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a malformed USP record to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-146">Test Metrics <a href="#sec:test-metrics-146" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After step 1 the EUT closes the WebSocket connection with a WebSocket <code>Close</code> control frame containing status code 1003.</li>
</ol>
<h2 id="sec:use-of-ping-and-pong-frames">7.7 Use of Ping and Pong frames <a href="#sec:use-of-ping-and-pong-frames" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-144">Purpose <a href="#sec:purpose-144" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses <code>Ping</code> and <code>Pong</code> control frames to keep the WebSocket session alive.</p>
<h3 id="sec:functionality-tags-61">Functionality Tags <a href="#sec:functionality-tags-61" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-146">Test Setup <a href="#sec:test-setup-146" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket</li>
<li>Ensure there is an active WebSocket session between the EUT and the Controller.</li>
</ol>
<h3 id="sec:test-procedure-137">Test Procedure <a href="#sec:test-procedure-137" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Send a <code>Ping</code> control frame to the EUT.</li>
<li>Wait up to 60 seconds for a <code>Pong</code> control frame from the EUT.</li>
<li>Send a <code>Pong</code> control frame to the EUT.</li>
</ol>
<h3 id="sec:test-metrics-147">Test Metrics <a href="#sec:test-metrics-147" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a <code>Pong</code> control frame in response to the <code>Ping</code> control frame.</li>
<li>The EUT doesn’t terminate the WebSocket connection after recieving an unsolicited <code>Pong</code> control frame.</li>
</ol>
<h2 id="sec:websocket-session-retry">7.8 WebSocket Session Retry <a href="#sec:websocket-session-retry" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-145">Purpose <a href="#sec:purpose-145" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will correctly attempt to reestablish a WebSocket session if a session is unexpectedly closed.</p>
<h3 id="sec:functionality-tags-62">Functionality Tags <a href="#sec:functionality-tags-62" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-147">Test Setup <a href="#sec:test-setup-147" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Ensure there is an active WebSocket connection between the EUT and controller.</li>
</ol>
<h3 id="sec:test-procedure-138">Test Procedure <a href="#sec:test-procedure-138" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;test controller instance&gt;.MTP.&lt;active MTP instance&gt;.&#39;
        }
    }
}</code></pre></li>
<li><p>Configure the controller to reject new WebSocket connections.</p></li>
<li><p>Terminate the underlying TCP connection on the existing WebSocket connection.</p></li>
<li><p>Wait for the EUT to attempt to establish a WebSocket connection.</p></li>
<li><p>Configure the controlle to accept new WebSocket connections.</p></li>
<li><p>Wait for the EUT to attempt to establish a WebSocket connection.</p></li>
</ol>
<h3 id="sec:test-metrics-148">Test Metrics <a href="#sec:test-metrics-148" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT attempts to start a new WebSocket connection in conformance with the <code>SessionRetryMinimumWaitInterval</code> parameter.</li>
<li>The EUT makes a second attempt to start a new WebSocket connection in confromance with the <code>SessionRetryMinimumWaitInterval</code> and <code>SessionRetryIntervalMultiplier</code> parameters.</li>
</ol>
<h2 id="sec:use-of-tls">7.9 Use of TLS <a href="#sec:use-of-tls" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-146">Purpose <a href="#sec:purpose-146" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can establish and use a secure WebSocket connection.</p>
<h3 id="sec:functionality-tags-63">Functionality Tags <a href="#sec:functionality-tags-63" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports the WebSocket MTP)</p>
<h3 id="sec:test-setup-148">Test Setup <a href="#sec:test-setup-148" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to use WebSocket.</li>
<li>Ensure the EUT and controller both have the required certificates to secure a websocket connection.</li>
</ol>
<h3 id="sec:test-procedure-139">Test Procedure <a href="#sec:test-procedure-139" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to connect to the controller.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-149">Test Metrics <a href="#sec:test-metrics-149" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT starts a WebSocket connection with the controller using TLS.</li>
<li>The EUT sends a GetReponse in step 4.</li>
</ol>
<h1 id="sec:discovery-test-cases">8 Discovery Test Cases <a href="#sec:discovery-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:dhcp-discovery---agent-request-requirements">8.1 DHCP Discovery - Agent Request Requirements <a href="#sec:dhcp-discovery---agent-request-requirements" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-147">Purpose <a href="#sec:purpose-147" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly requests controller information via DHCP. <em>Note: this test can be run over DHCPv4 or DHCPv6, depending on the deployment model of the EUT.</em></p>
<h3 id="sec:functionality-tags-64">Functionality Tags <a href="#sec:functionality-tags-64" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via DHCP Options)</p>
<h3 id="sec:test-setup-149">Test Setup <a href="#sec:test-setup-149" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to request controller DHCP information.</li>
<li>Ensure the EUT is configured to acquire an address via DHCP.</li>
</ol>
<h3 id="sec:test-procedure-140">Test Procedure <a href="#sec:test-procedure-140" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to request an address via DHCP.</li>
</ol>
<h3 id="sec:test-metrics-150">Test Metrics <a href="#sec:test-metrics-150" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT includes a Vendor Class option with Enterprise Number 3561 and vendor-class-data “usp” in the DHCP request.</li>
</ol>
<h2 id="sec:dhcp-discovery---agent-handling-of-received-options">8.2 DHCP Discovery - Agent handling of received options <a href="#sec:dhcp-discovery---agent-handling-of-received-options" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-148">Purpose <a href="#sec:purpose-148" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can properly handle the USP options provided by a DHCP server.</p>
<h3 id="sec:functionality-tags-65">Functionality Tags <a href="#sec:functionality-tags-65" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via DHCP Options)</p>
<h3 id="sec:test-setup-150">Test Setup <a href="#sec:test-setup-150" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to request controller DHCP information</li>
<li>Ensure the EUT is configured to acquire an address via DHCP.</li>
<li>Ensure the EUT’s <code>ProvisioningCode</code> parameter is set to a value other than that which will be set during the test procedure.</li>
</ol>
<h3 id="sec:test-procedure-141">Test Procedure <a href="#sec:test-procedure-141" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Configure the DHCP server to provide a null terminated provisioning code.</p></li>
<li><p>Reboot the EUT.</p></li>
<li><p>Wait for the EUT to request an address via DHCP.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Controller.&lt;test controller instance&gt;.&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for the GetResponse from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-151">Test Metrics <a href="#sec:test-metrics-151" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The <code>ProvisioningCode</code> parameter found in the GetReponse matches the provisioning code configured on the DHCP server.</li>
</ol>
<h2 id="sec:dhcp-discovery---fqdn-leads-to-dns-query">8.3 DHCP Discovery - FQDN Leads to DNS Query <a href="#sec:dhcp-discovery---fqdn-leads-to-dns-query" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-149">Purpose <a href="#sec:purpose-149" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly uses DNS to retrieve additonal controller information upon receiving a FQDN of a controller.</p>
<h3 id="sec:functionality-tags-66">Functionality Tags <a href="#sec:functionality-tags-66" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via DHCP Options)</p>
<h3 id="sec:test-setup-151">Test Setup <a href="#sec:test-setup-151" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT is configured to request controller information via DHCP.</li>
<li>Ensure the EUT is configured to acquire an address via DHCP.</li>
</ol>
<h3 id="sec:test-procedure-142">Test Procedure <a href="#sec:test-procedure-142" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Configure the DHCP server to provide a controller URL with a FQDN.</li>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to request an address.</li>
<li>Wait for the EUT to query the DNS with the FQDN.</li>
<li>Wait for the EUT to connect to the controller.</li>
</ol>
<h3 id="sec:test-metrics-152">Test Metrics <a href="#sec:test-metrics-152" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receives a FQDN in the DHCP Offer, the EUT uses DNS to retrive additional information about the controller.</li>
</ol>
<h2 id="sec:mdns">8.4 mDNS <a href="#sec:mdns" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-150">Purpose <a href="#sec:purpose-150" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly implements mDNS.</p>
<h3 id="sec:functionality-tags-67">Functionality Tags <a href="#sec:functionality-tags-67" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS, supports the Reboot:1 profile)</p>
<h3 id="sec:test-setup-152">Test Setup <a href="#sec:test-setup-152" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT has mDNS enabled.</li>
<li>Ensure the controller exists on the same network as the EUT.</li>
<li>Ensure that the EUT has the Controller’s URL, which contains “.local.” is preconfigured on the EUT.</li>
<li>Ensure that a Subscription exists for the Boot! event on the EUT with the test Controller as the Recipient.</li>
</ol>
<h3 id="sec:test-procedure-143">Test Procedure <a href="#sec:test-procedure-143" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to send a mDNS request for the FQDN.</li>
<li>Allow the controller to respond to the mDNS request.</li>
</ol>
<h3 id="sec:test-metrics-153">Test Metrics <a href="#sec:test-metrics-153" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After the EUT receieves a FQDN via DHCP containing “.local.” the EUT uses mDNS to resolve it.</li>
</ol>
<h2 id="sec:mdns-and-message-transfer-protocols">8.5 mDNS and Message Transfer Protocols <a href="#sec:mdns-and-message-transfer-protocols" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-151">Purpose <a href="#sec:purpose-151" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly advertises the MTP it supports. This use case is exclusive to CoAP, so this test case only applies to CoAP based Endpoints.</p>
<h3 id="sec:functionality-tags-68">Functionality Tags <a href="#sec:functionality-tags-68" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS, supports CoAP)</p>
<h3 id="sec:test-setup-153">Test Setup <a href="#sec:test-setup-153" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure the EUT has mDNS enabled.</li>
<li>Ensure the Controller exists on the same network as the EUT.</li>
<li>For STOMP connections, ensure the Agent has an active connection to a STOMP broker.</li>
</ol>
<h3 id="sec:test-procedure-144">Test Procedure <a href="#sec:test-procedure-144" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to acquire an address.</li>
<li>Wait for the EUT to send an unsolicited mDNS response.</li>
</ol>
<h3 id="sec:test-metrics-154">Test Metrics <a href="#sec:test-metrics-154" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an unsolicated multicast DNS response containing in the answer section a record for each supported MTP.</li>
</ol>
<h2 id="sec:dns---dns-record-requirements">8.6 DNS - DNS Record Requirements <a href="#sec:dns---dns-record-requirements" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-152">Purpose <a href="#sec:purpose-152" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT provides valid DNS-SD records.</p>
<h3 id="sec:functionality-tags-69">Functionality Tags <a href="#sec:functionality-tags-69" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS)</p>
<h3 id="sec:test-setup-154">Test Setup <a href="#sec:test-setup-154" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure mDNS is enabled on the EUT.</li>
</ol>
<h3 id="sec:test-procedure-145">Test Procedure <a href="#sec:test-procedure-145" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Wait for the EUT to acquire a new address.</li>
<li>Wait for to the EUT to send a multicast mDNS advertisement.</li>
</ol>
<h3 id="sec:test-metrics-155">Test Metrics <a href="#sec:test-metrics-155" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a multicast mDNS advertisement containing a TXT record for every supported MTP.</li>
<li>Every TXT record in the mDNS advertisement has a “path” and “name” attribute.</li>
</ol>
<h2 id="sec:mdns-request-response">8.7 mDNS request response <a href="#sec:mdns-request-response" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-153">Purpose <a href="#sec:purpose-153" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT will respond to mDNS requests.</p>
<h3 id="sec:functionality-tags-70">Functionality Tags <a href="#sec:functionality-tags-70" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports discovery via mDNS)</p>
<h3 id="sec:test-setup-155">Test Setup <a href="#sec:test-setup-155" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT is configured to listen for mDNS requests.</li>
</ol>
<h3 id="sec:test-procedure-146">Test Procedure <a href="#sec:test-procedure-146" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Reboot the EUT.</li>
<li>Send an mDNS query to the multicast domain that includes the EUT.</li>
<li>Wait for an mDNS response from the EUT.</li>
</ol>
<h3 id="sec:test-metrics-156">Test Metrics <a href="#sec:test-metrics-156" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT responds to the mDNS query with the proper information.</li>
</ol>
<h1 id="sec:functionality-test-cases">9 Functionality Test Cases <a href="#sec:functionality-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:use-of-the-timer-event-deprecated-by-9.11">9.1 Use of the Timer! Event (DEPRECATED by 9.11) <a href="#sec:use-of-the-timer-event-deprecated-by-9.11" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-154">Purpose <a href="#sec:purpose-154" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Timer! event can be configured, and the EUT correctly triggers the event.</p>
<h3 id="sec:functionality-tags-71">Functionality Tags <a href="#sec:functionality-tags-71" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.LocalAgent.Controller.{i}.ScheduleTimer() command)</p>
<h3 id="sec:test-setup-156">Test Setup <a href="#sec:test-setup-156" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-147">Test Procedure <a href="#sec:test-procedure-147" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Controller.&lt;Controller ID&gt;.ScheduleTimer()&#39;
            input_args {
                key: &#39;DelaySeconds&#39;
                value: &#39;60&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a Notification.</p></li>
</ol>
<h3 id="sec:test-metrics-157">Test Metrics <a href="#sec:test-metrics-157" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResponse with ScheduleTimer() in the executed_command element.</li>
<li>The EUT sends a Notify message with an event element containing Timer!</li>
</ol>
<h2 id="sec:use-of-device.localagent.addcertificate">9.2 Use of Device.LocalAgent.AddCertificate() <a href="#sec:use-of-device.localagent.addcertificate" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-155">Purpose <a href="#sec:purpose-155" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the AddCertificate() operation on the EUT functions correctly.</p>
<h3 id="sec:functionality-tags-72">Functionality Tags <a href="#sec:functionality-tags-72" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.LocalAgent.AddCertificate() command)</p>
<h3 id="sec:test-setups">Test Setups <a href="#sec:test-setups" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Have an alternate certificate that the EUT hasn’t seen.</li>
</ol>
<h3 id="sec:test-procedure-148">Test Procedure <a href="#sec:test-procedure-148" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.AddCertificate()&#39;
            send_resp: true
            input_args {
                key: &#39;Alias&#39;
                value: &#39;addedCert&#39;
            }
            input_args {
                key: &#39;Certificate&#39;
                value: &#39;&lt;new certificate&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Reconfigure the Controller to use the new certificate.</p></li>
<li><p>Reestablish a connection to the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Certificate.&#39;
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Certificate.&lt;cert instance&gt;.Delete()&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-158">Test Metrics <a href="#sec:test-metrics-158" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResponse after step 1.</li>
<li>The EUT accepts the connection after the Controller has been reconfigured to use the new certificate.</li>
<li>The EUT returns a GetResponse after step 4 which contains an instance with an Alias which matches the certificate added in step 1.</li>
<li>The EUT sends an OperateResponse after step 5.</li>
</ol>
<h2 id="sec:upgraded-the-agents-firmware---autoactivate-enabled">9.3 Upgraded the Agent’s Firmware - Autoactivate enabled <a href="#sec:upgraded-the-agents-firmware---autoactivate-enabled" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-156">Purpose <a href="#sec:purpose-156" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can download firmware and automatically activate it using the AutoActivate parameter.</p>
<h3 id="sec:functionality-tags-73">Functionality Tags <a href="#sec:functionality-tags-73" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile)</p>
<h3 id="sec:test-setup-157">Test Setup <a href="#sec:test-setup-157" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has a Subscription to the TransferComplete! and Boot! events with the recipient being the instance used for testing.</li>
</ol>
<h3 id="sec:test-procedure-149">Test Procedure <a href="#sec:test-procedure-149" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command:  &#39;Device.DeviceInfo.FirmwareImage.&lt;inactive instance&gt;.Download()&#39;
            input_args {
                key: &#39;AutoActivate&#39;
                value: &#39;true&#39;
            }
            input_args {
                key: &#39;URL&#39;
                value: &#39;&lt;firmware URL&gt;&#39;
            }
            input_args {
                key: &#39;Username&#39;
                value: &#39;&lt;optional username&gt;&#39;
            }
            input_args {
                key: &#39;Password&#39;
                value:&#39;&lt;optional password&gt;&#39;
            }
            input_args {
                key: &#39;FileSize&#39;
                value: &#39;&lt;file size&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a Notification</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-159">Test Metrics <a href="#sec:test-metrics-159" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message after step 1 containing a oper_complete element with a command_name of Download()</li>
<li>The EUT sends a Notify message with a TransferComplete! event.</li>
<li>The EUT sends a Notify message with a Boot! event, with the FirmwareUpdated argument set to true.</li>
<li>The EUT sends a GetResponse message after step 3 which shows that <code>Device.DeviceInfo.ActiveFirmwareImage</code> matches the FirmwareImage instance on which the Download() operation was called; also that <code>Device.DeviceInfo.SoftwareVersion</code> matches the expected version.</li>
</ol>
<h2 id="sec:upgrading-the-agents-firmware---using-timewindow-immediate">9.4 Upgrading the Agent’s Firmware - Using TimeWindow, Immediate <a href="#sec:upgrading-the-agents-firmware---using-timewindow-immediate" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-157">Purpose <a href="#sec:purpose-157" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can activate a firmware image when a TimeWindow object is used with Immediately mode.</p>
<h3 id="sec:functionality-tags-74">Functionality Tags <a href="#sec:functionality-tags-74" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile with Activate() operation)</p>
<h3 id="sec:test-setup-158">Test Setup <a href="#sec:test-setup-158" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the EUT has a FirmwareImage instance containing inactive firmware.</li>
<li>Ensure the EUT has a Subscription instance for Boot! with the used for testing set as the Recipient.</li>
</ol>
<h3 id="sec:test-procedure-150">Test Procedure <a href="#sec:test-procedure-150" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &quot;Device.DeviceInfo.FirmwareImage.&lt;instance&gt;.Activate()&quot;
            input_args: {
                key: &#39;TimeWindow.1.Start&#39;
                value: &#39;1&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.End&#39;
                value: &#39;100&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.Mode&#39;
                value: &#39;Immediately&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for Notify message from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.SoftwareVersion&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-160">Test Metrics <a href="#sec:test-metrics-160" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message within 5 seconds with an OperationComplete element with a command_name of Activate().</li>
<li>The EUT sends a Notify message with a Boot! event and a FirmwareUpdated argument set to true.</li>
<li>The EUT responds to the Get message with a GetResponse containing a SoftwareVersion element with the expected software version.</li>
</ol>
<h2 id="sec:upgrading-the-agents-firmware---using-timewindow-anytime">9.5 Upgrading the Agent’s Firmware - Using TimeWindow, AnyTime <a href="#sec:upgrading-the-agents-firmware---using-timewindow-anytime" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-158">Purpose <a href="#sec:purpose-158" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The pupose of this test is to ensure the EUT can activate a firmware image when a TimeWindow instance used with the AnyTime mode.</p>
<h3 id="sec:functionality-tags-75">Functionality Tags <a href="#sec:functionality-tags-75" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditonally Mandatory (implements Firmware:1 and Activate() operation)</p>
<h3 id="sec:test-setup-159">Test Setup <a href="#sec:test-setup-159" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the EUT has a FirmwareImage instance containing inactive firmware.</li>
<li>Ensure the EUT has a Subscription to the Boot! event with the Controller used for testing set as the Recipient.</li>
</ol>
<h3 id="sec:test-procedure-151">Test Procedure <a href="#sec:test-procedure-151" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;inactive instance&gt;.Activate()&#39;
            input_args: {
                key: &#39;TimeWindow.1.Start&#39;
                value: &#39;0&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.End&#39;
                value: &#39;120&#39;
            }
            input_args: {
                key: &#39;TimeWindow.1.Mode&#39;
                value: &#39;AnyTime&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.SoftwareVersion&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-161">Test Metrics <a href="#sec:test-metrics-161" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message within 2 minutes after step 1.</li>
<li>The Notify message has a OperationComplete element.</li>
<li>The EUT sends a Notify message with a Boot! event and a FirmwareUpdated argument set to true.</li>
<li>The EUT sends a GetResponse after step 3 with a SoftwareVersion parameter that matches the expected version.</li>
</ol>
<h2 id="sec:upgrading-the-agents-firmware---validated-firmware">9.6 Upgrading the Agent’s Firmware - Validated Firmware <a href="#sec:upgrading-the-agents-firmware---validated-firmware" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-159">Purpose <a href="#sec:purpose-159" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can validate the integrity of downloaded firmware.</p>
<h3 id="sec:functionality-tags-76">Functionality Tags <a href="#sec:functionality-tags-76" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile)</p>
<h3 id="sec:test-setup-160">Test Setup <a href="#sec:test-setup-160" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has a Subscription to the TransferComplete! event with the recipient being the instance used for testing.</li>
</ol>
<h3 id="sec:test-procedure-152">Test Procedure <a href="#sec:test-procedure-152" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure using an invalid checksum:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;inactive slot&gt;.Download()&#39;
            input_args {
                key: &#39;URL&#39;
                value: &#39;&lt;firmware URL&gt;&#39;
            }
            input_args {
                key: &#39;CheckSumAlgorithm&#39;
                value: &#39;SHA-1&#39;
            }
            input_args {
                key: &#39;CheckSum&#39;
                value: &#39;&lt;invalid checksum&gt;&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.DeviceInfo.FirmwareImage.&lt;previously used instance&gt;.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-162">Test Metrics <a href="#sec:test-metrics-162" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message with an OperationComplete element.</li>
<li>The ETU sends a Notify message with a TransferComplete! event.</li>
<li>The EUT sends a Get response with a Status parameter of ValidationFailed.</li>
</ol>
<h2 id="sec:upgrading-the-agents-firmware---download-to-active-bank">9.7 Upgrading the Agent’s Firmware - Download to Active Bank <a href="#sec:upgrading-the-agents-firmware---download-to-active-bank" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-160">Purpose <a href="#sec:purpose-160" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT is capable downloading and installing new firmware for EUTs that may support only the active firmware bank.</p>
<h3 id="sec:functionality-tags-77">Functionality Tags <a href="#sec:functionality-tags-77" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile)</p>
<h3 id="sec:test-setup-161">Test Setup <a href="#sec:test-setup-161" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that the EUT has a Subscription to the TransferComplete! event with the recipient being the instance used for testing.</li>
<li>Ensure the EUT has a Subscription to the Boot! event and the Controller used for testing is set as the Recipient.</li>
<li>Record the number of firmware banks the EUT supports.</li>
</ol>
<h3 id="sec:test-procedure-153">Test Procedure <a href="#sec:test-procedure-153" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;active firmware slot&gt;.Download()&#39;
            input_args {
                key: &#39;URL&#39;
                value: &#39;&lt;firmware URL&gt;&#39;
            }
            input_args {
                key: &#39;AutoActivate&#39;
                value: &#39;true&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-163">Test Metrics <a href="#sec:test-metrics-163" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a Notify message with an OperationComplete, if the EUT supports multiple firmware banks the OperationComplete may contain an error indicating that downloading to an active firmware slot is not allowed.</li>
<li>If an OperationComplete Notification is sent without an error, the EUT sends a Notify message with a Boot! event and a FirmwareUpdated argument set to true.</li>
</ol>
<h2 id="sec:upgrading-the-agents-firmware---cancelling-a-request-using-the-cancel-command">9.8 Upgrading the Agent’s Firmware - Cancelling a request using the Cancel() command <a href="#sec:upgrading-the-agents-firmware---cancelling-a-request-using-the-cancel-command" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-161">Purpose <a href="#sec:purpose-161" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can correctly cancel a Download() operation.</p>
<h3 id="sec:functionality-tags-78">Functionality Tags <a href="#sec:functionality-tags-78" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Firmware:1 profile and Device.LocalAgent.Request.{i}.Cancel() operation)</p>
<h3 id="sec:test-setup-162">Test Setup <a href="#sec:test-setup-162" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure the EUT has inactive firmware in one of FirmwareImage slots.</li>
<li>Ensure the EUT has a subscription to the Boot! event with the Controller used for testing set as the Recipient.</li>
</ol>
<h3 id="sec:test-procedure-154">Test Procedure <a href="#sec:test-procedure-154" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.DeviceInfo.FirmwareImage.&lt;valid instance&gt;.Activate()&#39;
            input_args {
                key: &#39;TimeWindow.1.Start&#39;
                value: &#39;120&#39;
            }
            input_args {
                key: &#39;TimeWindow.1.End&#39;
                value: &#39;500&#39;
            }
            input_args {
                key: &#39;TimeWindow.1.Mode&#39;
                value: &#39;AnyTime&#39;
            }
            send_resp: true
        }
    }
}</code></pre></li>
<li><p>Send an message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Request.&lt;returned in step 1&gt;.Cancel()&#39;
        }
    }
}</code></pre></li>
<li><p>Wait up to 500 seconds for a Boot! event from the EUT.</p></li>
<li><p>Send a Get message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: GET
}
body {
    request {
        get {
            param_paths: &#39;Device.LocalAgent.Request.&#39;
        }
    }
}</code></pre></li>
</ol>
<h3 id="sec:test-metrics-164">Test Metrics <a href="#sec:test-metrics-164" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends a OperationResponse after step 1 with a executed_command element of Activate() and a req_obj_path referencing an entry in the Device.LocalAgent.Request table.</li>
<li>The EUT never sends a Boot! event.</li>
<li>In the GetResponse from the EUT after step 4, the Request instance is either non-existent or the Status parameter of the relevant request is either Cancelled or Cancelling.</li>
</ol>
<h2 id="sec:adding-a-new-controller---onboardrequest">9.9 Adding a New Controller - OnBoardRequest <a href="#sec:adding-a-new-controller---onboardrequest" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-162">Purpose <a href="#sec:purpose-162" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT can handle the manual adding of a new Controller.</p>
<h3 id="sec:functionality-tags-79">Functionality Tags <a href="#sec:functionality-tags-79" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Controller:1 profile with the ability to create instances of the Device.LocalAgent.Controller. object, supports SendOnBoardRequest())</p>
<h3 id="sec:test-setup-163">Test Setup <a href="#sec:test-setup-163" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>A valid role instance is configured on the EUT for use with the new certificate.</li>
<li>A valid certificate instance is configured on the EUT</li>
<li>A secondary Controller is configured and ready to communicate with another endpoint.</li>
</ol>
<h3 id="sec:test-procedure-155">Test Procedure <a href="#sec:test-procedure-155" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure.</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            create_objs {
                obj_path: &#39;Device.LocalAgent.Controller.&#39;
                param_settings {
                        param: &#39;Alias&#39;
                        value: &#39;usp-111-Controller&#39;
                    }
                param_settings {
                        param: &#39;EndpointID&#39;
                        value: &#39;&lt;new Controller endpoint ID&gt;&#39;
                    }
                param_settings {
                        param: &#39;Enable&#39;
                        value: &#39;true&#39;
                    }
                param_settings {
                        param: &#39;AssignedRole&#39;
                        value: &#39;&lt;valid role instance&gt;&#39;
                    }
            }
        }
    }
}</code></pre></li>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
          create_objs {
            obj_path: &#39;Device.LocalAgent.Controller.&lt;new Controller instance&gt;.MTP.&#39;
            param_settings: {
                    param: &#39;Enable&#39;
                    value: &#39;true&#39;
                }
            param_settings: {
                    param: &#39;Protocol&#39;
                    value: &#39;&lt;supported MTP&gt;&#39;
                }
           }
              #  .
              #  .
              #  &lt;further parameters to configure supported MTP&gt;
              #  .
              #  .
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.LocalAgent.Controller.&lt;new instance&gt;.SendOnBoardRequest()&#39;
        }
    }
}</code></pre></li>
<li><p>Allow the secondary Controller to receive the OnBoardRequest() and send a NotifyResponse.</p></li>
</ol>
<h3 id="sec:test-metrics-165">Test Metrics <a href="#sec:test-metrics-165" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT is able to start a session with the secondary Controller.</li>
<li>The EUT sends a Notify message to the secondary Controller containing an OnBoardRequest element.</li>
</ol>
<h2 id="sec:use-of-the-boot-event-and-bootparameters">9.10 Use of the Boot! event and BootParameters <a href="#sec:use-of-the-boot-event-and-bootparameters" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-163">Purpose <a href="#sec:purpose-163" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the EUT correctly triggers the Boot! event and correctly includes the configured BootParameters.</p>
<h3 id="sec:functionality-tags-80">Functionality Tags <a href="#sec:functionality-tags-80" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Reboot:1 profile, supports Device.DeviceInfo.BootFirmwareImage)</p>
<h3 id="sec:test-setup-164">Test Setup <a href="#sec:test-setup-164" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-156">Test Procedure <a href="#sec:test-procedure-156" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: ADD
}
body {
    request {
        add {
            create_objs {
                    obj_path: &#39;Device.LocalAgent.Subscription.&#39;
                    param_settings {
                            param: &#39;NotifType&#39;
                            value: &#39;Event&#39;
                        }
                    param_settings {
                            param: &#39;ReferenceList&#39;
                            value: &#39;Device.Boot!&#39;
                        }
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;true&#39;
                        }
                }
            create_objs {
                    obj_path: &#39;Device.LocalAgent.Controller.&lt;Controller instance&gt;.BootParameter.&#39;
                    param_settings {
                            param: &#39;Enable&#39;
                            value: &#39;true&#39;
                        }
                    param_settings {
                            param: &#39;ParameterName&#39;
                            value: &#39;Device.DeviceInfo.BootFirmwareImage&#39;
                        }
                }
        }
    }
}</code></pre></li>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.Reboot()&#39;
        }
    }
}</code></pre></li>
<li><p>Wait for a Notify message from the EUT.</p></li>
</ol>
<h3 id="sec:test-metrics-166">Test Metrics <a href="#sec:test-metrics-166" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After step 2 the EUT sends a Notify message with an event element containing a ParameterMap argument with Device.DeviceInfo.BootFirmwareImage</li>
</ol>
<h2 id="sec:use-of-the-timer-event">9.11 Use of the Timer! Event <a href="#sec:use-of-the-timer-event" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-164">Purpose <a href="#sec:purpose-164" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to ensure the Timer! event can be configured, and the EUT correctly triggers the event.</p>
<h3 id="sec:functionality-tags-81">Functionality Tags <a href="#sec:functionality-tags-81" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports Device.ScheduleTimer() command)</p>
<h3 id="sec:test-setup-165">Test Setup <a href="#sec:test-setup-165" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that a Subscription object exists on the EUT with NotifType OperationComplete on Device.ScheduleTimer().</li>
</ol>
<h3 id="sec:test-procedure-157">Test Procedure <a href="#sec:test-procedure-157" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Operate message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
    msg_id: &#39;&lt;msg_id&gt;&#39;
    msg_type: OPERATE
}
body {
    request {
        operate {
            command: &#39;Device.ScheduleTimer()&#39;
            input_args {
                key: &#39;DelaySeconds&#39;
                value: &#39;60&#39;
            }
        }
    }
}</code></pre></li>
<li><p>Wait for the EUT to send a Notification.</p></li>
</ol>
<h3 id="sec:test-metrics-167">Test Metrics <a href="#sec:test-metrics-167" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>The EUT sends an OperateResponse with ScheduleTimer() in the executed_command element.</li>
<li>The EUT sends an OperationComplete Notify message with an event element containing ScheduleTimer().</li>
</ol>
<h1 id="sec:bulk-data-collection-test-cases">10 Bulk Data Collection Test Cases <a href="#sec:bulk-data-collection-test-cases" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h1>
<h2 id="sec:use-bulkdata-collection-using-http-and-json">10.1 Use BulkData collection using HTTP and JSON <a href="#sec:use-bulkdata-collection-using-http-and-json" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-165">Purpose <a href="#sec:purpose-165" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports JSON BulkData collection over HTTP.</p>
<h3 id="sec:functionality-tags-82">Functionality Tags <a href="#sec:functionality-tags-82" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols, “JSON” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-166">Test Setup <a href="#sec:test-setup-166" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured to support receiving JSON BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-158">Test Procedure <a href="#sec:test-procedure-158" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;JSON&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-168">Test Metrics <a href="#sec:test-metrics-168" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTP endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is JSON and is well formed (parseable).</li>
<li>The BulkData transfer contains the one parameter configured in step 4 and the name of the parameter matches the expected name “UpTime”.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-https-and-json">10.2 Use BulkData collection using HTTPS and JSON <a href="#sec:use-bulkdata-collection-using-https-and-json" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-166">Purpose <a href="#sec:purpose-166" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports JSON BulkData collection over HTTPS.</p>
<h3 id="sec:functionality-tags-83">Functionality Tags <a href="#sec:functionality-tags-83" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols, “JSON” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-167">Test Setup <a href="#sec:test-setup-167" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTPS endpoint that is accessible by the EUT is configured to support receiving JSON BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-159">Test Procedure <a href="#sec:test-procedure-159" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;JSON&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-169">Test Metrics <a href="#sec:test-metrics-169" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTPS endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is JSON and is well formed (parseable).</li>
<li>The BulkData transfer contains the one parameter configured in step 4 and the name of the parameter matches the expected name “UpTime”.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-http-and-csv">10.3 Use BulkData collection using HTTP and CSV <a href="#sec:use-bulkdata-collection-using-http-and-csv" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-167">Purpose <a href="#sec:purpose-167" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports CSV BulkData collection over HTTP.</p>
<h3 id="sec:functionality-tags-84">Functionality Tags <a href="#sec:functionality-tags-84" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols, “CSV” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-168">Test Setup <a href="#sec:test-setup-168" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured to support receiving CSV BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-160">Test Procedure <a href="#sec:test-procedure-160" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;CSV&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-170">Test Metrics <a href="#sec:test-metrics-170" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTP endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is CSV and is well formed (parseable).</li>
<li>The BulkData transfer contains the one parameter configured in step 4 and the name of the parameter matches the expected name “UpTime”.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-https-and-csv">10.4 Use BulkData collection using HTTPS and CSV <a href="#sec:use-bulkdata-collection-using-https-and-csv" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-168">Purpose <a href="#sec:purpose-168" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports CSV BulkData collection over HTTPS.</p>
<h3 id="sec:functionality-tags-85">Functionality Tags <a href="#sec:functionality-tags-85" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols, “CSV” ∈ Device.BulkData.EncodingTypes)</p>
<h3 id="sec:test-setup-169">Test Setup <a href="#sec:test-setup-169" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTPS endpoint that is accessible by the EUT is configured to support receiving CSV BulkData transfers.</li>
</ol>
<h3 id="sec:test-procedure-161">Test Procedure <a href="#sec:test-procedure-161" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;CSV&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-171">Test Metrics <a href="#sec:test-metrics-171" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTPS endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the BulkData transfer is CSV and is well formed (parseable).</li>
<li>The BulkData transfer contains the one parameter configured in step 4 and the name of the parameter matches the expected name “UpTime”.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-http-with-uri-parameters">10.5 Use BulkData collection using HTTP with URI Parameters <a href="#sec:use-bulkdata-collection-using-http-with-uri-parameters" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-169">Purpose <a href="#sec:purpose-169" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection over HTTP with extra URI parameters</p>
<h3 id="sec:functionality-tags-86">Functionality Tags <a href="#sec:functionality-tags-86" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-170">Test Setup <a href="#sec:test-setup-170" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured.</li>
</ol>
<h3 id="sec:test-procedure-162">Test Procedure <a href="#sec:test-procedure-162" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.HTTP.RequestURIParameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-172">Test Metrics <a href="#sec:test-metrics-172" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTP endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The EUT includes the EUT’s UpTime encoded into the URI using the name “UpTime”</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-https-with-uri-parameters">10.6 Use BulkData collection using HTTPS with URI Parameters <a href="#sec:use-bulkdata-collection-using-https-with-uri-parameters" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-170">Purpose <a href="#sec:purpose-170" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection over HTTPS with extra URI parameters</p>
<h3 id="sec:functionality-tags-87">Functionality Tags <a href="#sec:functionality-tags-87" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-171">Test Setup <a href="#sec:test-setup-171" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTPS endpoint that is accessible by the EUT is configured.</li>
</ol>
<h3 id="sec:test-procedure-163">Test Procedure <a href="#sec:test-procedure-163" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of https endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.HTTP.RequestURIParameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-173">Test Metrics <a href="#sec:test-metrics-173" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTPS endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The EUT includes the EUT’s UpTime encoded into the URI using the name “UpTime”</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:bulkdata-collection-retry-mechanism-over-http">10.7 BulkData collection retry mechanism over HTTP <a href="#sec:bulkdata-collection-retry-mechanism-over-http" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-171">Purpose <a href="#sec:purpose-171" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection retry mechanism.</p>
<h3 id="sec:functionality-tags-88">Functionality Tags <a href="#sec:functionality-tags-88" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-172">Test Setup <a href="#sec:test-setup-172" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured.</li>
</ol>
<h3 id="sec:test-procedure-164">Test Procedure <a href="#sec:test-procedure-164" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
          param_settings {
               param: &#39;HTTP.RetryEnable&#39;
               value: &#39;true&#39;
           }
          param_settings {
               param: &#39;HTTP.RetryMinimumWaitInterval&#39;
               value: &#39;5&#39;
           }
          param_settings {
               param: &#39;HTTP.RetryIntervalMultiplier&#39;
               value: &#39;2000&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Disable the HTTP BulkData collection endpoint.</p></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to attempt to send a BulkData transfer.</p></li>
<li><p>Wait for 13 seconds for the EUT to retry the BulkData transfer.</p></li>
<li><p>Wait for 23 seconds for the EUT to retry the BulkData transfer.</p></li>
<li><p>Enable the HTTP BulkData collection endpoint</p></li>
<li><p>Wait for 43 seconds for the EUT to retry the BulkData transfer.</p></li>
<li><p>Wait for the EUT to send a BulkData transfer</p></li>
</ol>
<h3 id="sec:test-metrics-174">Test Metrics <a href="#sec:test-metrics-174" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTP endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The EUT retries sending the BulkData transfer 3 times with each time occuring within the expected retry interval.</li>
<li>The EUT does not attempt to retry the BulkData transfer after receiving a positive response in step 9.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are encoded as URI parameters in each request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-http-with-wildcard-parameter">10.8 Use BulkData collection using HTTP with wildcard parameter <a href="#sec:use-bulkdata-collection-using-http-with-wildcard-parameter" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-172">Purpose <a href="#sec:purpose-172" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection over HTTP with a wildcarded parameter</p>
<h3 id="sec:functionality-tags-89">Functionality Tags <a href="#sec:functionality-tags-89" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-173">Test Setup <a href="#sec:test-setup-173" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured.</li>
<li>Ensure there are at least 2 BootParameters configured for the test controller.</li>
</ol>
<h3 id="sec:test-procedure-165">Test Procedure <a href="#sec:test-procedure-165" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;Enabled&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.*.BootParameter.*.Enable&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-175">Test Metrics <a href="#sec:test-metrics-175" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTP endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>Ensure at least two “Enable” are in the BulkData transfer with the parameter names matching the following expression: <code>Enabled\.[1-9][0-9]*\.[1-9][0-9]*</code></li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-using-http-with-object-path">10.9 Use BulkData collection using HTTP with Object Path <a href="#sec:use-bulkdata-collection-using-http-with-object-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-173">Purpose <a href="#sec:purpose-173" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection over HTTP with an Object Path</p>
<h3 id="sec:functionality-tags-90">Functionality Tags <a href="#sec:functionality-tags-90" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “HTTP” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-174">Test Setup <a href="#sec:test-setup-174" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure a HTTP endpoint that is accessible by the EUT is configured.</li>
</ol>
<h3 id="sec:test-procedure-166">Test Procedure <a href="#sec:test-procedure-166" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;HTTP&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;Supported Encoding type&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;TestController&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.&lt;controller instance&gt;.&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-176">Test Metrics <a href="#sec:test-metrics-176" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfers to the HTTPS endpoint within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>Ensure that all the parameters included in the BulkData transfer match <code>TestController.&lt;parameter&gt;</code> and that all expected parameters are present.</li>
<li>Ensure the Manufacturer OUI, Product Class and Serial Number or the USP Endpoint ID are also encoded as URI parameters in the request.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-push-event">10.10 Use BulkData collection Push event <a href="#sec:use-bulkdata-collection-push-event" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-174">Purpose <a href="#sec:purpose-174" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection via the Push event.</p>
<h3 id="sec:functionality-tags-91">Functionality Tags <a href="#sec:functionality-tags-91" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “USPEventNotif” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-175">Test Setup <a href="#sec:test-setup-175" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-167">Test Procedure <a href="#sec:test-procedure-167" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;USPEventNotif&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;JSON or CSV&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;UpTime&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.DeviceInfo.UpTime&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.LocalAgent.Subscription.&#39;
          param_settings {
               param: &#39;NotifType&#39;
               value: &#39;Event&#39;
           }
          param_settings {
               param: &#39;ReferenceList&#39;
               value: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Push!&#39;
           }
          param_settings {
               param: &#39;Enable&#39;
               value: &#39;true&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-177">Test Metrics <a href="#sec:test-metrics-177" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfer Push! events to the controller within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the Data parameter in the Push! notification is well formed (parseable).</li>
<li>The BulkData transfer contains the one parameter configured in step 4 and the name of the parameter matches the expected name “UpTime”.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-push-event-with-wildcard-path">10.11 Use BulkData collection Push event with Wildcard path <a href="#sec:use-bulkdata-collection-push-event-with-wildcard-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-175">Purpose <a href="#sec:purpose-175" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection via the Push event using a wildcard path.</p>
<h3 id="sec:functionality-tags-92">Functionality Tags <a href="#sec:functionality-tags-92" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “USPEventNotif” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-176">Test Setup <a href="#sec:test-setup-176" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
<li>Ensure that there are at least 2 BootParameters configured for the test Controller.</li>
</ol>
<h3 id="sec:test-procedure-168">Test Procedure <a href="#sec:test-procedure-168" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;USPEventNotif&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;JSON or CSV&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;Enabled&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.*.BootParameter.*.Enable&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.LocalAgent.Subscription.&#39;
          param_settings {
               param: &#39;NotifType&#39;
               value: &#39;Event&#39;
           }
          param_settings {
               param: &#39;ReferenceList&#39;
               value: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Push!&#39;
           }
          param_settings {
               param: &#39;Enable&#39;
               value: &#39;true&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-178">Test Metrics <a href="#sec:test-metrics-178" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfer Push! events to the controller within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the Data parameter in the Push! notification is well formed (parseable).</li>
<li>The BulkData transfer contains at least 2 parameters, one for each of the configured BootParameters and the name of the parameters match the expected name <code>Enabled\.[1-9][0-9]*\.[1-9][0-9]*</code>.</li>
</ol>
<h2 id="sec:use-bulkdata-collection-push-event-with-object-path">10.12 Use BulkData collection Push event with Object path <a href="#sec:use-bulkdata-collection-push-event-with-object-path" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h2>
<h3 id="sec:purpose-176">Purpose <a href="#sec:purpose-176" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>The purpose of this test is to verify that EUT supports BulkData collection via the Push event using an object path.</p>
<h3 id="sec:functionality-tags-93">Functionality Tags <a href="#sec:functionality-tags-93" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<p>Conditional Mandatory (supports BulkDataColl:1, “USPEventNotif” ∈ Device.BulkData.Protocols)</p>
<h3 id="sec:test-setup-177">Test Setup <a href="#sec:test-setup-177" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>Ensure that the EUT and test equipment have the necessary information to send and receive USP Records to each other.</li>
</ol>
<h3 id="sec:test-procedure-169">Test Procedure <a href="#sec:test-procedure-169" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li><p>Send an Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&#39;
          param_settings {
               param: &#39;Protocol&#39;
               value: &#39;USPEventNotif&#39;
           }
          param_settings {
               param: &#39;EncodingType&#39;
               value: &#39;&lt;JSON or CSV&gt;&#39;
           }
          param_settings {
               param: &#39;ReportingInterval&#39;
               value: &#39;max(60, Device.BulkData.MinReportingInterval)&#39;
           }
          param_settings {
               param: &#39;HTTP.URL&#39;
               value: &#39;&lt;URL of http endpoint&gt;&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Allow the EUT to send an AddResponse</p></li>
<li><p>Record the instance identifiers of the created objects as reported by the EUT.</p></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Parameter.&#39;
          param_settings {
               param: &#39;Name&#39;
               value: &#39;Controller&#39;
           }
          param_settings {
               param: &#39;Reference&#39;
               value: &#39;Device.LocalAgent.Controller.&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Add message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: ADD
}
body {
  request {
    add {
      allow_partial: false
      create_objs {
          obj_path: &#39;Device.LocalAgent.Subscription.&#39;
          param_settings {
               param: &#39;NotifType&#39;
               value: &#39;Event&#39;
           }
          param_settings {
               param: &#39;ReferenceList&#39;
               value: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.Push!&#39;
           }
          param_settings {
               param: &#39;Enable&#39;
               value: &#39;true&#39;
           }
        }
    }
  }
}</code></pre></li>
<li><p>Send a Set message to the EUT with the following structure:</p>
<pre data-filter="pbv" type="Msg"><code>header {
  msg_id: &#39;&lt;msg_id&gt;&#39;
  msg_type: SET
}
body {
  request {
    set {
        allow_partial: false
        update_objs {
            obj_path: &#39;Device.BulkData.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
        update_objs {
            obj_path: &#39;Device.BulkData.Profile.&lt;instance identifier&gt;.&#39;
            param_settings {
              param: &#39;Enable&#39;
              value: &#39;true&#39;
            }
          }
    }
  }
}</code></pre></li>
<li><p>Wait up to 130 (<code>(ReportingInterval * 2) + 10</code>) seconds</p></li>
</ol>
<h3 id="sec:test-metrics-179">Test Metrics <a href="#sec:test-metrics-179" class="headerlink" title="Permalink to this header"><img src="permalink.png" style="width:0.8em" /></a></h3>
<ol>
<li>After enabling the BulkData profile the EUT sent 2 BulkData transfer Push! events to the controller within 130 (<code>(ReportingInterval * 2) + 10</code>) seconds.</li>
<li>The encoding of the Data parameter in the Push! notification is well formed (parseable).</li>
<li>The BulkData transfer contains at parameters with names using the prefix “Controller”.</li>
</ol>
</div>
</body>
</html>
